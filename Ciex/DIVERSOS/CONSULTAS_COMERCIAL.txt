create or replace package CONSULTAS_COMERCIAL is

--***********************************************

	PROCEDURE PED_RESUMIDO(P_ESCRIT in varchar2 , P_DIV in varchar2 , P_SUBDIV in varchar2 , P_FORN in varchar2 , P_BOOK_INI in varchar2 , P_BOOK_FIM in varchar2 , P_PREV_EMB_INI in varchar2, P_PREV_EMB_FIM in varchar2, P_PAIS in varchar2, P_CLIENTE in varchar2 , P_PORTO in varchar2, P_NAVIO in varchar2);


--***********************************************

	PROCEDURE INT_EMBARQUE(P_ESCRIT in varchar2 , P_DIV in varchar2 , P_SUBDIV in varchar2 , P_FORN in varchar2 , P_BOOK_INI in varchar2 , P_BOOK_FIM in varchar2 , P_PREV_EMB_INI in varchar2, P_PREV_EMB_FIM in varchar2, P_PAIS in varchar2, P_CLIENTE in varchar2 , P_PORTO in varchar2, P_NAVIO in varchar2);

--***********************************************

	PROCEDURE NEGOCIOS_COMERCIAL(P_ESCRIT in varchar2 , P_DIV in varchar2 , P_SUBDIV in varchar2, P_PEDIDO in varchar2, P_BOOK_INI in varchar2 , P_BOOK_FIM in varchar2 , P_PREV_EMB_INI in varchar2, P_PREV_EMB_FIM in varchar2, P_PAIS in varchar2, P_CLIENTE in varchar2 , P_PORTO_CARGA in varchar2, P_PORTO_DESTINO in varchar2, P_LAYDAY_INI in varchar2, P_LAYDAY_FIM in varchar2);

--***********************************************

	PROCEDURE NEG_COMERCIAL_COMP(P_ESCRIT in varchar2 , P_DIV in varchar2 , P_SUBDIV in varchar2, P_PEDIDO in varchar2, P_BOOK_INI in varchar2 , P_BOOK_FIM in varchar2 , P_PREV_EMB_INI in varchar2, P_PREV_EMB_FIM in varchar2, P_PAIS in varchar2, P_CLIENTE in varchar2 , P_PORTO_CARGA in varchar2, P_PORTO_DESTINO in varchar2, P_LAYDAY_INI in varchar2, P_LAYDAY_FIM in varchar2, P_LOTE in varchar2, P_OV in varchar2,P_NE_ITEM in varchar2, P_P in varchar2,P_TBN in varchar2,P_PO in varchar2,P_BL_CODE in varchar2, P_NAVIO in varchar2, P_BL_DATA_INI in varchar2,P_BL_DATA_FIM in varchar2);

--***********************************************

	PROCEDURE NEG_FECH_ANALITICO(P_ESCRIT in varchar2 , P_DIV in varchar2 , P_SUBDIV in varchar2 , P_FORN in varchar2 , P_BOOK_INI in varchar2 , P_BOOK_FIM in varchar2 , P_PREV_EMB_INI in varchar2, P_PREV_EMB_FIM in varchar2, P_PAIS in varchar2, P_CLIENTE in varchar2 , P_PORTO in varchar2, P_NAVIO in varchar2,P_PROD in varchar2);

--***********************************************

	PROCEDURE NEG_FECH_SINT_PAIS(P_ESCRIT in varchar2 , P_DIV in varchar2 , P_SUBDIV in varchar2 , P_FORN in varchar2 , P_BOOK_INI in varchar2 , P_BOOK_FIM in varchar2 , P_PREV_EMB_INI in varchar2, P_PREV_EMB_FIM in varchar2, P_PAIS in varchar2, P_CLIENTE in varchar2 , P_PORTO in varchar2, P_PROD in varchar2);

--***********************************************

END;

/


create or replace package body CONSULTAS_COMERCIAL is
--***********************************************

	PROCEDURE PED_RESUMIDO (P_ESCRIT in varchar2 , P_DIV in varchar2 , P_SUBDIV in varchar2 , P_FORN in varchar2 , P_BOOK_INI in varchar2 , P_BOOK_FIM in varchar2 , P_PREV_EMB_INI in varchar2, P_PREV_EMB_FIM in varchar2, P_PAIS in varchar2, P_CLIENTE in varchar2 , P_PORTO in varchar2,P_NAVIO in varchar2) IS
	begin
	delete from CXRJ.PED_RES;
	commit;

    IF P_NAVIO = '%' THEN

	for curr in ( SELECT
	PI.PED_REF, PI.USUÁRIO_FINAL AS USUÁRIO_FINAL,
	PI.PROD,PI.PO,PA.ABREVIATURA, PI.ITEM,
	PI.DESCARGA_PORTO AS DESCARGA_PORTO,PI.NE_ITEM,PI.LOTE,
	PI.PROD_DESCR,P.PAÍS_DESTINO AS PAÍS_DESTINO,P.CARGA_PORTO,
	P.PED_DATA, P.FORNECEDOR,P.EXP_COND_VENDA AS CCOMPRA,
	P.IMP_COND_VENDA AS CVENDA , P.EMB_PREV,PI.NOMINAL_METRIC_TONS AS NOMINAL,
	PI.QTD_PED_UNID AS TOT_EMB,PI.PESO_LÍQUIDO AS TOT_PROD,
	PI.PREÇO_UNITÁRIO_IMP,PI.PREÇO_UNITÁRIO_FORNECEDOR,
	PI.ULT_DATA_BL, PI.ESPESSURA_TIPO,
	PI.DIMENSÃO ,PI.TÊMPERA, PI.REVESTIMENTO
FROM
	CXRJ.PED P, CXRJ.PAÍS PA,
	(
	SELECT
		PI.PED_REF, PI.ITEM, PI.NOMINAL_METRIC_TONS ,
		TT.QTD_PED_UNID, TT.ULT_DATA_BL, PI.USUÁRIO_FINAL,
		PI.PROD,PI.PO,PI.DESCARGA_PORTO, PI.LOTE,PI.NE_ITEM,
		PI.PROD_DESCR,PI.PESO_LÍQUIDO,PI.PREÇO_UNITÁRIO_IMP,
		PI.PREÇO_UNITÁRIO_FORNECEDOR, PI.ESPESSURA_TIPO,
		PI.TÊMPERA, PI.REVESTIMENTO,
		PI.DIMENSÃO
	FROM
		CXRJ.PED_ITEM PI,
		(
		SELECT
			BC.PED_REF, BC.PED_ITEM, SUM(BC.QTD_PED_UNID) AS QTD_PED_UNID,
			MAX(BL_DATA) ULT_DATA_BL
		FROM
			CXRJ.BL_CARGA BC, CXRJ.BL B
		WHERE
			BC.VIAGEM_REF = B.VIAGEM_REF AND BC.BL_SEQ = B.SEQ
			AND SUBSTR(BC.PED_REF,0,2) LIKE P_ESCRIT AND SUBSTR(BC.PED_REF,4,1) LIKE P_DIV
		GROUP BY
			BC.PED_REF,BC.PED_ITEM
		) TT
	WHERE
		PI.PED_REF=TT.PED_REF(+) AND PI.ITEM=TT.PED_ITEM(+)
		AND SUBSTR(PI.PED_REF,0,2) LIKE P_ESCRIT AND SUBSTR(PI.PED_REF,4,1) LIKE P_DIV
	) PI
WHERE
	NVL(P.PED_DATA,TO_DATE('01/01/1900','DD/MM/YYYY')) >=TO_DATE(P_BOOK_INI,'DD/MM/YYYY') AND
	nvl(PI.USUÁRIO_FINAL,'%') LIKE P_CLIENTE
	AND nvl(PI.DESCARGA_PORTO,'%') LIKE P_PORTO
	AND SUBSTR(P.REF,0,2) LIKE P_ESCRIT AND SUBSTR(P.REF,4,1) LIKE P_DIV
	AND NVL(P.PED_DATA,TO_DATE('01/01/3000','DD/MM/YYYY')) <=TO_DATE(P_BOOK_FIM,'DD/MM/YYYY') AND
	nvl(P.PAÍS_DESTINO,'%') LIKE P_PAIS AND NVL(P.EMB_PREV,TO_DATE('01/01/1900','DD/MM/YYYY')) >=TO_DATE(P_PREV_EMB_INI,'DD/MM/YYYY')
	AND NVL(P.EMB_PREV,TO_DATE('01/01/3000','DD/MM/YYYY')) <=TO_DATE(P_PREV_EMB_FIM,'DD/MM/YYYY')
	AND nvl(P.FORNECEDOR,'%') LIKE P_FORN AND SUBSTR(P.REF,9,2) LIKE P_SUBDIV
	AND  P.REF = PI.PED_REF(+) AND P.PAÍS_DESTINO = PA.COD ) loop
			insert into CXRJ.PED_RES (PED_REF,USUÁRIO_FINAL,PROD,PO,ABREVIATURA,ITEM,DESCARGA_PORTO,NE_ITEM,LOTE,PROD_DESCR,PAÍS_DESTINO,CARGA_PORTO,PED_DATA,FORNECEDOR,CCOMPRA,CVENDA,EMB_PREV,NOMINAL,TOT_EMB,TOT_PROD,
PREÇO_UNITÁRIO_IMP,PREÇO_UNITÁRIO_FORNECEDOR,ULT_DATA_BL,ESPESSURA_TIPO
,DIMENSÃO,TÊMPERA,REVESTIMENTO) VALUES (CURR.PED_REF, CURR.USUÁRIO_FINAL,CURR.PROD,CURR.PO,CURR.ABREVIATURA,CURR.ITEM,CURR.DESCARGA_PORTO, CURR.NE_ITEM,CURR.LOTE,CURR.PROD_DESCR,CURR.PAÍS_DESTINO,CURR.CARGA_PORTO,CURR.PED_DATA, CURR.FORNECEDOR,CURR.CCOMPRA,CURR.CVENDA,CURR.EMB_PREV,CURR.NOMINAL,CURR.TOT_EMB,
CURR.TOT_PROD,CURR.PREÇO_UNITÁRIO_IMP,CURR.PREÇO_UNITÁRIO_FORNECEDOR,CURR.ULT_DATA_BL
,CURR.ESPESSURA_TIPO,CURR.DIMENSÃO,CURR.TÊMPERA,CURR.REVESTIMENTO);
		end loop;
	commit;

     ELSE

	for curr in ( SELECT DISTINCT
	PI.PED_REF, PI.USUÁRIO_FINAL AS USUÁRIO_FINAL,
	PI.PROD,PI.PO,PA.ABREVIATURA, PI.ITEM,
	PI.DESCARGA_PORTO AS DESCARGA_PORTO,PI.NE_ITEM,PI.LOTE,
	PI.PROD_DESCR,P.PAÍS_DESTINO AS PAÍS_DESTINO,P.CARGA_PORTO,
	P.PED_DATA, P.FORNECEDOR,P.EXP_COND_VENDA AS CCOMPRA,
	P.IMP_COND_VENDA AS CVENDA , P.EMB_PREV,PI.NOMINAL_METRIC_TONS AS NOMINAL,
	PI.QTD_PED_UNID AS TOT_EMB,PI.PESO_LÍQUIDO AS TOT_PROD,
	PI.PREÇO_UNITÁRIO_IMP,PI.PREÇO_UNITÁRIO_FORNECEDOR,
	PI.ULT_DATA_BL, PI.ESPESSURA_TIPO,
	PI.DIMENSÃO ,PI.TÊMPERA, PI.REVESTIMENTO
FROM
	CXRJ.PED P, CXRJ.PAÍS PA, CXRJ.VIAGEM, CXRJ.BL_CARGA,
	(
	SELECT
		PI.PED_REF, PI.ITEM, PI.NOMINAL_METRIC_TONS ,
		TT.QTD_PED_UNID, TT.ULT_DATA_BL, PI.USUÁRIO_FINAL,
		PI.PROD,PI.PO,PI.DESCARGA_PORTO, PI.LOTE,PI.NE_ITEM,
		PI.PROD_DESCR,PI.PESO_LÍQUIDO,PI.PREÇO_UNITÁRIO_IMP,
		PI.PREÇO_UNITÁRIO_FORNECEDOR, PI.ESPESSURA_TIPO,
		PI.TÊMPERA, PI.REVESTIMENTO,
		PI.DIMENSÃO
	FROM
		CXRJ.PED_ITEM PI,
		(
		SELECT
			BC.PED_REF, BC.PED_ITEM, SUM(BC.QTD_PED_UNID) AS QTD_PED_UNID,
			MAX(BL_DATA) ULT_DATA_BL
		FROM
			CXRJ.BL_CARGA BC, CXRJ.BL B
		WHERE
			BC.VIAGEM_REF = B.VIAGEM_REF AND BC.BL_SEQ = B.SEQ
			AND SUBSTR(BC.PED_REF,0,2) LIKE P_ESCRIT AND SUBSTR(BC.PED_REF,4,1) LIKE P_DIV
		GROUP BY
			BC.PED_REF,BC.PED_ITEM
		) TT
	WHERE
		PI.PED_REF=TT.PED_REF(+) AND PI.ITEM=TT.PED_ITEM(+)
		AND SUBSTR(PI.PED_REF,0,2) LIKE P_ESCRIT AND SUBSTR(PI.PED_REF,4,1) LIKE P_DIV
	) PI
WHERE
	NVL(P.PED_DATA,TO_DATE('01/01/1900','DD/MM/YYYY')) >=TO_DATE(P_BOOK_INI,'DD/MM/YYYY') AND
	nvl(PI.USUÁRIO_FINAL,'%') LIKE P_CLIENTE
	AND nvl(PI.DESCARGA_PORTO,'%') LIKE P_PORTO
	AND SUBSTR(P.REF,0,2) LIKE P_ESCRIT AND SUBSTR(P.REF,4,1) LIKE P_DIV
	AND NVL(P.PED_DATA,TO_DATE('01/01/3000','DD/MM/YYYY')) <=TO_DATE(P_BOOK_FIM,'DD/MM/YYYY') AND
	nvl(P.PAÍS_DESTINO,'%') LIKE P_PAIS AND NVL(P.EMB_PREV,TO_DATE('01/01/1900','DD/MM/YYYY')) >=TO_DATE(P_PREV_EMB_INI,'DD/MM/YYYY')
	AND NVL(P.EMB_PREV,TO_DATE('01/01/3000','DD/MM/YYYY')) <=TO_DATE(P_PREV_EMB_FIM,'DD/MM/YYYY')
	AND nvl(P.FORNECEDOR,'%') LIKE P_FORN AND SUBSTR(P.REF,9,2) LIKE P_SUBDIV
	AND  P.REF = PI.PED_REF(+) AND P.PAÍS_DESTINO = PA.COD
	AND NVL(VIAGEM.NAVIO,'%') LIKE P_NAVIO AND VIAGEM.REF = BL_CARGA.VIAGEM_REF AND BL_CARGA.PED_REF(+) = P.REF
	) loop
			insert into CXRJ.PED_RES (PED_REF,USUÁRIO_FINAL,PROD,PO,ABREVIATURA,ITEM,DESCARGA_PORTO,NE_ITEM,LOTE,PROD_DESCR,PAÍS_DESTINO,CARGA_PORTO,PED_DATA,FORNECEDOR,CCOMPRA,CVENDA,EMB_PREV,NOMINAL,TOT_EMB,TOT_PROD,
PREÇO_UNITÁRIO_IMP,PREÇO_UNITÁRIO_FORNECEDOR,ULT_DATA_BL,ESPESSURA_TIPO
,DIMENSÃO,TÊMPERA,REVESTIMENTO) VALUES (CURR.PED_REF, CURR.USUÁRIO_FINAL,CURR.PROD,CURR.PO,CURR.ABREVIATURA,CURR.ITEM,CURR.DESCARGA_PORTO, CURR.NE_ITEM,CURR.LOTE,CURR.PROD_DESCR,CURR.PAÍS_DESTINO,CURR.CARGA_PORTO,CURR.PED_DATA, CURR.FORNECEDOR,CURR.CCOMPRA,CURR.CVENDA,CURR.EMB_PREV,CURR.NOMINAL,CURR.TOT_EMB,
CURR.TOT_PROD,CURR.PREÇO_UNITÁRIO_IMP,CURR.PREÇO_UNITÁRIO_FORNECEDOR,CURR.ULT_DATA_BL
,CURR.ESPESSURA_TIPO,CURR.DIMENSÃO,CURR.TÊMPERA,CURR.REVESTIMENTO);
		end loop;
	commit;
     END IF;

	end;


--***********************************************

	PROCEDURE INT_EMBARQUE (P_ESCRIT in varchar2 , P_DIV in varchar2 , P_SUBDIV in varchar2 , P_FORN in varchar2 , P_BOOK_INI in varchar2 , P_BOOK_FIM in varchar2 , P_PREV_EMB_INI in varchar2, P_PREV_EMB_FIM in varchar2, P_PAIS in varchar2, P_CLIENTE in varchar2 , P_PORTO in varchar2,P_NAVIO in varchar2) IS

	begin
	delete from CXRJ.INTR_EMB;
	commit;

	for CURR in (SELECT
	P.EMB_PREV, PI.PED_REF, P.IMP_COND_RECEB,
	P.PAÍS_DESTINO, PI.OV, PI.PROD,PI.DESCARGA_PORTO, PI.FSE AS FSE, 	PI.TOTAL_EMB,PI.PO,P.FORNECEDOR, P.PED_DATA,
	PI.USUÁRIO_FINAL AS USUÁRIO_FINAL,PI.LAYDAY_INÍCIO AS Início,
	PI.LAYDAY_FINAL AS FIM, P.IMP_COND_VENDA AS Venda,
	P.EXP_COND_VENDA AS Compra,SUM(PI.NOMINAL_METRIC_TONS) AS Nominal, 	SUM(ITEM_EMBARCADO.QTD_PED_UNID) AS Fechado,NCN.NAVIO
FROM
	CXRJ.PED_ITEM PI,CXRJ.PED P,
	(
	SELECT
		PED_REF, PED_ITEM,  MAX(NAVIO) navio, MAX(BL_DATA) BL_DATA
	FROM
		CXRJ.NEGOCIO_COMERCIAL_NAVIO
	WHERE
		SUBSTR(NEGOCIO_COMERCIAL_NAVIO.PED_REF,0,2) LIKE P_ESCRIT
		AND SUBSTR(NEGOCIO_COMERCIAL_NAVIO.PED_REF,4,1) LIKE P_DIV

	GROUP BY
		PED_REF, PED_ITEM
	) NCN,
	(SELECT
		Emb_Carga_NCANCEL.PED_REF, Emb_Carga_NCANCEL.PED_Item, 		Sum(Emb_Carga_NCANCEL.QTD_PED_UNID) AS QTD_PED_UNID
	FROM
		(SELECT
			BC.ped_ref, BC.ped_Item, BC.qtd_ped_unid
		FROM
			CXRJ.BL_CARGA BC, CXRJ.FECH_SUBSTITUÍDO FS
		WHERE
			BC.VIAGEM_REF = FS.SUBSTITUÍDO(+)
			AND SUBSTR(BC.PED_REF,0,2) LIKE P_ESCRIT
			AND SUBSTR(BC.PED_REF,4,1) LIKE P_DIV
		) EMB_CARGA_NCANCEL
	GROUP BY
		Emb_Carga_NCANCEL.PED_REF, Emb_Carga_NCANCEL.PED_Item
	) ITEM_EMBARCADO
WHERE
	NVL(P.PED_DATA,'01/01/1900') >=TO_DATE(P_BOOK_INI,'DD/MM/YYYY')
	and nvl(PI.USUÁRIO_FINAL,'%') LIKE P_CLIENTE
	AND nvl(PI.DESCARGA_PORTO,'%') LIKE P_PORTO AND NVL(NCN.NAVIO,'%') LIKE P_NAVIO
	AND SUBSTR(P.REF,0,2) LIKE P_ESCRIT AND SUBSTR(P.REF,4,1) LIKE P_DIV
	AND NVL(P.PED_DATA,TO_DATE('01/01/3000','DD/MM/YYYY')) <=TO_DATE(P_BOOK_FIM,'DD/MM/YYYY')
	AND nvl(P.PAÍS_DESTINO,'%') LIKE P_PAIS
	AND NVL(P.EMB_PREV,TO_DATE('01/01/1900','DD/MM/YYYY')) >=TO_DATE(P_PREV_EMB_INI,'DD/MM/YYYY')
	AND NVL(P.EMB_PREV,TO_DATE('01/01/3000','DD/MM/YYYY')) <=TO_DATE(P_PREV_EMB_FIM,'DD/MM/YYYY')
	AND nvl(P.FORNECEDOR,'%') LIKE P_FORN AND SUBSTR(P.REF,9,2) LIKE P_SUBDIV
	AND P.REF = PI.PED_REF(+) AND PI.TOTAL_EMB=0
	AND PI.ITEM = ITEM_EMBARCADO.PED_ITEM(+)
	AND PI.PED_REF = ITEM_EMBARCADO.PED_REF(+)AND PI.PED_REF = NCN.PED_REF(+)
	AND PI.ITEM = NCN.PED_ITEM(+)
GROUP BY
	P.EMB_PREV, PI.PED_REF,P.PAÍS_DESTINO, PI.OV,
	PI.PROD,PI.DESCARGA_PORTO, PI.FSE, PI.TOTAL_EMB,PI.PO, P.PED_DATA, 	PI.USUÁRIO_FINAL,PI.LAYDAY_INÍCIO,PI.LAYDAY_FINAL, 	P.IMP_COND_VENDA,P.EXP_COND_VENDA,NCN.NAVIO,P.IMP_COND_RECEB,P.FORNECEDOR ) loop
			insert into CXRJ.INTR_EMB (EMB_PREV, PED_REF, IMP_COND_RECEB, PAÍS_DESTINO, OV, PROD,DESCARGA_PORTO, FSE,TOTAL_EMB,PO,FORNECEDOR,PED_DATA,USUÁRIO_FINAL,Início,FIM,Venda, Compra, Nominal,Fechado, NAVIO) VALUES (CURR.EMB_PREV, CURR.PED_REF, CURR.IMP_COND_RECEB,
CURR.PAÍS_DESTINO, CURR.OV, CURR.PROD,CURR.DESCARGA_PORTO, CURR.FSE,CURR.TOTAL_EMB,
CURR.PO,CURR.FORNECEDOR,
CURR.PED_DATA,CURR.USUÁRIO_FINAL,CURR.Início,CURR.FIM,CURR.Venda, CURR.Compra,

CURR.Nominal,CURR.Fechado,CURR.NAVIO);

		end loop;
	commit;

    	end;


--***********************************************

PROCEDURE NEGOCIOS_COMERCIAL (P_ESCRIT in varchar2 , P_DIV in varchar2 , P_SUBDIV in varchar2 , P_PEDIDO in varchar2, P_BOOK_INI in varchar2 , P_BOOK_FIM in varchar2 , P_PREV_EMB_INI in varchar2, P_PREV_EMB_FIM in varchar2, P_PAIS in varchar2, P_CLIENTE in varchar2 , P_PORTO_CARGA in varchar2, P_PORTO_DESTINO in varchar2, P_LAYDAY_INI in varchar2, P_LAYDAY_FIM in varchar2) IS
	begin
	delete from CXRJ.NEG_COMERCIAL;
	commit;
	for curr in (select
	DECODE(SUBSTR(P.REF,6,1),'9' ,'19'||SUBSTR(P.REF,6,2),'8' ,'19'||SUBSTR(P.REF,6,2) ,'20'||SUBSTR(P.REF,6,2)) ORDREF,
	p.ref ped_ref, p.país_destino, p.imp_cond_venda,
	p.fornecedor_cond_venda, p.ped_data, p.carga_porto, p.emb_prev,
	pi.item ped_item, pi.layday_final, pi.layday_início, pi.p,pi.ov,
	pi.ne_item, pi.lote, pi.tbn, pi.bl_code, pi.po, pi.usuário_final,
	pi.prod, pi.dimensão, pi.revestimento, pi.têmpera,
	pi.norma_produção, pi.embalagem_peso_min,
	pi.embalagem_peso_max, pi.NOMINAL_METRIC_TONS, pi.descarga_porto,
	pi.PESO_LÍQUIDO , pi.PREÇO_UNITÁRIO_FORNECEDOR,
	pi.PREÇO_UNITÁRIO_IMP, bl_carga.QTD_PED_UNID
from
	CXRJ.ped p, CXRJ.ped_item pi,
	( select
		bl_carga.ped_ref, bl_carga.ped_item,
		sum(bl_carga.qtd_ped_unid) qtd_ped_unid
	from
		CXRJ.bl_carga
	where
		SUBSTR(bl_carga.ped_ref,0,2) like P_ESCRIT
		AND SUBSTR(bl_carga.ped_ref,4,1) like P_DIV
	group
		by bl_carga.ped_ref, bl_carga.ped_item
	) bl_carga
where
	p.ref = pi.ped_ref (+) and pi.ped_ref = bl_carga.ped_ref (+)
	and pi.item = bl_carga.ped_item (+)   AND nvl(pi.PED_REF,'%') like P_PEDIDO
	AND NVL(P.PED_DATA,TO_DATE('01/01/1900','DD/MM/YYYY')) >=TO_DATE(P_BOOK_INI,'DD/MM/YYYY')
	AND nvl(USUÁRIO_FINAL,'%') LIKE P_CLIENTE
	AND nvl(CARGA_PORTO,'%') like P_PORTO_CARGA
	AND NVL(P.EMB_PREV,TO_DATE('01/01/1900','DD/MM/YYYY')) >=TO_DATE(P_PREV_EMB_INI,'DD/MM/YYYY')
	AND nvl(PI.DESCARGA_PORTO,'%') LIKE P_PORTO_DESTINO
	AND NVL(LAYDAY_INÍCIO,TO_DATE('01/01/1900','DD/MM/YYYY')) >=TO_DATE(P_LAYDAY_INI,'DD/MM/YYYY')
	AND SUBSTR(Pi.ped_REF,0,2) LIKE P_ESCRIT
	AND SUBSTR(Pi.ped_REF,4,1) LIKE P_DIV
	AND NVL(P.PED_DATA,TO_DATE('01/01/3000','DD/MM/YYYY')) <=TO_DATE(P_BOOK_FIM,'DD/MM/YYYY')
	AND NVL(P.EMB_PREV,TO_DATE('01/01/3000','DD/MM/YYYY')) <=TO_DATE(P_PREV_EMB_FIM,'DD/MM/YYYY')
	AND NVL(LAYDAY_FINAL,TO_DATE('01/01/3000','DD/MM/YYYY')) <=TO_DATE(P_LAYDAY_FIM,'DD/MM/YYYY')
	AND nvl(PAÍS_DESTINO,'%') LIKE P_PAIS
	AND SUBSTR(Pi.ped_REF,9,2) LIKE P_SUBDIV ORDER BY ORDREF,P.REF,ped_item
	) loop
	insert into CXRJ.NEG_COMERCIAL (ORDREF,PED_REF, PAÍS_DESTINO, IMP_COND_VENDA, FORNECEDOR_COND_VENDA, PED_DATA, CARGA_PORTO, EMB_PREV, PED_ITEM,
LAYDAY_FINAL,LAYDAY_INÍCIO, P, OV, NE_ITEM, LOTE, TBN, BL_CODE,
PO, USUÁRIO_FINAL, PROD, DIMENSÃO, REVESTIMENTO, TÊMPERA, NORMA_PRODUÇÃO, EMBALAGEM_PESO_MIN, EMBALAGEM_PESO_MAX, NOMINAL_PED_UNID, DESCARGA_PORTO, PESO_LÍQUIDO, PREÇO_UNITÁRIO_FORNECEDOR, PREÇO_UNITÁRIO_IMP, QTD_PED_UNID) VALUES (CURR.ORDREF,CURR.PED_REF ,CURR.PAÍS_DESTINO ,CURR.IMP_COND_VENDA ,CURR.FORNECEDOR_COND_VENDA ,CURR.PED_DATA ,CURR.CARGA_PORTO ,CURR.EMB_PREV ,CURR.PED_ITEM ,CURR.LAYDAY_FINAL ,CURR.LAYDAY_INÍCIO ,CURR.P ,CURR.OV ,CURR.NE_ITEM ,CURR.LOTE ,CURR.TBN ,CURR.BL_CODE ,CURR.
PO ,CURR.USUÁRIO_FINAL ,CURR.PROD ,CURR.DIMENSÃO ,CURR.REVESTIMENTO ,CURR.TÊMPERA ,CURR.NORMA_PRODUÇÃO ,CURR.EMBALAGEM_PESO_MIN ,CURR.EMBALAGEM_PESO_MAX ,CURR.NOMINAL_METRIC_TONS ,CURR.DESCARGA_PORTO ,CURR.PESO_LÍQUIDO ,CURR.PREÇO_UNITÁRIO_FORNECEDOR ,CURR.PREÇO_UNITÁRIO_IMP ,CURR.QTD_PED_UNID);
	end loop;
	commit;
	exception
            when others then
                raise_application_error (-20000, 'ERRO NEGOCIOS COMERCIAL.' || chr(10) || sqlerrm);

	end;


--***********************************************

	PROCEDURE NEG_COMERCIAL_COMP (P_ESCRIT in varchar2 , P_DIV in varchar2 , P_SUBDIV in varchar2 , P_PEDIDO in varchar2, P_BOOK_INI in varchar2 , P_BOOK_FIM in varchar2 , P_PREV_EMB_INI in varchar2, P_PREV_EMB_FIM in varchar2, P_PAIS in varchar2, P_CLIENTE in varchar2 , P_PORTO_CARGA in varchar2, P_PORTO_DESTINO in varchar2, P_LAYDAY_INI in varchar2, P_LAYDAY_FIM in varchar2, P_LOTE in varchar2, P_OV in varchar2,P_NE_ITEM in varchar2, P_P in varchar2,P_TBN in varchar2,P_PO in varchar2,P_BL_CODE in varchar2, P_NAVIO in varchar2, P_BL_DATA_INI in varchar2,P_BL_DATA_FIM in varchar2) IS
	begin
	delete from CXRJ.NEG_COMERCIAL;
	commit;
	for curr in (select
	DECODE(SUBSTR(P.REF,6,1),'9' ,'19'||SUBSTR(P.REF,6,2),'8' ,'19'||SUBSTR(P.REF,6,2) ,'20'||SUBSTR(P.REF,6,2)) ORDREF, p.ref ped_ref, p.país_destino, p.imp_cond_venda,
	p.fornecedor_cond_venda,p.ped_data, p.carga_porto, p.emb_prev,
	pi.item	ped_item, pi.layday_final, pi.layday_início, pi.p,pi.ov,
	pi.ne_item, pi.lote, pi.tbn, pi.bl_code, pi.po, pi.usuário_final, pi.prod, 	pi.dimensão, pi.revestimento, pi.têmpera,
	pi.norma_produção, pi.embalagem_peso_min, pi.embalagem_peso_max,
	pi.NOMINAL_METRIC_TONS, pi.descarga_porto, pi.PESO_LÍQUIDO ,
	pi.PREÇO_UNITÁRIO_FORNECEDOR, pi.PREÇO_UNITÁRIO_IMP, bl_carga.QTD_PED_UNID
from
	CXRJ.ped p, CXRJ.ped_item pi,
	(select
		bl_carga.ped_ref, bl_carga.ped_item,
		sum(bl_carga.qtd_ped_unid) qtd_ped_unid
	from
		CXRJ.bl_carga
	where
		SUBSTR(bl_carga.ped_ref,0,2) like P_ESCRIT
		AND SUBSTR(bl_carga.ped_ref,4,1) like P_DIV
	group by
		bl_carga.ped_ref, bl_carga.ped_item
	) bl_carga
where
	p.ref = pi.ped_ref (+) and pi.ped_ref = bl_carga.ped_ref (+)
	and pi.item = bl_carga.ped_item (+)
	AND nvl(pi.PED_REF,'%') like P_PEDIDO
	AND NVL(P.PED_DATA,'01/01/1900') >=TO_DATE(P_BOOK_INI,'DD/MM/YYYY')
	AND nvl(USUÁRIO_FINAL,'%') LIKE P_CLIENTE
	AND NVL(LOTE,'%') LIKE P_LOTE  AND NVL(PI.OV,'%') LIKE P_OV
	AND nvl(CARGA_PORTO,'%') like P_PORTO_CARGA  AND NVL(P.EMB_PREV,'01/01/1900') >=TO_DATE(P_PREV_EMB_INI,'DD/MM/YYYY')
	AND nvl(PI.DESCARGA_PORTO,'%') LIKE P_PORTO_DESTINO
	AND NVL(LAYDAY_INÍCIO,'01/01/1900') >=TO_DATE(P_LAYDAY_INI,'DD/MM/YYYY')
	AND SUBSTR(Pi.ped_REF,0,2) LIKE P_ESCRIT
	AND SUBSTR(Pi.ped_REF,4,1) LIKE P_DIV
	AND nvl(NE_ITEM,'%') like P_NE_ITEM  AND NVL(P,'%') LIKE P_P
	AND NVL(TBN,'%') like P_TBN  AND NVL(PO,'%') like P_PO
	AND NVL(P.PED_DATA,TO_DATE('01/01/3000','DD/MM/YYYY')) <=TO_DATE(P_BOOK_FIM,'DD/MM/YYYY')
	AND NVL(P.EMB_PREV,TO_DATE('01/01/3000','DD/MM/YYYY')) <=TO_DATE(P_PREV_EMB_FIM,'DD/MM/YYYY')
	AND NVL(LAYDAY_FINAL,'01/01/3000') <=TO_DATE(P_LAYDAY_FIM,'DD/MM/YYYY')
	AND nvl(PAÍS_DESTINO,'%') LIKE P_PAIS
	AND SUBSTR(Pi.ped_REF,9,2) LIKE P_SUBDIV AND NVL(BL_CODE,'%') LIKE P_BL_CODE
	AND exists(select
			bl_carga.ped_ref, bl_carga.ped_item, bl.viagem_ref,
			bl.bl_num, bl.bl_data, viagem.navio
		   from
			CXRJ.bl_carga, CXRJ.bl, CXRJ.viagem
		   where
			bl_carga.viagem_ref = bl.viagem_ref (+)
			and bl_carga.bl_seq = bl.seq (+)
			and bl.viagem_ref = viagem.ref (+)
			AND bl_carga.ped_ref = pi.ped_ref
			and bl_carga.ped_item = pi.item  AND 							nvl(BL_DATA,'01/01/1900')>=TO_DATE(P_BL_DATA_INI,'DD/MM/YYYY')
			AND nvl(NAVIO,'%') like P_NAVIO AND
		       NVL(BL_DATA,'01/01/3000') <=TO_DATE(P_BL_DATA_FIM,'DD/MM/YYYY') 	    ) ORDER BY ORDREF,P.REF,ped_item
	) loop
	insert into CXRJ.NEG_COMERCIAL (ORDREF,PED_REF, PAÍS_DESTINO, IMP_COND_VENDA, FORNECEDOR_COND_VENDA, PED_DATA, CARGA_PORTO, EMB_PREV, PED_ITEM,
LAYDAY_FINAL,LAYDAY_INÍCIO, P, OV, NE_ITEM, LOTE, TBN, BL_CODE,
PO, USUÁRIO_FINAL, PROD, DIMENSÃO, REVESTIMENTO, TÊMPERA, NORMA_PRODUÇÃO, EMBALAGEM_PESO_MIN, EMBALAGEM_PESO_MAX, NOMINAL_PED_UNID, DESCARGA_PORTO, PESO_LÍQUIDO, PREÇO_UNITÁRIO_FORNECEDOR, PREÇO_UNITÁRIO_IMP, QTD_PED_UNID) VALUES (CURR.ORDREF,CURR.PED_REF ,CURR.PAÍS_DESTINO ,CURR.IMP_COND_VENDA ,CURR.FORNECEDOR_COND_VENDA ,CURR.PED_DATA ,CURR.CARGA_PORTO ,CURR.EMB_PREV ,CURR.PED_ITEM ,CURR.LAYDAY_FINAL ,CURR.LAYDAY_INÍCIO ,CURR.P ,CURR.OV ,CURR.NE_ITEM ,CURR.LOTE ,CURR.TBN ,CURR.BL_CODE ,CURR.
PO ,CURR.USUÁRIO_FINAL ,CURR.PROD ,CURR.DIMENSÃO ,CURR.REVESTIMENTO ,CURR.TÊMPERA ,CURR.NORMA_PRODUÇÃO ,CURR.EMBALAGEM_PESO_MIN ,CURR.EMBALAGEM_PESO_MAX ,CURR.NOMINAL_METRIC_TONS ,CURR.DESCARGA_PORTO ,CURR.PESO_LÍQUIDO ,CURR.PREÇO_UNITÁRIO_FORNECEDOR ,CURR.PREÇO_UNITÁRIO_IMP ,CURR.QTD_PED_UNID);
	end loop;
	commit;
	end;

--***********************************************

	PROCEDURE NEG_FECH_ANALITICO (P_ESCRIT in varchar2 , P_DIV in varchar2 , P_SUBDIV in varchar2 , P_FORN in varchar2 , P_BOOK_INI in varchar2 , P_BOOK_FIM in varchar2 , P_PREV_EMB_INI in varchar2, P_PREV_EMB_FIM in varchar2, P_PAIS in varchar2, P_CLIENTE in varchar2 , P_PORTO in varchar2, P_NAVIO in varchar2,P_PROD in varchar2) IS
	begin
	delete from CXRJ.NEG_FECH_ANA;
	commit;
	for curr in (SELECT
	P.REF,PI.ITEM,PI.USUÁRIO_FINAL,PI.LOTE AS LOTE, PI.OV AS OV, PI.NOMINAL_METRIC_TONS,
	PI.PESO_LÍQUIDO, P.PED_DATA,NCN.NAVIO, P.PAÍS_DESTINO AS PAÍS_DESTINO,
	P.CARGA_PORTO AS CARGA_PORTO, P.EMB_PREV AS EMB_PREV, P.IMP AS IMP,
	P.DISTRIBUIDOR AS DISTRIBUIDOR, PI.DESCARGA_PORTO AS DESCARGA_PORTO,
	PI.PROD AS PROD,PI.EMBALAGEM AS EMBALAGEM, PI.AÇO_TIPO AS AÇO_TIPO,
	PI.REVESTIMENTO AS REVESTIMENTO, PI.TÊMPERA AS TÊMPERA,
	PI.NORMA_TOLERÂNCIA AS NORMA_TOLERÂNCIA, PI.NORMA_PRODUÇÃO AS NORMA_PRODUÇÃO,
	PI.TRAT_TÉRMICO AS TRAT_TÉRMICO, PI.TRAT_QUÍMICO AS TRAT_QUÍMICO, PI.LA AS LA,
	PI.LÍNGUA AS LÍNGUA, PI.PED_UNID AS PED_UNID,PI.USO_FINAL AS USO_FINAL,
	PI.PREÇO_UNITÁRIO_IMP AS PREVENDA, PI.PREÇO_UNITÁRIO_FORNECEDOR AS PRECOMPRA,
	PI.LAYDAY_INÍCIO AS LAYDAY_INÍCIO, PI.LAYDAY_FINAL AS LAYDAY_FINAL
FROM
	CXRJ.PED P,CXRJ.PED_ITEM PI, CXRJ.NEGOCIO_COMERCIAL_NAVIO NCN
WHERE
	NVL(P.PED_DATA,'01/01/1900') >=TO_DATE(P_BOOK_INI,'DD/MM/YYYY')
	AND nvl(USUÁRIO_FINAL,'%') LIKE P_CLIENTE  AND nvl(PI.DESCARGA_PORTO,'%') LIKE P_PORTO
	AND nvl(NCN.NAVIO,'%') like P_NAVIO AND SUBSTR(P.REF,0,2) LIKE P_ESCRIT
	AND SUBSTR(P.REF,4,1) LIKE P_DIV AND SUBSTR(PI.PED_REF,0,2) LIKE P_ESCRIT
	AND SUBSTR(PI.PED_REF,4,1) LIKE P_DIV
AND NVL(PI.PROD,'%') LIKE P_PROD
	AND NVL(P.PED_DATA,TO_DATE('01/01/3000','DD/MM/YYYY')) <=TO_DATE(P_BOOK_FIM,'DD/MM/YYYY')
	AND nvl(p.PAÍS_DESTINO,'%') LIKE P_PAIS
	AND NVL(P.EMB_PREV,TO_DATE('01/01/1900','DD/MM/YYYY')) >=TO_DATE(P_PREV_EMB_INI,'DD/MM/YYYY')
	AND NVL(P.EMB_PREV,TO_DATE('01/01/3000','DD/MM/YYYY')) <=TO_DATE(P_PREV_EMB_FIM,'DD/MM/YYYY')
	AND nvl(P.FORNECEDOR,'%') like P_FORN AND SUBSTR(Pi.ped_REF,9,2) LIKE P_SUBDIV AND SUBSTR(P.REF,9,2) LIKE P_SUBDIV
	AND  P.REF = PI.PED_REF(+) AND PI.ITEM = NCN.PED_ITEM(+)  AND PI.PED_REF = NCN.PED_REF(+)
	) loop
	insert into CXRJ.NEG_FECH_ANA(REF, ITEM, USUÁRIO_FINAL, LOTE, OV, NOMINAL_PED_UNID, PESO_LÍQUIDO, PED_DATA,
NAVIO, PAÍS_DESTINO, CARGA_PORTO, EMB_PREV, IMP, DISTRIBUIDOR, DESCARGA_PORTO,
PROD, EMBALAGEM, AÇO_TIPO, REVESTIMENTO, TÊMPERA, NORMA_TOLERÂNCIA, NORMA_PRODUÇÃO,
TRAT_TÉRMICO, TRAT_QUÍMICO, LA, LÍNGUA, PED_UNID, USO_FINAL, PREVENDA, PRECOMPRA,
LAYDAY_INÍCIO, LAYDAY_FINAL)  VALUES (CURR.REF ,CURR.ITEM ,CURR.USUÁRIO_FINAL ,CURR.LOTE ,CURR.OV ,CURR.NOMINAL_METRIC_TONS ,CURR.PESO_LÍQUIDO ,CURR.PED_DATA ,CURR.
NAVIO ,CURR.PAÍS_DESTINO ,CURR.CARGA_PORTO ,CURR.EMB_PREV ,CURR.IMP ,CURR.DISTRIBUIDOR ,CURR.DESCARGA_PORTO ,CURR.
PROD ,CURR.EMBALAGEM ,CURR.AÇO_TIPO ,CURR.REVESTIMENTO ,CURR.TÊMPERA ,CURR.NORMA_TOLERÂNCIA ,CURR.NORMA_PRODUÇÃO ,CURR.
TRAT_TÉRMICO ,CURR.TRAT_QUÍMICO ,CURR.LA ,CURR.LÍNGUA ,CURR.PED_UNID ,CURR.USO_FINAL ,CURR.PREVENDA ,CURR.PRECOMPRA ,CURR.
LAYDAY_INÍCIO ,CURR.LAYDAY_FINAL);

	end loop;
	commit;
	end;

--***********************************************

PROCEDURE NEG_FECH_SINT_PAIS (P_ESCRIT in varchar2 , P_DIV in varchar2 , P_SUBDIV in varchar2 , P_FORN in varchar2 , P_BOOK_INI in varchar2 , P_BOOK_FIM in varchar2 , P_PREV_EMB_INI in varchar2, P_PREV_EMB_FIM in varchar2, P_PAIS in varchar2, P_CLIENTE in varchar2 , P_PORTO in varchar2, P_PROD in varchar2) IS
	begin
	delete from CXRJ.NEG_FECH_SINT_PAIS;
	commit;
	for curr in (SELECT
	P.REF,  P.PED_DATA, PI.USUÁRIO_FINAL,  PI.OV, MIN(PI.P) P,
	MIN(PI.LOTE) LOTE,PI.PO,PI.FSE AS FSE,MIN(P.FORNECEDOR) FORNECEDOR,
	PI.PROD AS PROD, MIN(P.PAÍS_DESTINO) PAÍS_DESTINO,
	MIN(PI.DESCARGA_PORTO) DESCARGA_PORTO,
	MIN(P.CARGA_PORTO) CARGA_PORTO,
	MIN(P.EMB_PREV) EMB_PREV, MIN(P.FORNECEDOR_COND_RECEB) PGT,
	MIN(P.MOEDA) MOEDA, MIN(P.EXP_COND_VENDA) CC,
	MIN(P.IMP_COND_VENDA) CV,
	SUM(PI.PESO_LÍQUIDO) PRODU,
	SUM(ITEM_FECHADO.QTD_PED_UNID) FECH,
	SUM(PREÇO_UNITÁRIO_FORNECEDOR* NOMINAL_METRIC_TONS) PRCOMPRA,
	SUM(PREÇO_UNITÁRIO_IMP * NOMINAL_METRIC_TONS) PRVENDA,
	SUM(ITEM_EMBARCADO.QTD_PED_UNID) EMB, SUM(PI.NOMINAL_METRIC_TONS) ENCOM,
	SUM(Pedido_Resultado.CALC) CALC,NCN.BL_DATA,NCN.NAVIO
FROM
	CXRJ.PED P, CXRJ.PED_ITEM PI,
	(SELECT
		PED_REF, PED_ITEM, MAX(NAVIO) navio,
		MAX(BL_DATA) BL_DATA FROM CXRJ.NEGOCIO_COMERCIAL_NAVIO
	where
		SUBSTR(PED_REF,0,2) LIKE P_ESCRIT
		AND SUBSTR(PED_REF,4,1) LIKE P_DIV
		AND SUBSTR(PED_REF,9,2) LIKE P_SUBDIV
	GROUP BY
		PED_REF, PED_ITEM
	) NCN,
	(SELECT
		PED_RESULT.Ped_Ref,  SUM(Ped_Result.Calc) AS CALC
	FROM
		CXRJ.Ped_Result
	WHERE
		SUBSTR(PED_RESULT.PED_REF,0,2) LIKE P_ESCRIT
		AND SUBSTR(PED_RESULT.PED_REF,4,1) LIKE P_DIV
		AND SUBSTR(PED_RESULT.PED_REF,9,2) LIKE P_SUBDIV
	GROUP BY
		Ped_Result.Ped_Ref
	) PEDIDO_RESULTADO
	,(SELECT
		FECHAMENTO_NCANCEL.PED_REF, FECHAMENTO_NCANCEL.PED_ITEM,
		SUM(FECHAMENTO_NCANCEL.QTD_PED_UNID) AS QTD_PED_UNID
	FROM
		(SELECT
			FECH_CARGA.*, FS.SUBSTITUTO, FS.SUBSTITUIÇÃO_DATA
		FROM
			CXRJ.FECH_CARGA , CXRJ.FECH_SUBSTITUÍDO FS
		WHERE  FECH_CARGA.FECH_REF = FS.SUBSTITUÍDO(+)
		) FECHAMENTO_NCANCEL
	WHERE
		SUBSTR(FECHAMENTO_NCANCEL.PED_REF,0,2) LIKE P_ESCRIT
		AND SUBSTR(FECHAMENTO_NCANCEL.PED_REF,4,1) LIKE P_DIV
		AND SUBSTR(FECHAMENTO_NCANCEL.PED_REF,9,2) LIKE P_SUBDIV
	GROUP BY
		FECHAMENTO_NCANCEL.PED_REF, FECHAMENTO_NCANCEL.PED_ITEM
	) ITEM_FECHADO,
	(SELECT
		EMBARQUE_NCANCEL.PED_REF, EMBARQUE_NCANCEL.PED_ITEM,
		SUM (EMBARQUE_NCANCEL.QTD_PED_UNID) AS QTD_PED_UNID
	FROM
		(SELECT
			BC.PED_REF, BC.PED_Item, BC.QTD_PED_UNID
		FROM
			CXRJ.BL_CARGA BC, CXRJ.FECH_SUBSTITUÍDO FS
		WHERE
			BC.PED_REF = FS.SUBSTITUÍDO(+)
			AND SUBSTR(BC.PED_REF,0,2) LIKE P_ESCRIT
			AND SUBSTR(BC.PED_REF,4,1) LIKE P_DIV
			AND SUBSTR(BC.PED_REF,9,2) LIKE P_SUBDIV
		) EMBARQUE_NCANCEL
	WHERE
		SUBSTR(EMBARQUE_NCANCEL.PED_REF,0,2) LIKE P_ESCRIT
		AND SUBSTR(EMBARQUE_NCANCEL.PED_REF,4,1) LIKE P_DIV
		AND SUBSTR(EMBARQUE_NCANCEL.PED_REF,9,2) LIKE P_SUBDIV
	GROUP BY
		EMBARQUE_NCANCEL.PED_REF, EMBARQUE_NCANCEL.PED_ITEM
	) ITEM_EMBARCADO
WHERE
	NVL(P.PED_DATA,'01/01/1900') >=TO_DATE(P_BOOK_INI,'DD/MM/YYYY')
	AND nvl(USUÁRIO_FINAL,'%') LIKE P_CLIENTE
	AND nvl(PI.DESCARGA_PORTO,'%') LIKE P_PORTO
	AND SUBSTR(P.REF,0,2) LIKE P_ESCRIT
	AND SUBSTR(P.REF,4,1) LIKE P_DIV
	AND SUBSTR(PI.PED_REF,0,2) LIKE P_ESCRIT
	AND SUBSTR(PI.PED_REF,4,1) LIKE P_DIV
	AND NVL(P.PED_DATA,TO_DATE('01/01/3000','DD/MM/YYYY')) <=TO_DATE(P_BOOK_FIM,'DD/MM/YYYY')
	AND nvl(p.PAÍS_DESTINO,'%') LIKE P_PAIS
	AND NVL(P.EMB_PREV,TO_DATE('01/01/1900','DD/MM/YYYY')) >=TO_DATE(P_PREV_EMB_INI,'DD/MM/YYYY')
	AND NVL(P.EMB_PREV,TO_DATE('01/01/3000','DD/MM/YYYY')) <=TO_DATE(P_PREV_EMB_FIM,'DD/MM/YYYY')
	AND NVL(PI.PROD,'%') LIKE P_PROD AND nvl(P.FORNECEDOR,'%') like P_FORN
	AND SUBSTR(Pi.ped_REF,9,2) LIKE P_SUBDIV
	AND SUBSTR(P.REF,9,2) LIKE P_SUBDIV AND  PI.ITEM = ITEM_EMBARCADO.PED_ITEM(+)
	AND PI.PED_REF = ITEM_EMBARCADO.PED_REF(+)
	AND PI.ITEM = ITEM_FECHADO.PED_ITEM(+)
	AND PI.PED_REF = ITEM_FECHADO.PED_REF(+)
	AND PI.PED_REF = Pedido_Resultado.PED_REF(+)
	AND P.REF = PI.PED_REF(+) AND PI.PED_REF = NCN.PED_REF(+)
	AND PI.ITEM = NCN.PED_ITEM(+)
GROUP BY
	P.REF, P.PED_DATA,PI.USUÁRIO_FINAL,PI.OV,
	PI.PROD,PI.PO,PI.FSE,NCN.BL_DATA,NCN.NAVIO
	) loop
	insert into CXRJ.NEG_FECH_SINT_PAIS(REF, PED_DATA, USUÁRIO_FINAL, OV, P, LOTE, PO, FSE, FORNECEDOR, PROD, PAÍS_DESTINO, DESCARGA_PORTO, CARGA_PORTO, EMB_PREV, PGT, MOEDA, CC, CV, PRODU, FECH, PRCOMPRA,
PRVENDA, EMB, ENCOM, CALC, BL_DATA, NAVIO)  VALUES (CURR.REF,  CURR.PED_DATA,  CURR.USUÁRIO_FINAL,  CURR.OV,  CURR.P,  CURR.LOTE,  CURR.PO,  CURR.FSE,  CURR.FORNECEDOR,  CURR.PROD,  CURR.PAÍS_DESTINO,  CURR.DESCARGA_PORTO,  CURR.CARGA_PORTO,  CURR.EMB_PREV,  CURR.PGT,  CURR.MOEDA,  CURR.CC,  CURR.CV,  CURR.PRODU,  CURR.FECH,  CURR.PRCOMPRA,  CURR.
PRVENDA,  CURR.EMB,  CURR.ENCOM,  CURR.CALC,  CURR.BL_DATA,  CURR.NAVIO);
	end loop;
	commit;

    	end;

--***********************************************

end CONSULTAS_COMERCIAL;
/