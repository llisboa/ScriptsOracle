EXEC DBMS_OUTPUT.PUT_LINE('--> view ACORDO_COMPLEMENTAÇÃO');
CREATE OR REPLACE VIEW ACORDO_COMPLEMENTAÇÃO AS
SELECT
EMB.REF,
EMB.EMB_ACORDO EMB_DATA,
EMB.EXP,
EMB_DOC.PARAM,
EMB_DOC.DOC,
EMB_ITEM_LIQ.PESO_LÍQUIDO,
ITEM.PROD,
ITEM.USUÁRIO_FINAL,
ITEM.PAÍS_DESTINO
FROM EMB,
(
     SELECT
     EMB_DOC_MIN.*,
     EMB_DOC.PARAM
     FROM EMB_DOC,
     (
          SELECT
          EMB_REF,
          MIN(DOC) DOC,
          MIN(SEQ) SEQ
          FROM
          EMB_DOC
          WHERE
          DOC LIKE 'FATURA____'
          GROUP BY
          EMB_REF
     )EMB_DOC_MIN
     WHERE
     EMB_DOC_MIN.EMB_REF = EMB_DOC.EMB_REF (+) AND
     EMB_DOC_MIN.SEQ = EMB_DOC.SEQ(+)
)EMB_DOC,
(
     SELECT
     EMB_REF,
     SUM(PESO_LÍQUIDO) PESO_LÍQUIDO
     FROM EMB_ITEM
     GROUP BY
     EMB_REF
)EMB_ITEM_LIQ,
(
     SELECT
     EMB_ITEM.EMB_REF,
     ITEM.PROD,
     ITEM.PAÍS_DESTINO,
     ITEM.USUÁRIO_FINAL
     FROM
     (
          SELECT
          EMB_REF,
          MAX(PED_REF || TO_CHAR(PED_ITEM,'000'))REF_MAX
          FROM EMB_ITEM
          GROUP BY
          EMB_REF
     )EMB_ITEM,
     (
          SELECT
          PED_REF || TO_CHAR(ITEM,'000')REF_MAX,
          USUÁRIO_FINAL,
          PROD,
          PED.PAÍS_DESTINO
          FROM PED_ITEM,PED
          WHERE
          PED.REF = PED_ITEM.PED_REF (+)
     )ITEM
     WHERE
     EMB_ITEM.REF_MAX = ITEM.REF_MAX (+)
)ITEM
WHERE
EMB.REF = EMB_DOC.EMB_REF (+) AND
EMB.REF = EMB_ITEM_LIQ.EMB_REF (+) AND
EMB.REF = ITEM.EMB_REF (+) AND
PAÍS_DESTINO LIKE 'ARGENTINA' AND
EMB.EXP Like '%INAL%'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view ALADI_EXP');
CREATE OR REPLACE VIEW ALADI_EXP AS
SELECT
EMB.REF EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB.DATA_EMISSÃO_DOC,
EMB.IMP,
EMB.IMP_PAÍS,
EMB_DOC.DOC,
EMB_DOC.PARAM,
EMB_PARAM.FATURA_EXP
FROM EMB, EMB_DOC, EMB_PARAM
WHERE
EMB_DOC.EMB_REF = EMB_PARAM.REF(+) AND
EMB.REF = EMB_DOC.EMB_REF(+) AND
EMB_DOC.DOC='ALADI EXP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view ALADI_IMP');
CREATE OR REPLACE VIEW ALADI_IMP AS
SELECT
EMB.REF EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB.DATA_EMISSÃO_DOC,
EMB.PAGADOR,
EMB.PAG_PAÍS,
EMB_DOC.DOC,
EMB_DOC.PARAM,
EMB_PARAM.FATURA_IMP
FROM EMB, EMB_DOC, EMB_PARAM
WHERE
EMB_DOC.EMB_REF = EMB_PARAM.REF(+) AND
EMB.REF = EMB_DOC.EMB_REF(+) AND
EMB_DOC.DOC='ALADI IMP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view ALADI_SUB');
CREATE OR REPLACE VIEW ALADI_SUB AS
SELECT
EMB.REF EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB_ITEM.SEQ AS SEQ_ITEM,
EMB_ITEM.DESCR,
EMB_ITEM.PESO_LÍQUIDO,
EMB_ITEM.PESO_BRUTO,
EMB_ITEM.QTD_VOL,
EMB_FAMÍLIA_GENÉRICA.FAMÍLIA,
EMB.PESO_UNID,
EMB.IDIOMA,
EMB.TIPO_DESCR_MERCADORIA,
EMB.MOEDA,
EMB_DOC.PARAM,
EMB.TOTALIZAÇÃO_EMBALAGEM,
SUBSTR(EMB_ITEM.NALADI,1) AS NALADI,
EMB_ITEM.EMBALAGEM
FROM EMB_DOC, EMB, EMB_ITEM, BL_CARGA, EMB_FAMÍLIA_GENÉRICA
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB_ITEM.BL_SEQ = BL_CARGA.BL_SEQ(+) AND
EMB_ITEM.VIAGEM_REF = BL_CARGA.VIAGEM_REF(+) AND
EMB_ITEM.PED_ITEM = BL_CARGA.PED_ITEM(+) AND
EMB_ITEM.PED_REF = BL_CARGA.PED_REF(+) AND
BL_CARGA.FAMÍLIA_GENÉRICA = EMB_FAMÍLIA_GENÉRICA.SEQ(+) AND
BL_CARGA.EMB_REF = EMB_FAMÍLIA_GENÉRICA.EMB_REF(+) AND
EMB.REF = EMB_ITEM.EMB_REF(+) AND
EMB_DOC.DOC LIKE 'ALADI%'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view BL_CARGA_OK');
CREATE OR REPLACE VIEW BL_CARGA_OK AS
SELECT "PED_REF","PED_ITEM","VIAGEM_REF","BL_SEQ","FECH_REF","EMB_DATA",
"QTD_PED_UNID","QTD_VOL","PESO_LÍQUIDO","PESO_BRUTO","EMB_REF",
"FAMÍLIA_GENÉRICA","FAMÍLIA","SYS_MOMENTO_CRIA","SYS_USUÁRIO_CRIA","SYS_LOCAL_CRIA",
"SYS_MOMENTO_ATUALIZA","SYS_USUÁRIO_ATUALIZA","SYS_LOCAL_ATUALIZA","SYS_STATUS"
FROM BL_CARGA

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view BORDERO');
CREATE OR REPLACE VIEW BORDERO AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ,
EMB_DOC.PARAM,
EMB.MOEDA,
EMB.DATA_EMISSÃO_DOC,
EMB.IMP,
EMB.IMP_ENDEREÇO,
EMB.IMP_PAÍS,
EMB_JUROS.JUROS_IMP,
EMB_JUROS.JUROS_EXP,
EMB_TOTAL_GERAL.TOTAL_GERAL_EXP,
EMB_TOTAL_GERAL.TOTAL_GERAL_IMP,
EMB_PARAM.FAT_EXP,
EMB_PARAM.FAT_IMP
FROM
EMB_DOC, EMB, BORDERO_EMB_DOC_REL,
(
     SELECT EMB_REF, SUM(JUROS_IMP) JUROS_IMP, SUM(JUROS_EXP) JUROS_EXP
     FROM
     (SELECT EMB_LANÇ.EMB_REF,
     DECODE(IMP,-1,IMP_CALC,0) JUROS_IMP,
     DECODE(EXP,-1,EXP_CALC,0) JUROS_EXP
     FROM EMB_LANÇ
     WHERE LANÇ = 'JUROS')
     GROUP BY EMB_REF
) EMB_JUROS,
(
     SELECT EMB_REF, SUM(TOTAL_EXP) TOTAL_GERAL_EXP, SUM(TOTAL_IMP) TOTAL_GERAL_IMP
     FROM
     (SELECT EMB_TOTALIZA.EMB_REF,
     DECODE(IMP,-1,IMP_CALC,0) TOTAL_IMP,
     DECODE(EXP,-1,EXP_CALC,0) TOTAL_EXP
     FROM EMB_TOTALIZA
     WHERE LANÇ = 'TOTAL GERAL')
     GROUP BY EMB_REF
) EMB_TOTAL_GERAL,
(
     SELECT  EMB_REF,
     DECODE(DOC,'FATURA EXP', PARAM, -1) FAT_EXP,
     DECODE(DOC,'FATURA IMP', PARAM, -1) FAT_IMP
     FROM EMB_DOC
     WHERE EMB_DOC.DOC = 'FATURA EXP' OR EMB_DOC.DOC = 'FATURA IMP'
) EMB_PARAM
WHERE
BORDERO_EMB_DOC_REL.EMB_REL = EMB.REF(+) AND
EMB_DOC.EMB_REF = BORDERO_EMB_DOC_REL.EMB_REF(+) AND
EMB_DOC.SEQ = BORDERO_EMB_DOC_REL.SEQ_DOC(+) AND
EMB.REF = EMB_TOTAL_GERAL.EMB_REF(+) AND
EMB.REF = EMB_JUROS.EMB_REF(+) AND
EMB.REF = EMB_PARAM.EMB_REF(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view BORDERO_EMB_DOC_REL');
CREATE OR REPLACE VIEW BORDERO_EMB_DOC_REL AS
SELECT EMB_REF, SEQ SEQ_DOC , -1 AS ORIGINAL ,EMB_REF EMB_REL
FROM EMB_DOC
WHERE DOC LIKE 'BORDERÔ %'
UNION SELECT EMB_REF, DOC, 0 AS ORIGINAL, EMB_REL
FROM EMB_DOC_REL

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view BORDERO_EXP');
CREATE OR REPLACE VIEW BORDERO_EXP AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ SEQ_DOC,
EMB_DOC.PARAM,
EMB.MOEDA,
EMB.DATA_EMISSÃO_DOC,
EMB.IMP,
EMB.IMP_ENDEREÇO,
EMB.IMP_PAÍS,
EMB_PARAM.FATURA_EXP,
EMB_PARAM.FATURA_IMP,
EMB_TOTAL_GERAL.TOTAL_GERAL_EXP,
EMB_TOTAL_GERAL.TOTAL_GERAL_IMP,
EMB_TOTAL_GERAL.JUROS_EXP,
EMB_TOTAL_GERAL.JUROS_IMP
FROM
EMB_DOC, EMB,
(
     SELECT
     BORDERO_EMB_DOC_REL.EMB_REF,
     BORDERO_EMB_DOC_REL.SEQ_DOC,
     SUM(TOTAL_EXP) TOTAL_GERAL_EXP,
     SUM(TOTAL_IMP) TOTAL_GERAL_IMP,
     SUM(JUROS_EXP) JUROS_EXP,
     SUM(JUROS_IMP) JUROS_IMP
     FROM
     (SELECT EMB_REF,
     DECODE(EXP,-1,EXP_CALC,0) TOTAL_EXP,
     DECODE(IMP,-1,IMP_CALC,0) TOTAL_IMP
     FROM EMB_TOTALIZA
     WHERE LANÇ = 'TOTAL GERAL') EMB_TOT,
     (SELECT EMB_REF,
     DECODE(EXP,-1,EXP_CALC,0) JUROS_EXP,
     DECODE(IMP,-1,IMP_CALC,0) JUROS_IMP
     FROM EMB_LANÇ
     WHERE LANÇ = 'JUROS') EMB_JUROS,
     BORDERO_EMB_DOC_REL
     WHERE
     BORDERO_EMB_DOC_REL.EMB_REL = EMB_TOT.EMB_REF(+) AND
     BORDERO_EMB_DOC_REL.EMB_REL = EMB_JUROS.EMB_REF(+) AND
     (BORDERO_EMB_DOC_REL.EMB_REF LIKE '%-01-%' OR BORDERO_EMB_DOC_REL.EMB_REF LIKE '%-02-%')
     GROUP BY
     BORDERO_EMB_DOC_REL.EMB_REF,
     BORDERO_EMB_DOC_REL.SEQ_DOC
) EMB_TOTAL_GERAL,
(
     SELECT
     BORDERO_EMB_DOC_REL.EMB_REF,BORDERO_EMB_DOC_REL.SEQ_DOC,
     MIN(FAT_EXP.FATURA_EXP) FATURA_EXP,
     MIN(FAT_IMP.FATURA_IMP) FATURA_IMP
     FROM BORDERO_EMB_DOC_REL,
     (SELECT EMB_REF, PARAM AS FATURA_EXP FROM EMB_DOC WHERE DOC = 'FATURA EXP') FAT_EXP,
     (SELECT EMB_REF, PARAM AS FATURA_IMP FROM EMB_DOC WHERE DOC = 'FATURA IMP') FAT_IMP
     WHERE
     BORDERO_EMB_DOC_REL.EMB_REL = FAT_EXP.EMB_REF(+) AND
     BORDERO_EMB_DOC_REL.EMB_REL = FAT_IMP.EMB_REF(+) AND
     (BORDERO_EMB_DOC_REL.EMB_REF LIKE '%-01-%' OR BORDERO_EMB_DOC_REL.EMB_REF LIKE '%-02-%')
     GROUP BY
     BORDERO_EMB_DOC_REL.EMB_REF,
     BORDERO_EMB_DOC_REL.SEQ_DOC
) EMB_PARAM
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB_DOC.EMB_REF = EMB_TOTAL_GERAL.EMB_REF(+) AND
EMB_DOC.SEQ = EMB_TOTAL_GERAL.SEQ_DOC(+) AND
EMB_DOC.EMB_REF = EMB_PARAM.EMB_REF(+) AND
EMB_DOC.SEQ = EMB_PARAM.SEQ_DOC(+) AND
(EMB_DOC.EMB_REF LIKE '%-01-%' OR EMB_DOC.EMB_REF LIKE '%-02-%') AND
EMB_DOC.DOC = 'BORDERÔ EXP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view BORDERO_EXP_SUB');
CREATE OR REPLACE VIEW BORDERO_EXP_SUB AS
SELECT EMB.REF, EMB_LANÇ.SEQ, EMB_LANÇ.EXP_CALC, CIA.NOME AS BENEFICIÁRIO, EMB_LANÇ.COMISSÃO_MODALIDADE, EMB_LANÇ.INSTRUÇÃO_REMESSA, EMB_LANÇ.VALOR_POR_MT, EMB_LANÇ.VALOR, EMB_LANÇ.TOTAL_PERCENT, EMB_LANÇ.TOTAL_TIPO, EMB.MOEDA
FROM EMB,EMB_LANÇ,CIA
WHERE EMB.REF = EMB_LANÇ.EMB_REF(+) AND EMB_LANÇ.BENEFICIÁRIO = CIA.COD(+) AND EMB_LANÇ.LANÇ='COMISSÃO' AND EMB_LANÇ.EXP = -1

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view BORDERO_IMP');
CREATE OR REPLACE VIEW BORDERO_IMP AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ SEQ_DOC,
EMB_DOC.PARAM,
EMB.MOEDA,
EMB.DATA_EMISSÃO_DOC,
EMB_PARAM.FATURA_EXP,
EMB_PARAM.FATURA_IMP,
EMB_TOTAL_GERAL.TOTAL_GERAL_EXP,
EMB_TOTAL_GERAL.TOTAL_GERAL_IMP,
EMB_TOTAL_GERAL.JUROS_EXP,
EMB_TOTAL_GERAL.JUROS_IMP
FROM
EMB_DOC, EMB,
(
     SELECT
     BORDERO_EMB_DOC_REL.EMB_REF,
     BORDERO_EMB_DOC_REL.SEQ_DOC,
     SUM(TOTAL_EXP) TOTAL_GERAL_EXP,
     SUM(TOTAL_IMP) TOTAL_GERAL_IMP,
     SUM(JUROS_EXP) JUROS_EXP,
     SUM(JUROS_IMP) JUROS_IMP
     FROM
     (SELECT EMB_REF,
     DECODE(EXP,-1,EXP_CALC,0) TOTAL_EXP,
     DECODE(IMP,-1,IMP_CALC,0) TOTAL_IMP
     FROM EMB_TOTALIZA
     WHERE LANÇ = 'TOTAL GERAL') EMB_TOT,
     (SELECT EMB_REF,
     DECODE(EXP,-1,EXP_CALC,0) JUROS_EXP,
     DECODE(IMP,-1,IMP_CALC,0) JUROS_IMP
     FROM EMB_LANÇ
     WHERE LANÇ = 'JUROS') EMB_JUROS,
     BORDERO_EMB_DOC_REL
     WHERE
     BORDERO_EMB_DOC_REL.EMB_REL = EMB_TOT.EMB_REF(+) AND
     BORDERO_EMB_DOC_REL.EMB_REL = EMB_JUROS.EMB_REF(+) AND
     (BORDERO_EMB_DOC_REL.EMB_REF LIKE '%-01-%' OR BORDERO_EMB_DOC_REL.EMB_REF LIKE '%-02-%')
     GROUP BY BORDERO_EMB_DOC_REL.EMB_REF,
     BORDERO_EMB_DOC_REL.SEQ_DOC
) EMB_TOTAL_GERAL,
(
     SELECT
     BORDERO_EMB_DOC_REL.EMB_REF,
     BORDERO_EMB_DOC_REL.SEQ_DOC,
     MIN(FAT_EXP.FATURA_EXP) FATURA_EXP,
     MIN(FAT_IMP.FATURA_IMP) FATURA_IMP
     FROM BORDERO_EMB_DOC_REL,
     (SELECT EMB_REF, PARAM AS FATURA_EXP FROM EMB_DOC WHERE DOC = 'FATURA EXP') FAT_EXP,
     (SELECT EMB_REF, PARAM AS FATURA_IMP FROM EMB_DOC WHERE DOC = 'FATURA IMP') FAT_IMP
     WHERE
     BORDERO_EMB_DOC_REL.EMB_REL = FAT_EXP.EMB_REF(+) AND
     BORDERO_EMB_DOC_REL.EMB_REL = FAT_IMP.EMB_REF(+) AND
     (BORDERO_EMB_DOC_REL.EMB_REF LIKE '%-01-%' OR BORDERO_EMB_DOC_REL.EMB_REF LIKE '%-02-%')
     GROUP BY
     BORDERO_EMB_DOC_REL.EMB_REF,
     BORDERO_EMB_DOC_REL.SEQ_DOC
) EMB_PARAM
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB_DOC.EMB_REF = EMB_TOTAL_GERAL.EMB_REF(+) AND
EMB_DOC.SEQ = EMB_TOTAL_GERAL.SEQ_DOC(+) AND
EMB_DOC.EMB_REF = EMB_PARAM.EMB_REF(+) AND
EMB_DOC.SEQ = EMB_PARAM.SEQ_DOC(+) AND
(EMB_DOC.EMB_REF LIKE '%-01-%' OR EMB_DOC.EMB_REF LIKE '%-02-%') AND
EMB_DOC.DOC = 'BORDERÔ IMP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view CAMARA_COMERCIO_EXP');
CREATE OR REPLACE VIEW CAMARA_COMERCIO_EXP AS
SELECT EMB_DOC.EMB_REF, EMB_DOC.SEQ AS SEQ_DOC, EMB.EXP, EMB.EXP_ENDEREÇO, EMB.EXP_PAÍS, EMB.IMP, EMB.IMP_ENDEREÇO, EMB.IMP_PAÍS, EMB.CONSIGNATÁRIO, EMB.CONSIGN_ENDEREÇO, EMB.CONSIGN_PAÍS, EMB.CARGA_PORTO, EMB.TRANSPORTADOR, EMB.DATA_EMISSÃO_DOC, EMB.IDIOMA, EMB_DOC.PARAM AS PARAM, SUBSTR(FATURA_EXP,1) AS FATURA
FROM EMB_DOC, EMB, EMB_PARAM
WHERE EMB_DOC.EMB_REF = EMB.REF(+) AND EMB.REF = EMB_PARAM.REF(+) AND EMB_DOC.DOC='CÂMARA COMÉRCIO EXP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view CAMARA_COMERCIO_EXP_SUB');
CREATE OR REPLACE VIEW CAMARA_COMERCIO_EXP_SUB AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ SEQ_DOC,
EMB.PESO_UNID,
SUBSTR(EMB_ITEM.NCM || '                    ',1,20) AS NCM,
EMB_ITEM.SEQ SEQ_ITEM,
EMB_ITEM.DESCR,
EMB_ITEM.PESO_LÍQUIDO,
EMB_ITEM.QTD_VOL,
EMB_ITEM.EMBALAGEM,
EMB_PARAM.FATURA_EXP,
EMB_TOT_EXP.TOTAL_GERAL,
EMB_FAMÍLIA_GENÉRICA.FAMÍLIA,
EMB.MOEDA,
EMB_DOC.PARAM,
EMB.TIPO_DESCR_MERCADORIA,
EMB.TOTALIZAÇÃO_EMBALAGEM,
CAM_COM_EMB_DOC_REL.EMB_REL
FROM EMB_DOC, EMB, CAM_COM_EMB_DOC_REL, EMB_ITEM, BL_CARGA, EMB_FAMÍLIA_GENÉRICA,
(
     SELECT
     EMB_REF,
     SUM(DECODE(LANÇ,'TOTAL GERAL',EXP_CALC,0)) TOTAL_GERAL
     FROM EMB_TOTALIZA
     GROUP BY
     EMB_REF
) EMB_TOT_EXP,
(
     SELECT
     EMB_REF,
     PARAM AS FATURA_EXP
     FROM EMB_DOC
     WHERE DOC = 'FATURA EXP'
) EMB_PARAM
WHERE
EMB_DOC.EMB_REF = CAM_COM_EMB_DOC_REL.EMB_REF(+) AND
EMB_DOC.SEQ = CAM_COM_EMB_DOC_REL.SEQ_DOC(+) AND
CAM_COM_EMB_DOC_REL.EMB_REL = EMB_TOT_EXP.EMB_REF(+) AND
CAM_COM_EMB_DOC_REL.EMB_REL = EMB_PARAM.EMB_REF(+) AND
CAM_COM_EMB_DOC_REL.EMB_REL = EMB.REF(+) AND
EMB.REF = EMB_ITEM.EMB_REF(+) AND
EMB_ITEM.PED_REF = BL_CARGA.PED_REF(+) AND
EMB_ITEM.PED_ITEM = BL_CARGA.PED_ITEM(+) AND
EMB_ITEM.VIAGEM_REF = BL_CARGA.VIAGEM_REF(+) AND
EMB_ITEM.BL_SEQ = BL_CARGA.BL_SEQ(+) AND
BL_CARGA.EMB_REF = EMB_FAMÍLIA_GENÉRICA.EMB_REF(+) AND
BL_CARGA.FAMÍLIA_GENÉRICA = EMB_FAMÍLIA_GENÉRICA.SEQ(+) AND
EMB_DOC.DOC='CÂMARA COMÉRCIO EXP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view CAMARA_COMERCIO_IMP');
CREATE OR REPLACE VIEW CAMARA_COMERCIO_IMP AS
SELECT EMB_DOC.EMB_REF, EMB_DOC.SEQ AS SEQ_DOC,
EMB.PAGADOR, EMB.PAG_ENDEREÇO, EMB.PAG_PAÍS, EMB.IMP,
EMB.IMP_ENDEREÇO, EMB.IMP_PAÍS, EMB.CONSIGNATÁRIO,
EMB.CONSIGN_ENDEREÇO, EMB.CONSIGN_PAÍS, EMB.CARGA_PORTO,
EMB.TRANSPORTADOR, EMB.DATA_EMISSÃO_DOC, EMB.IDIOMA,
EMB_DOC.PARAM AS PARAM, SUBSTR(FATURA_IMP,1) AS FATURA
FROM EMB_DOC, EMB, EMB_PARAM EMB_PARAM
WHERE EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB.REF = EMB_PARAM.REF(+) AND EMB_DOC.DOC='CÂMARA COMÉRCIO IMP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view CAMARA_COMERCIO_IMP_SUB');
CREATE OR REPLACE VIEW CAMARA_COMERCIO_IMP_SUB AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ SEQ_DOC,
EMB.PESO_UNID,
SUBSTR(EMB_ITEM.NCM || '                    ',1,20) AS NCM,
EMB_ITEM.SEQ SEQ_ITEM,
EMB_ITEM.DESCR,
EMB_ITEM.PESO_LÍQUIDO,
EMB_ITEM.QTD_VOL,
EMB_ITEM.EMBALAGEM,
EMB_PARAM.FATURA_IMP,
EMB_TOT_IMP.TOTAL_GERAL,
EMB_FAMÍLIA_GENÉRICA.FAMÍLIA,
EMB.MOEDA,
EMB_DOC.PARAM,
EMB.TIPO_DESCR_MERCADORIA,
EMB.TOTALIZAÇÃO_EMBALAGEM,
CAM_COM_EMB_DOC_REL.EMB_REL
FROM EMB_DOC, EMB, CAM_COM_EMB_DOC_REL, EMB_ITEM, BL_CARGA, EMB_FAMÍLIA_GENÉRICA,
(
     SELECT
     EMB_REF,
     SUM(DECODE(LANÇ,'TOTAL GERAL',IMP_CALC,0)) TOTAL_GERAL
     FROM EMB_TOTALIZA
     GROUP BY
     EMB_REF
) EMB_TOT_IMP,
(
     SELECT
     EMB_REF,
     PARAM AS FATURA_IMP
     FROM EMB_DOC
     WHERE DOC = 'FATURA IMP'
) EMB_PARAM
WHERE
EMB_DOC.EMB_REF = CAM_COM_EMB_DOC_REL.EMB_REF(+) AND
EMB_DOC.SEQ = CAM_COM_EMB_DOC_REL.SEQ_DOC(+) AND
CAM_COM_EMB_DOC_REL.EMB_REL = EMB_TOT_IMP.EMB_REF(+) AND
CAM_COM_EMB_DOC_REL.EMB_REL = EMB_PARAM.EMB_REF(+) AND
CAM_COM_EMB_DOC_REL.EMB_REL = EMB.REF(+) AND
EMB.REF = EMB_ITEM.EMB_REF(+) AND
EMB_ITEM.PED_REF = BL_CARGA.PED_REF(+) AND
EMB_ITEM.PED_ITEM = BL_CARGA.PED_ITEM(+) AND
EMB_ITEM.VIAGEM_REF = BL_CARGA.VIAGEM_REF(+) AND
EMB_ITEM.BL_SEQ = BL_CARGA.BL_SEQ(+) AND
BL_CARGA.EMB_REF = EMB_FAMÍLIA_GENÉRICA.EMB_REF(+) AND
BL_CARGA.FAMÍLIA_GENÉRICA = EMB_FAMÍLIA_GENÉRICA.SEQ(+) AND
EMB_DOC.DOC='CÂMARA COMÉRCIO IMP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view CAM_COM_EMB_DOC_REL');
CREATE OR REPLACE VIEW CAM_COM_EMB_DOC_REL AS
SELECT EMB_REF, Seq as SEQ_DOC , -1 AS Original , EMB_REF as Emb_Rel
FROM Emb_Doc
WHERE Doc like 'CÂMARA COMÉRCIO %'
UNION SELECT EMB_REF, Doc, 0 AS Original, Emb_Rel
FROM Emb_Doc_Rel

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view CAPA');
CREATE OR REPLACE VIEW CAPA AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB_ITEM.PED_REF,
PED_ITEM.USUÁRIO_FINAL,
EMB_DOC.PARAM,
EMB_PARAM.FATURA_EXP FAT_EXP,
EMB_PARAM.FATURA_IMP FAT_IMP
FROM EMB_DOC, EMB_ITEM, PED_ITEM, EMB,
(
     SELECT
     REF,
     FAT_EXP.FATURA_EXP,
     FAT_IMP.FATURA_IMP
     FROM EMB_PARAM,
     (SELECT EMB_REF, PARAM AS FATURA_EXP FROM EMB_DOC WHERE DOC = 'FATURA EXP') FAT_EXP,
     (SELECT EMB_REF, PARAM AS FATURA_IMP FROM EMB_DOC WHERE DOC = 'FATURA IMP') FAT_IMP
     WHERE
     EMB_PARAM.REF = FAT_EXP.EMB_REF(+) AND
     EMB_PARAM.REF = FAT_IMP.EMB_REF(+)
     GROUP BY
     REF,
     FAT_EXP.FATURA_EXP,
     FAT_IMP.FATURA_IMP
) EMB_PARAM
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB.REF = EMB_PARAM.REF(+) AND
EMB_ITEM.PED_REF = PED_ITEM.PED_REF(+) AND
EMB_ITEM.PED_ITEM = PED_ITEM.ITEM(+) AND
EMB.REF = EMB_ITEM.EMB_REF(+) AND
EMB_DOC.DOC='CAPA'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view CAPA_PACKING_LIST');
CREATE OR REPLACE VIEW CAPA_PACKING_LIST AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
ITEM.SEQ AS SEQ_ITEM,
EMB.TOTALIZAÇÃO_EMBALAGEM,
EMB.TIPO_DESCR_MERCADORIA,
EMB.DATA_EMISSÃO_DOC,
EMB.EXP,
EMB.EXP_ENDEREÇO,
EMB.EXP_PAÍS,
EMB.IMP,
EMB.IMP_ENDEREÇO,
EMB.IMP_PAÍS,
EMB.TRANSPORTADOR,
EMB.CARGA_PORTO,
EMB.DESCARGA_PORTO,
EMB_FAMÍLIA_GENÉRICA.FAMÍLIA,
EMB.MARCAÇÃO,
ITEM.QTD_VOL,
ITEM.DESCR,
ITEM.PESO_LÍQUIDO,
ITEM.PESO_BRUTO,
EMB.IDIOMA,
CIA.LOGOTIPO,
ITEM.EMBALAGEM,
EMB.PESO_UNID,
EMB_DOC.PARAM,
PARAM.FATURA_EXP Fat
FROM EMB_DOC, EMB,CIA,BL_CARGA, PED_ITEM, EMB_FAMÍLIA_GENÉRICA,
(
     SELECT
     REF,
     FAT_EXP.FATURA_EXP
     FROM
     EMB_PARAM,
     (SELECT EMB_REF, PARAM AS FATURA_EXP FROM EMB_DOC WHERE DOC = 'FATURA EXP') FAT_EXP
     WHERE
     EMB_PARAM.REF = FAT_EXP.EMB_REF(+)
     GROUP BY
     REF,
     FAT_EXP.FATURA_EXP
) PARAM,
(
     SELECT
     EMB_REF,
     SEQ,
     DESCR,
     SUM(QTD_VOL) QTD_VOL,
     SUM(PESO_LÍQUIDO) PESO_LÍQUIDO,
     SUM(PESO_BRUTO) PESO_BRUTO,
     BL_SEQ,
     VIAGEM_REF,
     PED_REF,
     PED_ITEM,
     EMBALAGEM
     FROM
     EMB_ITEM
     GROUP BY
     EMB_REF,
     SEQ,
     DESCR,
     BL_SEQ,
     VIAGEM_REF,
     PED_REF,
     PED_ITEM,
     EMBALAGEM
) ITEM
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB.REF = PARAM.REF(+) AND
EMB.EXP_LOGOTIPO = CIA.COD(+) AND
ITEM.PED_REF = BL_CARGA.PED_REF(+) AND
ITEM.PED_ITEM = BL_CARGA.PED_ITEM(+) AND
ITEM.VIAGEM_REF = BL_CARGA.VIAGEM_REF(+) AND
ITEM.BL_SEQ = BL_CARGA.BL_SEQ(+) AND
ITEM.PED_REF = PED_ITEM.PED_REF(+) AND
ITEM.PED_ITEM = PED_ITEM.ITEM(+) AND
BL_CARGA.EMB_REF = EMB_FAMÍLIA_GENÉRICA.EMB_REF(+) AND
BL_CARGA.FAMÍLIA_GENÉRICA = EMB_FAMÍLIA_GENÉRICA.SEQ(+) AND
EMB.REF = ITEM.EMB_REF(+) AND
EMB_DOC.DOC='CAPA PACKING LIST'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view CARGO_LEVANT');
CREATE OR REPLACE VIEW CARGO_LEVANT AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
BL.BL_NUM,
BL.BL_DATA,
SOMA_PESO.BL_SEQ,
SOMA_PESO.PESO_BRUTO,
FECH.FRETE_VALOR_POR_UNID,
EMB.PESO_UNID,
EMB.FRETE_COND,
EMB.DATA_EMISSÃO_DOC,
EMB.CARGA_PORTO,
EMB.DESCARGA_PORTO,
EMB.TRANSPORTADOR,
VIAGEM.NAVIO,
EMB.EMBARCADOR,
EMB.EMB_ENDEREÇO,
EMB.EMB_PAÍS,
EMB.CONSIGNATÁRIO,
EMB.CONSIGN_ENDEREÇO,
EMB.CONSIGN_PAÍS,
EMB.NOTIFICAR,
EMB.NOTIFICAR_ENDEREÇO,
EMB.NOTIFICAR_PAÍS,
EMB.MOEDA,
EMB.FRETE_VALOR_TOTAL,
EMB.MARCAÇÃO,
EMB_DOC.PARAM,
EMB.EMB_DATA,
EMB.IDIOMA,
EMB_TOT.FRETE_EXP,
EMB_TOT.FRETE_IMP
FROM FECH,VIAGEM, BL, EMB, EMB_DOC,
(
     SELECT
       EMB_REF,
     SUM(FRETE_EXP) FRETE_EXP,
     SUM(FRETE_IMP) FRETE_IMP
       FROM
     (SELECT EMB_REF,
     DECODE(LANÇ,'FRETE',EXP_CALC,0) FRETE_EXP,
     DECODE(LANÇ,'FRETE',IMP_CALC,0) FRETE_IMP
     FROM EMB_TOTALIZA)
     GROUP BY
     EMB_REF
) EMB_TOT,
(
     SELECT
     EMB_REF,
     BL_SEQ,
     VIAGEM_REF,
     FECH_REF,
     SUM(PESO_BRUTO) PESO_BRUTO
     FROM
     EMB_ITEM
     GROUP BY
     EMB_REF,
     BL_SEQ,
     VIAGEM_REF,
     FECH_REF
) SOMA_PESO
WHERE
EMB_DOC.EMB_REF = EMB_TOT.EMB_REF(+) AND
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB.REF = SOMA_PESO.EMB_REF(+) AND
SOMA_PESO.BL_SEQ = BL.SEQ(+) AND
SOMA_PESO.VIAGEM_REF = BL.VIAGEM_REF(+) AND
SOMA_PESO.VIAGEM_REF = VIAGEM.REF(+) AND
SOMA_PESO.FECH_REF = FECH.REF(+) AND
EMB_DOC.DOC='CARGO LEVANT'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view CARGO_LEVANT_SUB');
CREATE OR REPLACE VIEW CARGO_LEVANT_SUB AS
SELECT
EMB.REF,
EMB_DOC.SEQ AS SEQ_DOC,
ITEM.SEQ AS SEQ_ITEM,
ITEM.BL_SEQ,
ITEM.DESCR,
ITEM.QTD_VOL,
ITEM.PESO_LÍQUIDO,
ITEM.PESO_BRUTO,
ITEM.EXP_TOTAL_CALC,
ITEM.VIAGEM_REF,
EMB.PESO_UNID,
EMB_FAMÍLIA_GENÉRICA.FAMÍLIA,
EMB.MARCAÇÃO,
EMB.IDIOMA,
ITEM.EMBALAGEM,
EMB_DOC.PARAM,
EMB.TOTALIZAÇÃO_EMBALAGEM,
EMB.TIPO_DESCR_MERCADORIA,
BL.MSG
FROM EMB_DOC,BL_CARGA,EMB_FAMÍLIA_GENÉRICA,PED_ITEM,EMB,BL,
(
     SELECT
     EMB_REF,
     SEQ,
     BL_SEQ,
     PED_REF,
     PED_ITEM,
     DESCR,
     SUM(QTD_VOL) QTD_VOL,
     SUM(PESO_LÍQUIDO) PESO_LÍQUIDO,
     EXP_TOTAL_CALC,
     VIAGEM_REF,
     SUM(PESO_BRUTO) PESO_BRUTO,
     EMBALAGEM
     FROM
     EMB_ITEM
     GROUP BY
     EMB_REF,
     SEQ,
     BL_SEQ,
     DESCR,
     VIAGEM_REF,
     EXP_TOTAL_CALC,
     PED_REF,
     PED_ITEM,
     EMBALAGEM
) ITEM
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB.REF = ITEM.EMB_REF(+) AND
ITEM.PED_ITEM = BL_CARGA.PED_ITEM(+) AND
ITEM.BL_SEQ = BL_CARGA.BL_SEQ(+) AND
ITEM.VIAGEM_REF = BL_CARGA.VIAGEM_REF(+) AND
ITEM.PED_REF = BL_CARGA.PED_REF(+) AND
ITEM.VIAGEM_REF = BL.VIAGEM_REF(+) AND
ITEM.BL_SEQ = BL.SEQ(+) AND
ITEM.PED_REF = PED_ITEM.PED_REF(+) AND
ITEM.PED_ITEM = PED_ITEM.ITEM(+) AND
BL_CARGA.EMB_REF = EMB_FAMÍLIA_GENÉRICA.EMB_REF(+) AND
BL_CARGA.FAMÍLIA_GENÉRICA = EMB_FAMÍLIA_GENÉRICA.SEQ(+) AND
EMB_DOC.DOC='CARGO LEVANT'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view CARTA_DEOP_INGLES');
CREATE OR REPLACE VIEW CARTA_DEOP_INGLES AS
SELECT EMB_DOC.EMB_REF, EMB_DOC.SEQ AS SEQ_DOC, EMB_DOC.PARAM, EMB.DATA_EMISSÃO_DOC
FROM EMB_DOC,EMB
WHERE EMB_DOC.EMB_REF = EMB.REF(+) AND EMB_DOC.DOC= 'CARTA DEOP INGLÊS'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view CARTA_DEOP_PORTUGUES');
CREATE OR REPLACE VIEW CARTA_DEOP_PORTUGUES AS
SELECT EMB_DOC.EMB_REF, EMB_DOC.SEQ AS SEQ_DOC, EMB_DOC.PARAM, EMB.DATA_EMISSÃO_DOC
FROM EMB_DOC, EMB
WHERE EMB_DOC.EMB_REF = EMB.REF(+) AND EMB_DOC.DOC='CARTA DEOP PORTUGUÊS'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view CHECK_LIST_SUB');
CREATE OR REPLACE VIEW CHECK_LIST_SUB AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC_DESTINO.CIA,
EMB_DOC.DOC,
EMB_DOC_DESTINO.ORIGINAL_NUM,
EMB_DOC_DESTINO.CÓPIA_NUM,
EMB_DOC_DESTINO.ORIGINAL_VISADA_NUM,
EMB_DOC_DESTINO.CÓPIA_VISADA_NUM
FROM EMB_DOC, EMB_DOC_DESTINO
WHERE
EMB_DOC_DESTINO.EMB_REF = EMB_DOC.EMB_REF(+) AND
EMB_DOC_DESTINO.SEQ = EMB_DOC.SEQ(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view CONHECIM_RODOV_EXP');
CREATE OR REPLACE VIEW CONHECIM_RODOV_EXP AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB.DATA_EMISSÃO_DOC,
EMB.EXP,
EMB.EXP_ENDEREÇO,
EMB.EXP_PAÍS,
EMB.IMP,
EMB.IMP_ENDEREÇO,
EMB.IMP_PAÍS,
EMB.CONSIGNATÁRIO,
EMB.CONSIGN_ENDEREÇO,
EMB.CONSIGN_PAÍS,
EMB.NOTIFICAR,
EMB.NOTIFICAR_ENDEREÇO,
EMB.NOTIFICAR_PAÍS,
EMB.CARGA_PORTO,
EMB.DESCARGA_PORTO,
EMB_FAMÍLIA_GENÉRICA.FAMÍLIA,
EMB.MARCAÇÃO,
ITEM.QTD_VOL,
ITEM.PESO_LÍQUIDO,
ITEM.PESO_BRUTO,
EMB.IDIOMA,
CIA.LOGOTIPO,
ITEM.EMBALAGEM,
EMB.PESO_UNID,
EMB_DOC.PARAM,
PARAM.FATURA_EXP Fat,
EMB.MOEDA,
EMB_TOT_EXP.TOTAL_GERAL AS VALOR
FROM EMB_DOC,EMB,EMB_FAMÍLIA_GENÉRICA,PED_ITEM,CIA,BL_CARGA,
(
     SELECT
     EMB_REF,
     SUM(TOTAL_GERAL)+SUM(FRETE) TOTAL_GERAL
     FROM
     (SELECT EMB_REF,
     DECODE(LANÇ,'CUSTO',VALOR,0) TOTAL_GERAL,
     DECODE(LANÇ,'FRETE',VALOR,0) FRETE
     FROM EMB_LANÇ WHERE EXP='-1')
     GROUP BY
     EMB_REF
) EMB_TOT_EXP,
(
     SELECT
     REF,
     FAT_EXP.FATURA_EXP
     FROM
     EMB_PARAM,
     (SELECT EMB_REF, PARAM AS FATURA_EXP FROM EMB_DOC WHERE DOC = 'FATURA EXP') FAT_EXP
     WHERE
     EMB_PARAM.REF = FAT_EXP.EMB_REF(+)
     GROUP BY
     REF,
     FAT_EXP.FATURA_EXP
) PARAM,
(
     SELECT
     EMB_REF,
     SEQ,
     SUM(QTD_VOL) QTD_VOL,
     SUM(PESO_LÍQUIDO) PESO_LÍQUIDO,
     SUM(PESO_BRUTO) PESO_BRUTO,
     BL_SEQ,
     VIAGEM_REF,
     PED_REF,
     PED_ITEM,
     EMBALAGEM
     FROM
     EMB_ITEM
     GROUP BY
     EMB_REF,
     SEQ,
     BL_SEQ,
     VIAGEM_REF,
     PED_REF,
     PED_ITEM,
     EMBALAGEM
) ITEM
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB.REF = PARAM.REF(+) AND
EMB.REF = Emb_Tot_Exp.EMB_REF(+) AND
EMB.EXP_LOGOTIPO = CIA.COD(+) AND
ITEM.PED_ITEM = PED_ITEM.ITEM(+) AND
ITEM.PED_REF = PED_ITEM.PED_REF(+) AND
ITEM.BL_SEQ = BL_CARGA.BL_SEQ(+) AND
ITEM.VIAGEM_REF = BL_CARGA.VIAGEM_REF(+) AND
ITEM.PED_ITEM = BL_CARGA.PED_ITEM(+) AND
ITEM.PED_REF = BL_CARGA.PED_REF(+) AND
BL_CARGA.FAMÍLIA_GENÉRICA = EMB_FAMÍLIA_GENÉRICA.SEQ(+) AND
BL_CARGA.EMB_REF = EMB_FAMÍLIA_GENÉRICA.EMB_REF(+) AND
EMB.REF = ITEM.EMB_REF(+) AND
EMB_DOC.DOC='CONHECIM RODOVIÁRIO EXP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view CONHECIM_RODOV_IMP');
CREATE OR REPLACE VIEW CONHECIM_RODOV_IMP AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ SEQ_DOC,
EMB.DATA_EMISSÃO_DOC,
EMB.EXP,
EMB.EXP_ENDEREÇO,
EMB.EXP_PAÍS,
EMB.PAGADOR,
EMB.PAG_ENDEREÇO,
EMB.PAG_PAÍS,
EMB.CONSIGNATÁRIO,
EMB.CONSIGN_ENDEREÇO,
EMB.CONSIGN_PAÍS,
EMB.NOTIFICAR,
EMB.NOTIFICAR_ENDEREÇO,
EMB.NOTIFICAR_PAÍS,
EMB.CARGA_PORTO,
EMB.DESCARGA_PORTO,
EMB_FAMÍLIA_GENÉRICA.FAMÍLIA,
EMB.MARCAÇÃO,
ITEM.QTD_VOL,
ITEM.PESO_LÍQUIDO,
ITEM.PESO_BRUTO,
EMB.IDIOMA,
CIA.LOGOTIPO,
ITEM.EMBALAGEM,
EMB.PESO_UNID,
EMB_DOC.PARAM ,
PARAM.FATURA_IMP Fat,
EMB.MOEDA,
Emb_Tot_Imp.TOTAL_GERAL AS VALOR
FROM EMB_DOC,EMB,EMB_FAMÍLIA_GENÉRICA,PED_ITEM,CIA,BL_CARGA,
(
     SELECT
     EMB_REF,
     SUM(TOTAL_GERAL)+SUM(FRETE) TOTAL_GERAL
     FROM
     (SELECT EMB_REF,
     DECODE(LANÇ,'CUSTO',VALOR,0) TOTAL_GERAL,
     DECODE(LANÇ,'FRETE',VALOR,0) FRETE
     FROM EMB_LANÇ WHERE IMP='-1')
     GROUP BY
     EMB_REF
) EMB_TOT_IMP,
(
     SELECT
     REF,
     FAT_IMP.FATURA_IMP
     FROM
     EMB_PARAM,
     (SELECT EMB_REF, PARAM AS FATURA_IMP FROM EMB_DOC WHERE DOC = 'FATURA IMP') FAT_IMP
     WHERE
     EMB_PARAM.REF = FAT_IMP.EMB_REF(+)
     GROUP BY
     REF,
     FAT_IMP.FATURA_IMP
) PARAM,
(
     SELECT
     EMB_REF,
     SEQ,
     SUM(QTD_VOL) QTD_VOL,
     SUM(PESO_LÍQUIDO) PESO_LÍQUIDO,
     SUM(PESO_BRUTO) PESO_BRUTO,
     BL_SEQ,
     VIAGEM_REF,
     PED_REF,
     PED_ITEM,
     EMBALAGEM
     FROM
     EMB_ITEM
     GROUP BY
     EMB_REF,
     SEQ,
     BL_SEQ,
     VIAGEM_REF,
     PED_REF,
     PED_ITEM,
     EMBALAGEM
) ITEM
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB.REF = PARAM.REF(+) AND
EMB.REF = Emb_Tot_IMP.EMB_REF(+) AND
EMB.IMP_LOGOTIPO = CIA.COD(+) AND
ITEM.PED_ITEM = PED_ITEM.ITEM(+) AND
ITEM.PED_REF = PED_ITEM.PED_REF(+) AND
ITEM.BL_SEQ = BL_CARGA.BL_SEQ(+) AND
ITEM.VIAGEM_REF = BL_CARGA.VIAGEM_REF(+) AND
ITEM.PED_ITEM = BL_CARGA.PED_ITEM(+) AND
ITEM.PED_REF = BL_CARGA.PED_REF(+) AND
BL_CARGA.FAMÍLIA_GENÉRICA = EMB_FAMÍLIA_GENÉRICA.SEQ(+) AND
BL_CARGA.EMB_REF = EMB_FAMÍLIA_GENÉRICA.EMB_REF(+) AND
EMB.REF = ITEM.EMB_REF(+) AND
EMB_DOC.DOC='CONHECIM RODOVIÁRIO IMP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view EMB_COM_SOMA_QUANT');
CREATE OR REPLACE VIEW EMB_COM_SOMA_QUANT AS
SELECT PED_ITEM.PED_REF, PED_ITEM.ITEM, BL_CARGA.VIAGEM_REF, MAX (BL.BL_DATA) BL_DATA, PED_ITEM.PED_UNID, Sum(BL_CARGA.QTD_PED_UNID) AS QTD, VIAGEM.NAVIO
FROM CXBH.PED_ITEM, CXBH.BL_CARGA, CXBH.VIAGEM, CXBH.BL
WHERE BL_CARGA.VIAGEM_REF = VIAGEM.REF AND
PED_ITEM.ITEM = BL_CARGA.PED_ITEM AND
PED_ITEM.PED_REF = BL_CARGA.PED_REF  AND
BL_CARGA.VIAGEM_REF = BL.VIAGEM_REF AND
BL_CARGA.BL_SEQ = BL.SEQ
GROUP BY PED_ITEM.PED_REF, PED_ITEM.ITEM, BL_CARGA.VIAGEM_REF, PED_ITEM.PED_UNID, VIAGEM.NAVIO

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view EMB_DESP_EXP');
CREATE OR REPLACE VIEW EMB_DESP_EXP AS
SELECT DISTINCT
     BORDERO_EMB_DOC_REL.EMB_REF,
     BORDERO_EMB_DOC_REL.SEQ_DOC,
     JUROS.JUROS_EXP
     FROM
     (SELECT EMB_LANÇ.EMB_REF, SUM(EXP_CALC) JUROS_EXP FROM EMB_LANÇ WHERE LANÇ = 'JUROS' AND EXP = -1 GROUP BY EMB_REF HAVING SUM(EXP_CALC) > 0)"JUROS",
     BORDERO_EMB_DOC_REL
     WHERE BORDERO_EMB_DOC_REL.EMB_REL = JUROS.EMB_REF(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view EMB_DESP_IMP');
CREATE OR REPLACE VIEW EMB_DESP_IMP AS
SELECT DISTINCT EL.EMB_REF, JUROS
FROM EMB_LANÇ "EL",
  (SELECT EB.EMB_REF, SUM(IMP_CALC) AS JUROS FROM EMB_LANÇ "EB" WHERE LANÇ = 'JUROS' AND IMP = -1 GROUP BY EMB_REF HAVING SUM(IMP_CALC) > 0)
  "JUROS"
WHERE EL.EMB_REF = JUROS.EMB_REF(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view EMB_PARAM');
CREATE OR REPLACE VIEW EMB_PARAM AS
SELECT EMB.REF, FE.FATURA_EXP, FI.FATURA_IMP
FROM EMB,
  (SELECT EMB_REF, PARAM AS FATURA_EXP FROM EMB_DOC WHERE DOC = 'FATURA EXP')
  "FE",
  (SELECT EMB_REF, PARAM AS FATURA_IMP FROM EMB_DOC WHERE DOC = 'FATURA IMP')
  "FI"
WHERE
EMB.REF = FE.EMB_REF(+) AND
EMB.REF = FI.EMB_REF(+) AND
(EMB.REF LIKE '%-01-%' OR EMB.REF LIKE '%-02-%')

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view EMB_PARAM_FIX');
CREATE OR REPLACE VIEW EMB_PARAM_FIX AS
SELECT EMB.REF, FE.FATURA_EXP, FI.FATURA_IMP
FROM EMB,
  (SELECT EMB_REF, PARAM AS FATURA_EXP FROM EMB_DOC WHERE DOC = 'FATURA EXP')
  "FE",
  (SELECT EMB_REF, PARAM AS FATURA_IMP FROM EMB_DOC WHERE DOC = 'FATURA IMP')
  "FI"
WHERE EMB.REF = FE.EMB_REF(+)
  AND EMB.REF = FI.EMB_REF(+) AND
EMB.REF = 'DIML-00-00397'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view EMB_QTD');
CREATE OR REPLACE VIEW EMB_QTD AS
SELECT EMB_ITEM.EMB_REF, MIN(PED_ITEM.PED_UNID) AS PED_UNID, Sum(BL_CARGA.QTD_PED_UNID) AS QTD_PED_UNID, MIN(EMB.FRETE_UNID) AS FRETE_UNID, Sum(BL_CARGA.QTD_FRETE_UNID) AS QTD_FRETE_UNID, Sum(EMB_ITEM.PESO_BRUTO) AS PESO_BRUTO
FROM EMB_ITEM,EMB,BL_CARGA,PED_ITEM
WHERE EMB_ITEM.EMB_REF = EMB.REF(+) AND EMB_ITEM.PED_ITEM = BL_CARGA.PED_ITEM(+) AND EMB_ITEM.BL_SEQ = BL_CARGA.BL_SEQ(+) AND EMB_ITEM.VIAGEM_REF = BL_CARGA.VIAGEM_REF(+) AND EMB_ITEM.PED_REF = BL_CARGA.PED_REF(+) AND EMB_ITEM.PED_ITEM = PED_ITEM.ITEM(+) AND EMB_ITEM.PED_REF = PED_ITEM.PED_REF(+)
GROUP BY EMB_ITEM.EMB_REF

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view EMB_TOT_EXP');
CREATE OR REPLACE VIEW EMB_TOT_EXP AS
SELECT EMB_REF, SUM(FRETE) FRETE, SUM(TOTAL_GERAL) TOTAL_GERAL, SUM(TOTAL_FOB) TOTAL_FOB, SUM(JUROS) JUROS FROM
(SELECT EMB_REF,
DECODE(LANÇ,'FRETE',EXP_CALC,0) FRETE,
DECODE(LANÇ,'TOTAL GERAL',EXP_CALC,0) TOTAL_GERAL,
DECODE(LANÇ,'TOTAL FOB',EXP_CALC,0) TOTAL_FOB,
DECODE(LANÇ,'JUROS',EXP_CALC,0) JUROS
FROM EMB_TOTALIZA)
GROUP BY EMB_REF

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view EMB_TOT_IMP');
CREATE OR REPLACE VIEW EMB_TOT_IMP AS
SELECT EMB_REF, SUM(FRETE) FRETE, SUM(TOTAL_GERAL) TOTAL_GERAL, SUM(TOTAL_FOB) TOTAL_FOB, SUM(JUROS) JUROS FROM
(SELECT EMB_REF,
DECODE(LANÇ,'FRETE',IMP_CALC,0) FRETE,
DECODE(LANÇ,'TOTAL GERAL',IMP_CALC,0) TOTAL_GERAL,
DECODE(LANÇ,'TOTAL FOB',IMP_CALC,0) TOTAL_FOB,
DECODE(LANÇ,'JUROS',IMP_CALC,0) JUROS
FROM EMB_TOTALIZA)
GROUP BY EMB_REF

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FATURA_EXP');
CREATE OR REPLACE VIEW FATURA_EXP AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB_ITEM.SEQ AS SEQ_ITEM,
EMB_FAMÍLIA.SEQ AS SEQ_FAMÍLIA,
EMB.TOTALIZAÇÃO_EMBALAGEM,
EMB_ITEM.PED_REF,
EMB_ITEM.PED_ITEM,
EMB.DATA_EMISSÃO_DOC,
EMB.MOEDA,
EMB.IDIOMA,
EMB.EXP,
EMB.EXP_ENDEREÇO,
EMB.EXP_PAÍS,
EMB.IMP,
EMB.IMP_ENDEREÇO,
EMB.IMP_PAÍS,
EMB.TRANSPORTADOR,
EMB.CARGA_PORTO,
EMB.DESCARGA_PORTO,
EMB.EXP_COND_PAG,
EMB_FAMÍLIA.FAMÍLIA AS FAMÍLIA_DETALHADA,
EMB_FAMÍLIA_GENÉRICA.FAMÍLIA AS FAMÍLIA_GENÉRICA,
EMB.TIPO_DESCR_MERCADORIA,
EMB.PESO_UNID,
EMB.PREÇO_UNITÁRIO_UNID,
EMB.PREÇO_UNID,
EMB_ITEM.DESCR,
EMB_ITEM.QTD_VOL,
EMB_ITEM.PESO_LÍQUIDO,
EMB_ITEM.PESO_BRUTO,
EMB_ITEM.EXP_PREÇO_UNIT,
EMB_ITEM.EXP_TOTAL_CALC,
DECODE(EMB_ITEM.QTD_VOL,0,0,EMB_ITEM.EXP_TOTAL_CALC/EMB_ITEM.QTD_VOL) PREÇO_EMB,
EMB_DOC.PARAM,
EMB_TOT_EXP.FRETE,
EMB_TOT_EXP.TOTAL_GERAL,
EMB_ITEM.EMBALAGEM,
CIA.LOGOTIPO,
EMB.NUM_BL_DESCR
FROM EMB_DOC, EMB, CIA, EMB_ITEM, PED_ITEM, BL_CARGA, EMB_FAMÍLIA_GENÉRICA, EMB_FAMÍLIA,
(
     SELECT
     EMB_REF, SUM(FRETE) FRETE, SUM(TOTAL_GERAL) TOTAL_GERAL
     FROM
     (SELECT EMB_REF,
     DECODE(LANÇ,'FRETE',EXP_CALC,0) FRETE,
     DECODE(LANÇ,'TOTAL GERAL',EXP_CALC,0) TOTAL_GERAL
     FROM EMB_TOTALIZA)
     GROUP BY EMB_REF
) EMB_TOT_EXP
WHERE EMB_DOC.EMB_REF = EMB.REF(+) AND EMB.EXP_LOGOTIPO = CIA.COD(+) AND EMB.REF = EMB_TOT_EXP.EMB_REF(+) AND EMB_ITEM.BL_SEQ = BL_CARGA.BL_SEQ(+) AND EMB_ITEM.VIAGEM_REF = BL_CARGA.VIAGEM_REF(+) AND EMB_ITEM.PED_ITEM = BL_CARGA.PED_ITEM(+) AND EMB_ITEM.PED_REF = BL_CARGA.PED_REF(+) AND EMB_ITEM.PED_ITEM = PED_ITEM.ITEM(+) AND EMB_ITEM.PED_REF = PED_ITEM.PED_REF(+) AND BL_CARGA.FAMÍLIA = EMB_FAMÍLIA.SEQ(+) AND BL_CARGA.EMB_REF = EMB_FAMÍLIA.EMB_REF(+) AND BL_CARGA.FAMÍLIA_GENÉRICA = EMB_FAMÍLIA_GENÉRICA.SEQ(+) AND BL_CARGA.EMB_REF = EMB_FAMÍLIA_GENÉRICA.EMB_REF(+) AND EMB.REF = EMB_ITEM.EMB_REF(+) AND EMB_DOC.DOC='FATURA EXP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FATURA_EXP_SUB');
CREATE OR REPLACE VIEW FATURA_EXP_SUB AS
SELECT EMB_TOTALIZA.EMB_REF, EMB_TOTALIZA.SEQ, EMB_TOTALIZA.EXP_CALC AS VALOR, EMB.IDIOMA, EMB_TOTALIZA.EXP, EMB_TOTALIZA.EXP_DESCR, EMB_TOTALIZA.LANÇ
FROM EMB_TOTALIZA,EMB
WHERE EMB.REF = EMB_TOTALIZA.EMB_REF(+) AND EMB_TOTALIZA.EXP = -1

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FATURA_IMP');
CREATE OR REPLACE VIEW FATURA_IMP AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB_ITEM.SEQ AS SEQ_ITEM,
EMB_FAMÍLIA.SEQ AS SEQ_FAMÍLIA,
EMB.TOTALIZAÇÃO_EMBALAGEM,
EMB_ITEM.PED_REF,
EMB_ITEM.PED_ITEM,
EMB.DATA_EMISSÃO_DOC,
EMB.MOEDA,
EMB.IDIOMA,
EMB.PAGADOR,
EMB.PAG_ENDEREÇO,
EMB.PAG_PAÍS,
EMB.IMP,
EMB.IMP_ENDEREÇO,
EMB.IMP_PAÍS,
EMB.TRANSPORTADOR,
EMB.CARGA_PORTO,
EMB.DESCARGA_PORTO,
EMB.IMP_COND_PAG,
EMB_FAMÍLIA.FAMÍLIA AS FAMÍLIA_DETALHADA,
EMB_FAMÍLIA_GENÉRICA.FAMÍLIA AS FAMÍLIA_GENÉRICA,
EMB.TIPO_DESCR_MERCADORIA,
EMB.PESO_UNID,
EMB.PREÇO_UNITÁRIO_UNID,
EMB.PREÇO_UNID,
EMB_ITEM.DESCR,
EMB_ITEM.QTD_VOL,
EMB_ITEM.PESO_LÍQUIDO,
EMB_ITEM.PESO_BRUTO,
EMB_ITEM.IMP_PREÇO_UNIT,
EMB_ITEM.IMP_TOTAL_CALC,
EMB_DOC.PARAM,
EMB_TOT_IMP.FRETE,
EMB_TOT_IMP.TOTAL_GERAL,
EMB_ITEM.EMBALAGEM,
DECODE(EMB_ITEM.QTD_VOL,0,0,EMB_ITEM.IMP_TOTAL_CALC/EMB_ITEM.QTD_VOL) PREÇO_EMB,
CIA.LOGOTIPO,
EMB.NUM_BL_DESCR
FROM EMB_DOC, EMB, CIA, EMB_ITEM, PED_ITEM, BL_CARGA, EMB_FAMÍLIA_GENÉRICA, EMB_FAMÍLIA,
(
     SELECT
     EMB_REF, SUM(FRETE) FRETE, SUM(TOTAL_GERAL) TOTAL_GERAL
     FROM
     (SELECT EMB_REF,
     DECODE(LANÇ,'FRETE',IMP_CALC,0) FRETE,
     DECODE(LANÇ,'TOTAL GERAL',IMP_CALC,0) TOTAL_GERAL
     FROM EMB_TOTALIZA)
     GROUP BY EMB_REF
) EMB_TOT_IMP
WHERE     EMB_DOC.EMB_REF = EMB.REF(+) AND
     EMB.IMP_LOGOTIPO = CIA.COD(+) AND
     EMB.REF = EMB_TOT_IMP.EMB_REF(+) AND
     EMB_ITEM.BL_SEQ = BL_CARGA.BL_SEQ(+) AND
     EMB_ITEM.VIAGEM_REF = BL_CARGA.VIAGEM_REF(+) AND
     EMB_ITEM.PED_ITEM = BL_CARGA.PED_ITEM(+) AND
     EMB_ITEM.PED_REF = BL_CARGA.PED_REF(+) AND
     EMB_ITEM.PED_ITEM = PED_ITEM.ITEM(+) AND
     EMB_ITEM.PED_REF = PED_ITEM.PED_REF(+) AND
     BL_CARGA.FAMÍLIA = EMB_FAMÍLIA.SEQ(+) AND
     BL_CARGA.EMB_REF = EMB_FAMÍLIA.EMB_REF(+) AND
     BL_CARGA.FAMÍLIA_GENÉRICA = EMB_FAMÍLIA_GENÉRICA.SEQ(+) AND
     BL_CARGA.EMB_REF = EMB_FAMÍLIA_GENÉRICA.EMB_REF(+) AND
     EMB.REF = EMB_ITEM.EMB_REF(+) AND
     EMB_DOC.DOC='FATURA IMP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FATURA_IMP_SUB');
CREATE OR REPLACE VIEW FATURA_IMP_SUB AS
SELECT EMB_TOTALIZA.EMB_REF, EMB_TOTALIZA.SEQ, EMB_TOTALIZA.IMP_CALC AS VALOR, EMB.IDIOMA, EMB_TOTALIZA.IMP, EMB_TOTALIZA.IMP_DESCR, EMB_TOTALIZA.LANÇ
FROM EMB_TOTALIZA,EMB
WHERE EMB.REF = EMB_TOTALIZA.EMB_REF(+) AND EMB_TOTALIZA.IMP = -1

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FATURA_ITF_1_SUB');
CREATE OR REPLACE VIEW FATURA_ITF_1_SUB AS
SELECT F.REF, PI.PROD, PI.PED_UNID, Sum(B.QTD_PED_UNID) AS QTD_PED_UNID, VE.PORTO AS PORTO_DESCARGA, VE.ETA FROM CXBH.Fech "F", CXBH.Viagem_Escala "VE", CXBH.BL_Carga "B", CXBH.PED_ITEM "PI" WHERE F.VIAGEM_REF = VE.VIAGEM_REF(+) AND F.DESCARGA_PORTO_ESCALA = VE.ESCALA(+) AND B.PED_ITEM = PI.ITEM(+) AND B.PED_REF = PI.PED_REF(+) AND F.REF = B.FECH_REF(+) GROUP BY F.REF, PI.PROD, PI.PED_UNID, VE.PORTO, VE.ETA

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FATURA_JUROS_EMB_DOC_REL');
CREATE OR REPLACE VIEW FATURA_JUROS_EMB_DOC_REL AS
SELECT EMB_REF, SEQ SEQ_DOC , -1 AS Original , EMB_REF EMB_REL
FROM EMB_DOC
WHERE DOC LIKE 'FATURA DE JUROS %'
UNION SELECT EMB_REF, Doc, 0 AS Original, Emb_Rel
FROM Emb_Doc_Rel

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FATURA_JUROS_EXP');
CREATE OR REPLACE VIEW FATURA_JUROS_EXP AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
BL.BL_NUM,
EMB.IDIOMA,
EMB.NUM_BL_DESCR,
EMB.MOEDA,
EMB.EXP,
EMB.EXP_ENDEREÇO,
EMB.EXP_PAÍS,
EMB.IMP,
EMB.IMP_ENDEREÇO,
EMB.IMP_PAÍS,
EMB.EMB_DATA,
EMB.TRANSPORTADOR,
EMB_DOC.PARAM,
CIA.LOGOTIPO,
SUBSTR(FATURA_EXP,1) AS FAT,
TOTAL_GERAL_VALORES.TOTAL_GERAL_EXP TOTAL_GERAL,
JUROS_VALORES.JUROS_EXP JUROS
FROM EMB_DOC, BL, EMB, CIA, VIAGEM,
(
     SELECT
       FATURA_JUROS_EMB_DOC_REL.EMB_REF,
     FATURA_JUROS_EMB_DOC_REL.SEQ_DOC,
      SUM(JUROS_EXP) JUROS_EXP
       FROM
     FATURA_JUROS_EMB_DOC_REL,
     (SELECT EMB_REF,
     DECODE(EXP,-1,EXP_CALC,0) JUROS_EXP
     FROM EMB_LANÇ
     WHERE LANÇ = 'JUROS') JUROS_TOT
        WHERE
     FATURA_JUROS_EMB_DOC_REL.EMB_REL = JUROS_TOT.EMB_REF(+)
     GROUP BY
     FATURA_JUROS_EMB_DOC_REL.EMB_REF,
     FATURA_JUROS_EMB_DOC_REL.SEQ_DOC
) JUROS_VALORES,
(
     SELECT
       FATURA_JUROS_EMB_DOC_REL.EMB_REF,
     FATURA_JUROS_EMB_DOC_REL.SEQ_DOC,
      SUM(TOTAL_GERAL_EXP) TOTAL_GERAL_EXP
       FROM
     FATURA_JUROS_EMB_DOC_REL,
     (SELECT EMB_REF,
     DECODE(EXP,-1,EXP_CALC,0) TOTAL_GERAL_EXP
     FROM EMB_TOTALIZA
     WHERE LANÇ = 'TOTAL GERAL') TOT_GERAL
        WHERE
     FATURA_JUROS_EMB_DOC_REL.EMB_REL = TOT_GERAL.EMB_REF(+)
     GROUP BY
     FATURA_JUROS_EMB_DOC_REL.EMB_REF,
     FATURA_JUROS_EMB_DOC_REL.SEQ_DOC
) TOTAL_GERAL_VALORES,
(
     SELECT
     FATURA_JUROS_EMB_DOC_REL.EMB_REF,
     FATURA_JUROS_EMB_DOC_REL.SEQ_DOC,
     FAT_EXP.FATURA_EXP
     FROM FATURA_JUROS_EMB_DOC_REL,
     (SELECT EMB_REF, PARAM AS FATURA_EXP FROM EMB_DOC WHERE DOC = 'FATURA EXP') FAT_EXP
     WHERE
     FATURA_JUROS_EMB_DOC_REL.EMB_REL = FAT_EXP.EMB_REF(+)
) EMB_PARAM
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB_DOC.EMB_REF = JUROS_VALORES.EMB_REF(+) AND
EMB_DOC.SEQ = JUROS_VALORES.SEQ_DOC(+) AND
EMB_DOC.EMB_REF = TOTAL_GERAL_VALORES.EMB_REF(+) AND
EMB_DOC.SEQ = TOTAL_GERAL_VALORES.SEQ_DOC(+) AND
EMB_DOC.EMB_REF = EMB_PARAM.EMB_REF(+) AND
EMB_DOC.SEQ = EMB_PARAM.SEQ_DOC(+) AND
EMB.EXP_LOGOTIPO = CIA.COD(+) AND
EMB.REF = BL.EMB_REF(+) AND
BL.VIAGEM_REF = VIAGEM.REF(+) AND
EMB_DOC.DOC = 'FATURA DE JUROS EXP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FATURA_JUROS_IMP');
CREATE OR REPLACE VIEW FATURA_JUROS_IMP AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ SEQ_DOC,
BL.BL_NUM,
EMB.IDIOMA,
EMB.NUM_BL_DESCR,
EMB.MOEDA,
EMB.PAGADOR,
EMB.PAG_ENDEREÇO,
EMB.PAG_PAÍS,
EMB.IMP,
EMB.IMP_ENDEREÇO,
EMB.IMP_PAÍS,
EMB.IMP_COND_PAG,
EMB.EMB_DATA,
EMB.TRANSPORTADOR,
EMB_DOC.PARAM,
CIA.LOGOTIPO,
SUBSTR(FATURA_IMP,1) AS FAT,
TOTAL_GERAL_VALORES.TOTAL_GERAL_IMP TOTAL_GERAL,
JUROS_VALORES.JUROS_IMP JUROS
FROM EMB_DOC, BL, EMB, CIA, VIAGEM,
(
     SELECT
       FATURA_JUROS_EMB_DOC_REL.EMB_REF,
     FATURA_JUROS_EMB_DOC_REL.SEQ_DOC,
      SUM(JUROS_IMP) JUROS_IMP
       FROM
     FATURA_JUROS_EMB_DOC_REL,
     (SELECT EMB_REF,
     DECODE(IMP,-1,IMP_CALC,0) JUROS_IMP
     FROM EMB_LANÇ
     WHERE LANÇ = 'JUROS') JUROS_TOT
        WHERE
     FATURA_JUROS_EMB_DOC_REL.EMB_REL = JUROS_TOT.EMB_REF(+)
     GROUP BY
     FATURA_JUROS_EMB_DOC_REL.EMB_REF,
     FATURA_JUROS_EMB_DOC_REL.SEQ_DOC
) JUROS_VALORES,
(
     SELECT
       FATURA_JUROS_EMB_DOC_REL.EMB_REF,
     FATURA_JUROS_EMB_DOC_REL.SEQ_DOC,
      SUM(TOTAL_GERAL_IMP) TOTAL_GERAL_IMP
       FROM
     FATURA_JUROS_EMB_DOC_REL,
     (SELECT EMB_REF,
     DECODE(IMP,-1,IMP_CALC,0) TOTAL_GERAL_IMP
     FROM EMB_TOTALIZA
     WHERE LANÇ = 'TOTAL GERAL') TOT_GERAL
        WHERE
     FATURA_JUROS_EMB_DOC_REL.EMB_REL = TOT_GERAL.EMB_REF(+)
     GROUP BY
     FATURA_JUROS_EMB_DOC_REL.EMB_REF,
     FATURA_JUROS_EMB_DOC_REL.SEQ_DOC
) TOTAL_GERAL_VALORES,
(
     SELECT
     FATURA_JUROS_EMB_DOC_REL.EMB_REF,
     FATURA_JUROS_EMB_DOC_REL.SEQ_DOC,
     FAT_IMP.FATURA_IMP
     FROM FATURA_JUROS_EMB_DOC_REL,
     (SELECT EMB_REF, PARAM AS FATURA_IMP FROM EMB_DOC WHERE DOC = 'FATURA IMP') FAT_IMP
     WHERE
     FATURA_JUROS_EMB_DOC_REL.EMB_REL = FAT_IMP.EMB_REF(+)
) EMB_PARAM
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB_DOC.EMB_REF = JUROS_VALORES.EMB_REF(+) AND
EMB_DOC.SEQ = JUROS_VALORES.SEQ_DOC(+) AND
EMB_DOC.EMB_REF = TOTAL_GERAL_VALORES.EMB_REF(+) AND
EMB_DOC.SEQ = TOTAL_GERAL_VALORES.SEQ_DOC(+) AND
EMB_DOC.EMB_REF = EMB_PARAM.EMB_REF(+) AND
EMB_DOC.SEQ = EMB_PARAM.SEQ_DOC(+) AND
EMB.IMP_LOGOTIPO = CIA.COD(+) AND
EMB.REF = BL.EMB_REF(+) AND
BL.VIAGEM_REF = VIAGEM.REF(+) AND
EMB_DOC.DOC = 'FATURA DE JUROS IMP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FATURA_JUROS_VALORES');
CREATE OR REPLACE VIEW FATURA_JUROS_VALORES AS
SELECT EMB.REF, EMB_LANÇ.EXP_CALC AS Juros_Exp, EMB_LANÇ.IMP_CALC AS Juros_Imp
FROM EMB,EMB_LANÇ
WHERE EMB.REF = EMB_LANÇ.EMB_REF(+) AND EMB_LANÇ.LANÇ='JUROS'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FATURA_TOTAL_GERAL_VALORES');
CREATE OR REPLACE VIEW FATURA_TOTAL_GERAL_VALORES AS
SELECT EMB.REF, EMB_TOTALIZA.EXP_CALC AS Total_Geral_Exp, EMB_TOTALIZA.IMP_CALC AS Total_Geral_Imp
FROM EMB, EMB_TOTALIZA
WHERE EMB.REF = EMB_TOTALIZA.EMB_REF(+) AND EMB_TOTALIZA.LANÇ='TOTAL GERAL'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FAX_2');
CREATE OR REPLACE VIEW FAX_2 AS
SELECT SUB.REF,FC.FECH_REF,FC.FECH_REF FIXTURE, PI.PED_REF , PI.ITEM , PI.PROD,
PI.EMBALAGEM,  SUB.SUBSTITUTO, FC.QTD_PED_UNID,FC.PED_ITEM,
 PI.USUÁRIO_FINAL, PI.PROD_DESCR
, PI.PED_UNID, FC.QTD_FRETE_UNID, SUB.FRETE_UNID,PI.P, PI.LOTE,
 PI.OV,PI.NE_ITEM, PI.TBN,PI.FSE, PI.PO
FROM  CXBH.PED_ITEM PI, CXBH.FECH_CARGA FC,
 (SELECT F.REF, FS.SUBSTITUTO, F.FRETE_UNID
 FROM
 CXBH.FECH F , CXBH.FECH_SUBSTITUÍDO FS
 WHERE
 F.REF= FS.SUBSTITUÍDO(+) AND
 FS.SUBSTITUTO IS NULL) SUB
WHERE
FC.FECH_REF = SUB.REF(+) AND
FC.PED_REF = PI.PED_REF(+) AND
FC.PED_ITEM = PI.ITEM (+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FAX_2_CSN');
CREATE OR REPLACE VIEW FAX_2_CSN AS
SELECT SUB.REF,FC.FECH_REF,FC.FECH_REF FIXTURE, PI.PED_REF , PI.ITEM , PI.PROD,
PI.EMBALAGEM,  SUB.SUBSTITUTO, FC.QTD_PED_UNID,FC.PED_ITEM,
 PI.USUÁRIO_FINAL, PI.PROD_DESCR
, PI.PED_UNID, FC.QTD_FRETE_UNID, SUB.FRETE_UNID,PI.P, PI.LOTE,
 PI.OV,PI.NE_ITEM, PI.TBN,PI.FSE, PI.PO
FROM  CXBH.PED_ITEM PI, CXBH.FECH_CARGA FC,
 (SELECT F.REF, FS.SUBSTITUTO, F.FRETE_UNID
 FROM
 CXBH.FECH F , CXBH.FECH_SUBSTITUÍDO FS
 WHERE
 F.REF= FS.SUBSTITUÍDO(+) AND
 FS.SUBSTITUTO IS NULL) SUB
WHERE
FC.FECH_REF = SUB.REF(+) AND
FC.PED_REF = PI.PED_REF(+) AND
FC.PED_ITEM = PI.ITEM (+) AND
PI.OV IS NOT NULL AND
PI.NE_ITEM IS NOT NULL

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FAX_CHAVE_REF');
CREATE OR REPLACE VIEW FAX_CHAVE_REF AS
SELECT FECH.REF, FECH.CONTRATANTE, FECH.PROPRIETÁRIO, VIAGEM.NAVIO,
CARGA.ETA, CARGA.PORTO CARGA_PORTO, DESCARGA.PORTO DESCARGA_PORTO
FROM FECH,
     (SELECT REF, NAVIO FROM VIAGEM) VIAGEM,
     (SELECT VIAGEM_REF, ESCALA, ETA, PORTO FROM VIAGEM_ESCALA) CARGA,
     (SELECT VIAGEM_REF, ESCALA, PORTO FROM VIAGEM_ESCALA) DESCARGA
WHERE
     FECH.VIAGEM_REF = VIAGEM.REF (+) AND
     FECH.VIAGEM_REF = CARGA.VIAGEM_REF (+) AND
     FECH.CARGA_PORTO_ESCALA = CARGA.ESCALA (+) AND
     FECH.VIAGEM_REF = DESCARGA.VIAGEM_REF (+) AND
     FECH.DESCARGA_PORTO_ESCALA = DESCARGA.ESCALA (+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FAX_CONT_EST_D');
CREATE OR REPLACE VIEW FAX_CONT_EST_D AS
SELECT FAX.REF AS REGISTRO, FAX.REF AS REF, FAX.USUÁRIO, FAX.MOMENTO_ENVIA, FAX.PÁGINAS_ADICIONAIS, FAX.DE, FAX.ASSUNTO,FAX.FAX_CORPO,  FAX.COMENTÁRIO, F.REF AS FECH_REF, V.NAVIO, V.REF AS VIAGEM_REF, EVL.PORTO AS PORTO_CARGA, EVL.ETA AS ETA_CARGA, EVD.PORTO AS PORTO_DESCARGA, EVD.ETA AS ETA_DESCARGA, F.FRETE_UNID, F.FRETE_VALOR, F.FRETE_VALOR_POR_UNID, F.COMISSÃO_FRETE, F.COMISSÃO_PERCENT, F.DESCARGA_AGENTE, F.DESCARGA_OBS, PI.USUÁRIO_FINAL, SYS_USUÁRIO.SUPERVISOR, PED.EXP AS EXP, F.FRETE_PAG_DETALHE, F.CARGA_DETALHE, F.DESCARGA_DETALHE, F.MOEDA, PED.FRETE_COND, F.COMISSÃO_BASE, F.DESCARGA_ESTIVA_CUSTO, FAX.DOC
FROM CXBH.FAX, CXBH.SYS_USUÁRIO, CXBH.FAX_CHAVE "FCH", CXBH.FECH  "F", CXBH.VIAGEM "V", CXBH.VIAGEM_ESCALA "EVD", CXBH.VIAGEM_ESCALA "EVL", CXBH.FECH_CARGA "FC",   CXBH.PED, CXBH.PED_ITEM "PI"
WHERE FAX.USUÁRIO = SYS_USUÁRIO.USUÁRIO(+) AND FAX.REF = FCH.FAX_REF(+) AND  F.VIAGEM_REF = V.REF(+) AND F.VIAGEM_REF = EVL.VIAGEM_REF(+) AND F.CARGA_PORTO_ESCALA = EVL.ESCALA(+) AND F.VIAGEM_REF = EVD.VIAGEM_REF(+) AND F.DESCARGA_PORTO_ESCALA = EVD.ESCALA(+) AND FCH.CHAVE = F.REF(+) AND FC.PED_REF = PED.REF(+) AND FC.PED_REF = PI.PED_REF(+) AND FC.PED_ITEM = PI.ITEM(+) AND F.REF = FC.FECH_REF(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FAX_CONT_EST_L');
CREATE OR REPLACE VIEW FAX_CONT_EST_L AS
SELECT FAX.REF AS REGISTRO, FAX.REF, FAX.USUÁRIO, FAX.MOMENTO_ENVIA, FAX.PÁGINAS_ADICIONAIS, FAX.DE AS DE, FAX.ASSUNTO, FAX.FAX_CORPO, FAX.COMENTÁRIO, F.REF AS FECH_REF, V.NAVIO, V.REF AS VIAGEM_REF, EVL.PORTO AS CARGA_PORTO, EVL.ETA AS ETA_CARGA, F.FRETE_UNID, F.FRETE_VALOR, F.FRETE_VALOR_POR_UNID, F.COMISSÃO_FRETE, F.COMISSÃO_PERCENT, F.CARGA_AGENTE, F.CARGA_OBS, SYS_USUÁRIO.SUPERVISOR, PED.EXP AS EXP, F.FRETE_PAG_DETALHE, F.CARGA_DETALHE, F.MOEDA, PED.FRETE_COND, PED.FORNECEDOR AS FORNECEDOR, F.COMISSÃO_BASE, F.CARGA_ESTIVA_CUSTO, FAX.DOC
FROM CXBH.FAX, CXBH.SYS_USUÁRIO, CXBH.FAX_CHAVE "FCH", CXBH.FECH "F", CXBH.VIAGEM "V", CXBH.VIAGEM_ESCALA "EVL", CXBH.FECH_CARGA "FC", CXBH.PED
WHERE FAX.USUÁRIO = SYS_USUÁRIO.USUÁRIO(+) AND FAX.REF = FCH.FAX_REF(+) AND F.VIAGEM_REF = V.REF(+) AND F.VIAGEM_REF = EVL.VIAGEM_REF(+) AND F.CARGA_PORTO_ESCALA = EVL.ESCALA(+) AND FCH.CHAVE = F.REF(+) AND FC.PED_REF = PED.REF(+) AND F.REF = FC.FECH_REF(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FAX_FECH');
CREATE OR REPLACE VIEW FAX_FECH AS
SELECT FAX.REF AS REGISTRO, FAX.REF, FAX.USUÁRIO, FAX.MOMENTO_ENVIA, FAX.DE, FAX.ASSUNTO, FAX.FAX_CORPO, FAX.COMENTÁRIO, F.REF AS FECH_REF, V.NAVIO, EVL.PORTO AS CARGA_PORTO, EVL.ETA AS CARGA_ETA, EVD.PORTO AS DESTINO_PORTO, EVD.ETA AS DESCARGA_ETA, F.FRETE_UNID, F.FRETE_VALOR_POR_UNID, F.FRETE_VALOR, F.COMISSÃO_FRETE, F.COMISSÃO_PERCENT, F.FRETE_PAG_DETALHE, F.CARGA_DETALHE, F.DESCARGA_DETALHE, F.OBS, F.MOEDA, F.FRETE_DETALHE, F.COMISSÃO_BASE, PED.FORNECEDOR, F.DETENÇÃO, F.DEMORA, FAX.PÁGINAS_ADICIONAIS, SYS_USUÁRIO.SUPERVISOR, V.REF AS VIAGEM_REF, FAX.DOC
FROM CXBH.FAX, CXBH.SYS_USUÁRIO, CXBH.FAX_CHAVE "CF", CXBH.FECH "F", CXBH.VIAGEM "V", CXBH.VIAGEM_ESCALA "EVL", CXBH.VIAGEM_ESCALA "EVD",  CXBH.FECH_CARGA  "FC", CXBH.PED WHERE FAX.USUÁRIO = SYS_USUÁRIO.USUÁRIO AND CF.CHAVE = F.REF AND F.VIAGEM_REF = V.REF AND F.CARGA_PORTO_ESCALA = EVL.ESCALA AND F.VIAGEM_REF = EVL.VIAGEM_REF AND F.DESCARGA_PORTO_ESCALA = EVD.ESCALA AND F.VIAGEM_REF = EVD.VIAGEM_REF AND FAX.REF = CF.FAX_REF AND FC.PED_REF = PED.REF AND F.REF = FC.FECH_REF

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FAX_FECH_2');
CREATE OR REPLACE VIEW FAX_FECH_2 AS
SELECT FC.FECH_REF, F.REF, FC.PED_REF, FC.PED_ITEM, FC.QTD_PED_UNID, IP.PROD, IP.EMBALAGEM, IP.PED_UNID, IP.PROD_DESCR, IP.P, IP.LOTE, IP.OV, IP.NE_ITEM, IP.TBN, IP.FSE, IP.PO, FC.QTD_FRETE_UNID, F.FRETE_UNID, FS.SUBSTITUTO, IP.USUÁRIO_FINAL, IP.ITEM
FROM FECH_CARGA "FC", PED_ITEM "IP", FECH "F", FECH_SUBSTITUÍDO "FS"
WHERE FS.SUBSTITUTO Is Null AND
FC.PED_REF = IP.PED_REF(+) AND
FC.PED_ITEM = IP.ITEM (+) AND
FC.FECH_REF = F.REF(+) AND
F.REF = FS.SUBSTITUÍDO(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FAX_NOM_EST_AG_D');
CREATE OR REPLACE VIEW FAX_NOM_EST_AG_D AS
SELECT FAX.REF AS REGISTRO, FAX.REF, FAX.USUÁRIO, FAX.MOMENTO_ENVIA, FAX.DE, FAX.ASSUNTO, FAX.FAX_CORPO, FAX.COMENTÁRIO, F.REF AS FECH_REF, V.NAVIO, EVL.PORTO AS CARGA_PORTO, EVL.ETA AS CARGA_ETA, EVD.PORTO AS DESCARGA_PORTO, EVD.ETA AS DESCARGA_ETA, F.FRETE_UNID, F.FRETE_VALOR_POR_UNID, F.FRETE_VALOR, F.COMISSÃO_FRETE, F.COMISSÃO_PERCENT, F.FRETE_PAG_DETALHE, F.DESCARGA_DETALHE, F.MOEDA, F.FRETE_DETALHE, F.COMISSÃO_BASE, FAX.PÁGINAS_ADICIONAIS, SYS_USUÁRIO.SUPERVISOR, V.REF AS VIAGEM_REF, F.DESCARGA_AGENTE, F.DESCARGA_ESTIVA, F.DESCARGA_ESTIVA_CUSTO, F.DESCARGA_OBS, F.CARGA_DETALHE, DOC, F.CARGA_ESTIVA,F.CARGA_OBS FROM CXBH.FAX, CXBH.SYS_USUÁRIO, CXBH.FAX_CHAVE "CF", CXBH.FECH "F", CXBH.VIAGEM "V", CXBH.VIAGEM_ESCALA "EVL", CXBH.VIAGEM_ESCALA "EVD" WHERE FAX.USUÁRIO = SYS_USUÁRIO.USUÁRIO AND CF.CHAVE = F.REF AND F.VIAGEM_REF = V.REF AND F.VIAGEM_REF = EVL.VIAGEM_REF AND F.CARGA_PORTO_ESCALA = EVL.ESCALA AND F.VIAGEM_REF = EVD.VIAGEM_REF AND F.DESCARGA_PORTO_ESCALA = EVD.ESCALA AND FAX.REF = CF.FAX_REF

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FAX_NOM_NAV_CONT');
CREATE OR REPLACE VIEW FAX_NOM_NAV_CONT AS
SELECT FAX.REF AS REGISTRO, FAX.REF, FAX.USUÁRIO, FAX.MOMENTO_ENVIA, FAX.DE, FAX.ASSUNTO, FAX.COMENTÁRIO, F.REF AS FECH_REF, V.NAVIO, EVL.PORTO AS CARGA_PORTO, EVL.ETA AS CARGA_ETA, EVD.PORTO AS DESCARGA_PORTO, EVD.ETA AS DESCARGA_ETA, F.FRETE_UNID, F.FRETE_VALOR_POR_UNID, F.FRETE_VALOR, F.COMISSÃO_FRETE, F.COMISSÃO_PERCENT, F.FRETE_PAG_DETALHE, F.CARGA_DETALHE, F.DESCARGA_DETALHE, F.OBS, F.MOEDA, F.FRETE_DETALHE, F.COMISSÃO_BASE, PED.FORNECEDOR, FAX.PÁGINAS_ADICIONAIS, SYS_USUÁRIO.SUPERVISOR, V.REF AS VIAGEM_REF, F.NEGOCIANTE, F.PROPRIETÁRIO, F.CARGA_AGENTE, F.DESCARGA_AGENTE, N.BANDEIRA, N.ANO_CONSTRUÇÃO, DOC
FROM CXBH.FAX, CXBH.SYS_USUÁRIO, CXBH.FAX_CHAVE "CF", CXBH.FECH "F", CXBH.VIAGEM "V", CXBH.NAVIO "N",  CXBH.VIAGEM_ESCALA "EVL", CXBH.VIAGEM_ESCALA "EVD", CXBH.FECH_CARGA "FC", CXBH.PED WHERE FAX.USUÁRIO = SYS_USUÁRIO.USUÁRIO(+) AND V.NAVIO = N.COD(+) AND F.VIAGEM_REF = V.REF(+) AND F.CARGA_PORTO_ESCALA = EVL.ESCALA(+) AND F.VIAGEM_REF = EVL.VIAGEM_REF(+) AND F.DESCARGA_PORTO_ESCALA = EVD.ESCALA(+) AND F.VIAGEM_REF = EVD.VIAGEM_REF(+) AND CF.CHAVE = F.REF(+) AND FAX.REF = CF.FAX_REF(+) AND FC.PED_REF = PED.REF(+)  AND F.REF = FC.FECH_REF(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FAX_NOM_NAV_CSN');
CREATE OR REPLACE VIEW FAX_NOM_NAV_CSN AS
SELECT FAX.REF AS REGISTRO, FAX.REF, V.NAVIO, F.REF AS FECH_REF, FAX.USUÁRIO, FAX.MOMENTO_ENVIA, FAX.DE, FAX.ASSUNTO, FAX.FAX_CORPO, FAX.COMENTÁRIO, EVL.PORTO AS CARGA_PORTO, EVL.ETA AS CARGA_ETA, EVD.PORTO AS DESCARGA_PORTO, F.FRETE_UNID, F.FRETE_VALOR_POR_UNID, F.FRETE_VALOR, F.COMISSÃO_FRETE, F.COMISSÃO_PERCENT, F.FRETE_PAG_DETALHE, F.CARGA_DETALHE, F.DESCARGA_DETALHE, F.OBS, F.MOEDA, F.FRETE_DETALHE, F.COMISSÃO_BASE, F.PROPRIETÁRIO, F.CARGA_AGENTE, N.BANDEIRA, N.ANO_CONSTRUÇÃO, GUINDASTE_NUM, ESCOTILHA_NUM, CALADO_VERÃO, N.LOA, N.BEAN, N.DWAT, N.GUINDASTE_DIMENSÃO, N.ESCOTILHA_DIMENSÃO, N.TANKTOP_STRENGTH, N.EQUIPAMENTO, F.CARGA_ESTIVA, F.DETENÇÃO, F.DEMORA, N.NAVIO_TIPO, F.NEGOCIANTE, FAX.PÁGINAS_ADICIONAIS, U.SUPERVISOR, V.REF AS VIAGEM_REF, FAX.DOC, N.ESCOTILHA_FECHAM_TIPO
FROM CXBH.FAX, CXBH.SYS_USUÁRIO "U", CXBH.FAX_CHAVE "CF", CXBH.FECH "F", CXBH.VIAGEM "V", CXBH.VIAGEM_ESCALA "EVL", CXBH.VIAGEM_ESCALA "EVD", CXBH.NAVIO "N" WHERE FAX.USUÁRIO = U.USUÁRIO(+) AND CF.CHAVE = F.REF (+) AND F.VIAGEM_REF = V.REF(+) AND F.VIAGEM_REF = EVL.VIAGEM_REF(+) AND F.CARGA_PORTO_ESCALA = EVL.ESCALA(+) AND F.VIAGEM_REF = EVD.VIAGEM_REF(+) AND F.DESCARGA_PORTO_ESCALA = EVD.ESCALA(+) AND V.NAVIO = N.COD(+) AND FAX.REF = CF.FAX_REF(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FAX_NOM_NAV_CSN_FC');
CREATE OR REPLACE VIEW FAX_NOM_NAV_CSN_FC AS
SELECT FAX.REF AS REGISTRO, FAX.REF, V.NAVIO, F.REF AS FECH_REF, FAX.USUÁRIO, FAX.MOMENTO_ENVIA, FAX.DE, FAX.ASSUNTO, FAX.FAX_CORPO, FAX.COMENTÁRIO, EVL.PORTO AS CARGA_PORTO, EVL.ETA AS CARGA_ETA, EVD.PORTO AS DESCARGA_PORTO, F.FRETE_UNID, F.FRETE_VALOR_POR_UNID, F.FRETE_VALOR, F.COMISSÃO_FRETE, F.COMISSÃO_PERCENT, F.FRETE_PAG_DETALHE, F.CARGA_DETALHE, F.DESCARGA_DETALHE, F.OBS, F.MOEDA, F.FRETE_DETALHE, F.COMISSÃO_BASE, F.PROPRIETÁRIO, F.CARGA_AGENTE, N.BANDEIRA, N.ANO_CONSTRUÇÃO, GUINDASTE_NUM, ESCOTILHA_NUM, CALADO_VERÃO, N.LOA, N.BEAN, N.DWAT, N.GUINDASTE_DIMENSÃO, N.ESCOTILHA_DIMENSÃO, N.TANKTOP_STRENGTH, N.EQUIPAMENTO, F.CARGA_ESTIVA, F.DETENÇÃO, F.DEMORA, N.NAVIO_TIPO, F.NEGOCIANTE, FAX.PÁGINAS_ADICIONAIS, U.SUPERVISOR, V.REF AS VIAGEM_REF, FAX.DOC, CF.CHAVE, F.CARGA_PORTO_ESCALA, F.DESCARGA_PORTO_ESCALA
FROM CXBH.FAX, CXBH.SYS_USUÁRIO "U", CXBH.FAX_CHAVE "CF", CXBH.FECH "F", CXBH.VIAGEM "V", CXBH.VIAGEM_ESCALA "EVL", CXBH.VIAGEM_ESCALA "EVD", CXBH.NAVIO "N" WHERE FAX.USUÁRIO = U.USUÁRIO(+) AND CF.CHAVE = F.REF(+) AND F.VIAGEM_REF = V.REF(+) AND F.VIAGEM_REF = EVL.VIAGEM_REF(+) AND F.CARGA_PORTO_ESCALA = EVL.ESCALA(+) AND F.VIAGEM_REF = EVD.VIAGEM_REF(+) AND F.DESCARGA_PORTO_ESCALA  = EVD.ESCALA(+) AND V.NAVIO = N.COD(+) AND FAX.REF = CF.FAX_REF(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FAX_NOM_NAV_FOR');
CREATE OR REPLACE VIEW FAX_NOM_NAV_FOR AS
SELECT FAX.REF AS REGISTRO, FAX.REF, V.NAVIO, F.REF AS FECH_REF, FAX.USUÁRIO, FAX.MOMENTO_ENVIA, FAX.DE, FAX.ASSUNTO, FAX.FAX_CORPO, FAX.COMENTÁRIO, EVL.PORTO AS CARGA_PORTO, EVL.ETA AS CARGA_ETA, EVD.PORTO AS DESCARGA_PORTO, F.FRETE_UNID, F.FRETE_VALOR_POR_UNID, F.FRETE_VALOR, F.COMISSÃO_FRETE, F.COMISSÃO_PERCENT, F.FRETE_PAG_DETALHE, F.CARGA_DETALHE, F.DESCARGA_DETALHE, F.OBS, F.MOEDA, F.FRETE_DETALHE, F.COMISSÃO_BASE, F.PROPRIETÁRIO, F.CARGA_AGENTE, N.BANDEIRA, N.ANO_CONSTRUÇÃO, GUINDASTE_NUM, ESCOTILHA_NUM, CALADO_VERÃO AS DRAFT, N.LOA, N.BEAN, N.DWAT, N.GUINDASTE_DIMENSÃO, N.ESCOTILHA_DIMENSÃO, N.TANKTOP_STRENGTH, N.EQUIPAMENTO, F.CARGA_ESTIVA, F.DETENÇÃO, F.DEMORA, N.NAVIO_TIPO, F.NEGOCIANTE, FAX.PÁGINAS_ADICIONAIS, U.SUPERVISOR, V.REF AS VIAGEM_REF, FAX.DOC, N.ESCOTILHA_FECHAM_TIPO
FROM CXBH.FAX, CXBH.SYS_USUÁRIO "U", CXBH.FAX_CHAVE "CF", CXBH.FECH "F", CXBH.VIAGEM "V", CXBH.VIAGEM_ESCALA "EVL", CXBH.VIAGEM_ESCALA "EVD", CXBH.NAVIO "N" WHERE FAX.USUÁRIO = U.USUÁRIO (+) AND CF.CHAVE = F.REF(+) AND F.VIAGEM_REF = V.REF(+) AND F.VIAGEM_REF = EVL.VIAGEM_REF(+) AND F.CARGA_PORTO_ESCALA = EVL.ESCALA(+) AND F.VIAGEM_REF = EVD.VIAGEM_REF(+) AND F.DESCARGA_PORTO_ESCALA = EVD.ESCALA(+) AND V.NAVIO = N.COD(+) AND
FAX.REF = CF.FAX_REF(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FAX_NOM_NAV_FOR_FC');
CREATE OR REPLACE VIEW FAX_NOM_NAV_FOR_FC AS
SELECT FAX.REF AS REGISTRO, FAX.REF, V.NAVIO, F.REF AS FECH_REF, FAX.USUÁRIO, FAX.MOMENTO_ENVIA, FAX.DE, FAX.ASSUNTO, FAX.FAX_CORPO, FAX.COMENTÁRIO, EVL.PORTO AS CARGA_PORTO, EVL.ETA AS CARGA_ETA, EVD.PORTO AS DESCARGA_PORTO, F.FRETE_UNID, F.FRETE_VALOR_POR_UNID, F.FRETE_VALOR, F.COMISSÃO_FRETE, F.COMISSÃO_PERCENT, F.FRETE_PAG_DETALHE, F.CARGA_DETALHE, F.DESCARGA_DETALHE, F.OBS, F.MOEDA, F.FRETE_DETALHE, F.COMISSÃO_BASE, F.PROPRIETÁRIO, F.CARGA_AGENTE, N.BANDEIRA, N.ANO_CONSTRUÇÃO, GUINDASTE_NUM, ESCOTILHA_NUM, CALADO_VERÃO, N.LOA, N.BEAN, N.DWAT, N.GUINDASTE_DIMENSÃO, N.ESCOTILHA_DIMENSÃO, N.TANKTOP_STRENGTH, N.EQUIPAMENTO, F.CARGA_ESTIVA, F.DETENÇÃO, F.DEMORA, N.NAVIO_TIPO, F.NEGOCIANTE, FAX.PÁGINAS_ADICIONAIS, U.SUPERVISOR, V.REF AS VIAGEM_REF, FAX.DOC
FROM CXBH.FAX, CXBH.SYS_USUÁRIO "U", CXBH.FAX_CHAVE "CF", CXBH.FECH "F", CXBH.VIAGEM "V", CXBH.VIAGEM_ESCALA "EVL", CXBH.VIAGEM_ESCALA "EVD", CXBH.NAVIO "N" WHERE FAX.USUÁRIO = U.USUÁRIO(+) AND CF.CHAVE = F.REF (+) AND F.VIAGEM_REF = V.REF(+) AND F.VIAGEM_REF = EVL.VIAGEM_REF(+) AND F.CARGA_PORTO_ESCALA = EVL.ESCALA(+) AND F.VIAGEM_REF = EVD.VIAGEM_REF(+) AND F.DESCARGA_PORTO_ESCALA = EVD.ESCALA(+) AND V.NAVIO = N.COD(+) AND FAX.REF = CF.FAX_REF(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FAX_NOM_TER_EST');
CREATE OR REPLACE VIEW FAX_NOM_TER_EST AS
SELECT FAX.REF AS REGISTRO, FAX.REF, V.NAVIO, F.REF AS FECH_REF, FAX.USUÁRIO, FAX.MOMENTO_ENVIA, FAX.DE, FAX.ASSUNTO, FAX.FAX_CORPO, FAX.COMENTÁRIO, EVL.PORTO AS CARGA_PORTO, EVL.ETA AS CARGA_ETA, EVD.PORTO AS DESCARGA_PORTO, F.FRETE_UNID, F.FRETE_VALOR_POR_UNID, F.FRETE_VALOR, F.COMISSÃO_FRETE, F.COMISSÃO_PERCENT, F.FRETE_PAG_DETALHE, F.CARGA_DETALHE, F.DESCARGA_DETALHE, F.OBS, F.MOEDA, F.FRETE_DETALHE, F.COMISSÃO_BASE, F.PROPRIETÁRIO, F.CARGA_AGENTE, N.BANDEIRA, N.ANO_CONSTRUÇÃO, GUINDASTE_NUM, ESCOTILHA_NUM, CALADO_VERÃO, N.LOA, N.BEAN, N.DWAT, N.GUINDASTE_DIMENSÃO, N.ESCOTILHA_DIMENSÃO, N.TANKTOP_STRENGTH, N.EQUIPAMENTO, F.CARGA_ESTIVA, F.DETENÇÃO, F.DEMORA, N.NAVIO_TIPO, F.NEGOCIANTE, FAX.PÁGINAS_ADICIONAIS, U.SUPERVISOR, V.REF AS VIAGEM_REF, FAX.DOC, N.ESCOTILHA_FECHAM_TIPO
FROM CXBH.FAX, CXBH.SYS_USUÁRIO "U", CXBH.FAX_CHAVE "CF", CXBH.FECH "F", CXBH.VIAGEM "V", CXBH.VIAGEM_ESCALA "EVL", CXBH.VIAGEM_ESCALA "EVD", CXBH.NAVIO "N"
WHERE FAX.USUÁRIO = U.USUÁRIO(+) AND CF.CHAVE = F.REF(+) AND F.VIAGEM_REF = V.REF(+) AND F.CARGA_PORTO_ESCALA = EVL.ESCALA(+) AND F.VIAGEM_REF = EVL.VIAGEM_REF(+) AND F.DESCARGA_PORTO_ESCALA = EVD.ESCALA(+) AND F.VIAGEM_REF = EVD.VIAGEM_REF(+) AND V.NAVIO = N.COD(+) AND FAX.REF = CF.FAX_REF(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FAX_SOL_POS_CAR_EMB');
CREATE OR REPLACE VIEW FAX_SOL_POS_CAR_EMB AS
SELECT FAX.REF AS REGISTRO, FAX.REF, FAX.USUÁRIO, FAX.MOMENTO_ENVIA, FAX.DE, FAX.ASSUNTO, FAX.FAX_CORPO, FAX.COMENTÁRIO, FAX.PÁGINAS_ADICIONAIS, U.SUPERVISOR, FAX.REF AS FECH_REF, V.NAVIO, EMB.Porto, FAX.DOC
FROM CXBH.FAX, CXBH.SYS_USUÁRIO "U", CXBH.FAX_CHAVE "CF", CXBH.FECH "F", CXBH.VIAGEM "V", CXBH.VIAGEM_ESCALA "EMB"
WHERE FAX.USUÁRIO = U.USUÁRIO(+) AND CF.CHAVE = F.REF(+) AND F.VIAGEM_REF = V.REF(+) AND F.CARGA_PORTO_ESCALA = EMB.ESCALA(+) AND F.VIAGEM_REF = EMB.VIAGEM_REF(+) AND FAX.REF = CF.FAX_REF(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FECHAM_CAMBIO');
CREATE OR REPLACE VIEW FECHAM_CAMBIO AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB.EMB_DATA,
EMB.DATA_EMISSÃO_DOC,
EMB.EXP,
EMB.EXP_ENDEREÇO,
EMB.EXP_PAÍS,
EMB.IMP,
EMB.IMP_ENDEREÇO,
EMB.IMP_PAÍS,
EMB.PAGADOR,
EMB.PAG_ENDEREÇO,
EMB.PAG_PAÍS,
EMB.CONSIGNATÁRIO,
EMB.CONSIGN_ENDEREÇO,
EMB.CONSIGN_PAÍS,
EMB.NOTIFICAR,
EMB.NOTIFICAR_ENDEREÇO,
EMB.NOTIFICAR_PAÍS,
EMB.TRANSPORTADOR,
EMB.CARGA_PORTO,
EMB.DESCARGA_PORTO,
EMB.MARCAÇÃO,
EMB_ITEM.DESCR,
EMB.IDIOMA,
CIA.LOGOTIPO,
EMB_ITEM.EMBALAGEM,
PED_ITEM.PED_UNID,
EMB_DOC.PARAM,
SUBSTR(FATURA_EXP,1) AS Fat,
EMB.MOEDA,
CIA_NEG.NOME AS NEGOCIADOR,
CIA_NEG.ENDEREÇO AS NEGOCIADOR_ENDEREÇO,
EMB.EXP_COND_PAG,
EMB.NUM_BL_DESCR
FROM EMB_DOC, EMB, EMB_ITEM, EMB_PARAM, CIA, PED_ITEM,
(
     SELECT
     COD,
     NOME,
     ENDEREÇO
     FROM CIA
)CIA_NEG
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB.REF = EMB_PARAM.REF(+) AND
EMB.EXP_LOGOTIPO = CIA.COD(+) AND
EMB.NEGOCIADOR = CIA_NEG.COD(+) AND
EMB_ITEM.PED_ITEM = PED_ITEM.ITEM(+) AND
EMB_ITEM.PED_REF = PED_ITEM.PED_REF(+) AND
EMB.REF = EMB_ITEM.EMB_REF(+) AND
EMB_DOC.DOC='FECHAMENTO DE CÂMBIO'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FECH_CAMBIO_SUB');
CREATE OR REPLACE VIEW FECH_CAMBIO_SUB AS
SELECT
EMB.REF,
EMB_LANÇ.SEQ,
EMB_LANÇ.EXP_CALC,
CIA.NOME AS BENEFICIÁRIO,
EMB_LANÇ.COMISSÃO_MODALIDADE,
EMB_LANÇ.INSTRUÇÃO_REMESSA,
EMB_LANÇ.VALOR,
EMB_LANÇ.VALOR_POR_MT,
EMB_LANÇ.TOTAL_PERCENT,
EMB_LANÇ.TOTAL_TIPO,
EMB.MOEDA,
EMB.IDIOMA
FROM EMB, EMB_LANÇ, CIA
WHERE
EMB_LANÇ.BENEFICIÁRIO = CIA.COD(+) AND
EMB.REF = EMB_LANÇ.EMB_REF(+) AND
EMB_LANÇ.LANÇ='COMISSÃO' AND
EMB_LANÇ.EXP = -1

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FECH_CARGA_OK');
CREATE OR REPLACE VIEW FECH_CARGA_OK AS
SELECT "FECH_REF","PED_REF","PED_ITEM","QTD_PED_UNID","QTD_FRETE_UNID","QTD_TOTAL","NOMEAÇÃO_DATA","ACEITAÇÃO_FORNECEDOR_DATA","CANCEL_DATA","CANCEL_MOTIVO","SYS_MOMENTO_CRIA","SYS_USUÁRIO_CRIA","SYS_LOCAL_CRIA","SYS_MOMENTO_ATUALIZA","SYS_USUÁRIO_ATUALIZA","SYS_LOCAL_ATUALIZA","SYS_STATUS" FROM FECH_CARGA
WHERE NOT EXISTS (SELECT * FROM FECH_SUBSTITUÍDO
WHERE FECH_CARGA.FECH_REF = FECH_SUBSTITUÍDO.SUBSTITUÍDO)
AND FECH_CARGA.CANCEL_DATA IS NULL

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FECH_DET');
CREATE OR REPLACE VIEW FECH_DET AS
SELECT F.REF AS Registro, F.FECH_DATA, F.REF, F.CONTRATANTE, F.MOEDA, F.PROPRIETÁRIO, F.NEGOCIANTE, F.CORRETOR, F.FRETE_DETALHE, F.CARGA_DETALHE, F.DESCARGA_DETALHE, F.FRETE_UNID, F.FRETE_VALOR_POR_UNID, F.FRETE_VALOR, F.FRETE_PAG_DETALHE, F.COMISSÃO_FRETE, F.COMISSÃO_PERCENT, F.COMISSÃO_BASE, F.CIA_PAGADORA, F.CARGA_ESTIVA, F.CARGA_ESTIVA_CUSTO, F.CARGA_AGENTE, F.CARGA_OBS, F.DESCARGA_ESTIVA, F.DESCARGA_ESTIVA_CUSTO, F.DESCARGA_AGENTE, F.DESCARGA_OBS, F.DETENÇÃO, F.DEMORA, F.VIAGEM_REF, EVL.PORTO AS CARGA_PORTO, EVD.PORTO AS DESCARGA_PORTO, F.OBS, V.NAVIO, V.NAVIO_ÚLTIMO, EVL.ETA AS ETA_L, EVD.ETA AS ETA_D FROM CXBH.FECH "F", CXBH.VIAGEM "V", CXBH.VIAGEM_ESCALA "EVL", CXBH.VIAGEM_ESCALA "EVD" WHERE F.VIAGEM_REF = V.REF(+) AND F.CARGA_PORTO_ESCALA = EVL.ESCALA(+) AND F.VIAGEM_REF = EVL.VIAGEM_REF(+) AND F.VIAGEM_REF = EVD.VIAGEM_REF(+) AND F.DESCARGA_PORTO_ESCALA = EVD.ESCALA(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FECH_DET_1');
CREATE OR REPLACE VIEW FECH_DET_1 AS
SELECT FC.FECH_REF, FC.NOMEAÇÃO_DATA, FC.PED_REF, FC.PED_ITEM, FC.QTD_PED_UNID, FC.QTD_FRETE_UNID, FC.QTD_TOTAL, FC.ACEITAÇÃO_FORNECEDOR_DATA, PI.USUÁRIO_FINAL FROM CXBH.FECH_CARGA "FC", CXBH.PED_ITEM "PI" WHERE FC.PED_ITEM = PI.ITEM(+) AND FC.PED_REF = PI.PED_REF(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FECH_DET_4');
CREATE OR REPLACE VIEW FECH_DET_4 AS
SELECT BC.FECH_REF, BC.PED_REF, BC.PED_ITEM, BC.VIAGEM_REF, BC.BL_SEQ, BC.EMB_DATA, BC.QTD_PED_UNID, BC.QTD_FRETE_UNID, BC.QTD_VOL, BC.PESO_LÍQUIDO, BC.PESO_BRUTO, BC.EMB_REF, EF.FAMÍLIA FROM CXBH.BL_CARGA "BC", CXBH.EMB_FAMÍLIA "EF" WHERE BC.FAMÍLIA = EF.SEQ(+) AND BC.EMB_REF = EF.EMB_REF(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FECH_DET_6');
CREATE OR REPLACE VIEW FECH_DET_6 AS
SELECT F.REF, FS.SUBSTITUTO, FS.SUBSTITUÍDO FROM CXBH.FECH "F", CXBH.FECH_SUBSTITUÍDO "FS" WHERE F.REF = FS.SUBSTITUÍDO(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FECH_DET_7');
CREATE OR REPLACE VIEW FECH_DET_7 AS
SELECT FC.FECH_REF, FC.QTD_PED_UNID AS PED_FC, FC.QTD_FRETE_UNID AS FRETE_FC, BC.QTD_PED_UNID AS PED_BC, BC.QTD_FRETE_UNID AS FRETE_BC FROM CXBH.FECH_CARGA "FC", CXBH.BL_CARGA "BC" WHERE FC.PED_ITEM = BC.PED_ITEM(+) AND FC.PED_REF = BC.PED_REF(+) AND FC.FECH_REF = BC.FECH_REF(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FECH_NCANCEL');
CREATE OR REPLACE VIEW FECH_NCANCEL AS
SELECT
FECH_CARGA.FECH_REF,
FECH_CARGA.PED_REF,
FECH_CARGA.PED_ITEM,
FECH_CARGA.QTD_PED_UNID,
FECH_CARGA.QTD_FRETE_UNID,
FECH_CARGA.QTD_TOTAL,
FECH_CARGA.NOMEAÇÃO_DATA,
FECH_CARGA.ACEITAÇÃO_FORNECEDOR_DATA,
FECH_CARGA.CANCEL_DATA,
FECH_CARGA.CANCEL_MOTIVO,
FECH_CARGA.SYS_MOMENTO_CRIA,
FECH_CARGA.SYS_USUÁRIO_CRIA,
FECH_CARGA.SYS_LOCAL_CRIA,
FECH_CARGA.SYS_MOMENTO_ATUALIZA,
FECH_CARGA.SYS_USUÁRIO_ATUALIZA,
FECH_CARGA.SYS_LOCAL_ATUALIZA,
FECH_CARGA.SYS_STATUS,
FECH_SUBSTITUÍDO.SUBSTITUTO
FROM FECH_CARGA, FECH_SUBSTITUÍDO
WHERE FECH_CARGA.FECH_REF = FECH_SUBSTITUÍDO.SUBSTITUÍDO(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FIRJAN_EXP');
CREATE OR REPLACE VIEW FIRJAN_EXP AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB.EXP,
EMB.EXP_ENDEREÇO,
EMB.EXP_PAÍS,
EMB.IMP,
EMB.IMP_ENDEREÇO,
EMB.IMP_PAÍS,
EMB.CONSIGNATÁRIO,
EMB.CONSIGN_ENDEREÇO,
EMB.CONSIGN_PAÍS,
EMB.CARGA_PORTO,
EMB.DESCARGA_PORTO,
EMB.TRANSPORTADOR,
EMB.DATA_EMISSÃO_DOC,
EMB.IDIOMA,
EMB_DOC.PARAM,
SUBSTR(FATURA_EXP,1) AS Fatura,
Emb_Tot_Exp.TOTAL_GERAL,
EMB.MOEDA
FROM EMB_DOC, EMB, EMB_PARAM,
(
     SELECT
     EMB_REF,
     SUM(TOTAL_GERAL) TOTAL_GERAL
     FROM
     (SELECT EMB_REF,
     DECODE(LANÇ,'TOTAL GERAL',EXP_CALC,0) TOTAL_GERAL
     FROM EMB_TOTALIZA)
     GROUP BY EMB_REF
) EMB_TOT_EXP
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB.REF = EMB_PARAM.REF(+) AND
EMB.REF = EMB_TOT_EXP.EMB_REF(+) AND
EMB_DOC.DOC='FIRJAN EXP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FIRJAN_EXP_SUB');
CREATE OR REPLACE VIEW FIRJAN_EXP_SUB AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB.TOTALIZAÇÃO_EMBALAGEM,
ITEM.SEQ AS SEQ_ITEM,
ITEM.DESCR,
ITEM.QTD_VOL,
ITEM.PESO_LÍQUIDO,
ITEM.PESO_BRUTO,
EMB_FAMÍLIA_GENÉRICA.FAMÍLIA AS FAMÍLIA_GENÉRICA,
EMB.PESO_UNID,
EMB.IDIOMA,
ITEM.EMBALAGEM,
EMB.TIPO_DESCR_MERCADORIA,
EMB.MOEDA,
EMB_DOC.PARAM,
ITEM.NCM
FROM EMB_DOC, EMB, BL_CARGA, EMB_FAMÍLIA_GENÉRICA,
(
     SELECT
     EMB_REF,
     SEQ,
     DESCR,
     SUM(QTD_VOL) QTD_VOL,
     SUM(PESO_LÍQUIDO) PESO_LÍQUIDO,
     SUM(PESO_BRUTO) PESO_BRUTO,
     BL_SEQ,
     VIAGEM_REF,
     PED_REF,
     PED_ITEM,
     SUBSTR(NCM,1) AS NCM,
     EMBALAGEM
     FROM
     EMB_ITEM
     GROUP BY
     EMB_REF,
     SEQ,
     DESCR,
     NCM,
     BL_SEQ,
     VIAGEM_REF,
     PED_REF,
     PED_ITEM,
     EMBALAGEM
) ITEM
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
ITEM.BL_SEQ = BL_CARGA.BL_SEQ(+) AND
ITEM.VIAGEM_REF = BL_CARGA.VIAGEM_REF(+) AND
ITEM.PED_ITEM = BL_CARGA.PED_ITEM(+) AND
ITEM.PED_REF = BL_CARGA.PED_REF(+) AND
BL_CARGA.FAMÍLIA_GENÉRICA = EMB_FAMÍLIA_GENÉRICA.SEQ(+) AND
BL_CARGA.EMB_REF = EMB_FAMÍLIA_GENÉRICA.EMB_REF(+) AND
EMB.REF = ITEM.EMB_REF(+) AND
EMB_DOC.DOC='FIRJAN EXP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FIRJAN_IMP');
CREATE OR REPLACE VIEW FIRJAN_IMP AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB.PAGADOR,
EMB.PAG_ENDEREÇO,
EMB.PAG_PAÍS,
EMB.IMP,
EMB.IMP_ENDEREÇO,
EMB.IMP_PAÍS,
EMB.CONSIGNATÁRIO,
EMB.CONSIGN_ENDEREÇO,
EMB.CONSIGN_PAÍS,
EMB.CARGA_PORTO,
EMB.DESCARGA_PORTO,
EMB.TRANSPORTADOR,
EMB.DATA_EMISSÃO_DOC,
EMB.IDIOMA,
EMB_DOC.PARAM,
SUBSTR(FATURA_IMP,1) AS Fatura,
Emb_Tot_Imp.TOTAL_GERAL,
EMB.MOEDA
FROM EMB_DOC, EMB, EMB_PARAM,
(
     SELECT
     EMB_REF,
     SUM(TOTAL_GERAL) TOTAL_GERAL
     FROM
     (SELECT EMB_REF,
     DECODE(LANÇ,'TOTAL GERAL',IMP_CALC,0) TOTAL_GERAL
     FROM EMB_TOTALIZA)
     GROUP BY EMB_REF
) EMB_TOT_IMP
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB.REF = EMB_PARAM.REF(+) AND
EMB.REF = EMB_TOT_IMP.EMB_REF(+) AND
EMB_DOC.DOC='FIRJAN IMP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view FIRJAN_IMP_SUB');
CREATE OR REPLACE VIEW FIRJAN_IMP_SUB AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB.TOTALIZAÇÃO_EMBALAGEM,
ITEM.SEQ AS SEQ_ITEM,
ITEM.DESCR,
ITEM.QTD_VOL,
ITEM.PESO_LÍQUIDO,
ITEM.PESO_BRUTO,
EMB_FAMÍLIA_GENÉRICA.FAMÍLIA AS FAMÍLIA_GENÉRICA,
EMB.PESO_UNID,
EMB.IDIOMA,
ITEM.EMBALAGEM,
EMB.TIPO_DESCR_MERCADORIA,
EMB.MOEDA,
EMB_DOC.PARAM,
ITEM.NCM
FROM EMB_DOC, EMB, BL_CARGA, EMB_FAMÍLIA_GENÉRICA,
(
     SELECT
     EMB_REF,
     SEQ,
     DESCR,
     SUM(QTD_VOL) QTD_VOL,
     SUM(PESO_LÍQUIDO) PESO_LÍQUIDO,
     SUM(PESO_BRUTO) PESO_BRUTO,
     BL_SEQ,
     VIAGEM_REF,
     PED_REF,
     PED_ITEM,
     SUBSTR(NCM,1) AS NCM,
     EMBALAGEM
     FROM
     EMB_ITEM
     GROUP BY
     EMB_REF,
     SEQ,
     DESCR,
     NCM,
     BL_SEQ,
     VIAGEM_REF,
     PED_REF,
     PED_ITEM,
     EMBALAGEM
) ITEM
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB.REF = ITEM.EMB_REF(+) AND
ITEM.BL_SEQ = BL_CARGA.BL_SEQ(+) AND
ITEM.VIAGEM_REF = BL_CARGA.VIAGEM_REF(+) AND
ITEM.PED_ITEM = BL_CARGA.PED_ITEM(+) AND
ITEM.PED_REF = BL_CARGA.PED_REF(+) AND
BL_CARGA.FAMÍLIA_GENÉRICA = EMB_FAMÍLIA_GENÉRICA.SEQ(+) AND
BL_CARGA.EMB_REF = EMB_FAMÍLIA_GENÉRICA.EMB_REF(+) AND
EMB_DOC.DOC='FIRJAN IMP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view INSTRUÇÃO_DE_EMBARQUE');
CREATE OR REPLACE VIEW INSTRUÇÃO_DE_EMBARQUE AS
SELECT TAB.REF, TAB.OV, TAB.USUÁRIO_FINAL, TAB.PROD, TAB.DESCARGA_PORTO, TAB.NOMINAL, TAB.FECHADO,
   NV.NAVIO, TAB.IMP_COND_VENDA, TAB.EXP_COND_VENDA, LD.LAYDAY_INÍCIO, LD.LAYDAY_FINAL
FROM
   (SELECT P.REF, PI.OV, PI.USUÁRIO_FINAL, PI.PROD, PI.DESCARGA_PORTO, P.IMP_COND_VENDA, P.EXP_COND_VENDA,
    SUM(PI.NOMINAL_PED_UNID) NOMINAL, SUM(FP.QTD_PED_UNID) FECHADO
    FROM PED P, PED_ITEM_OK PI,
      (SELECT FC.PED_REF, FC.PED_ITEM, SUM(FC.QTD_PED_UNID) QTD_PED_UNID       --> total fechado
       FROM FECH_CARGA_OK FC
       GROUP BY FC.PED_REF, FC.PED_ITEM) FP
    WHERE P.REF = PI.PED_REF(+) AND
       PI.PED_REF = FP.PED_REF(+) AND
       PI.ITEM = FP.PED_ITEM(+)          -->>>>>CONDIÇÕES
    GROUP BY P.REF, PI.OV, PI.USUÁRIO_FINAL, PI.PROD, PI.DESCARGA_PORTO, P.IMP_COND_VENDA, P.EXP_COND_VENDA) TAB,
   (SELECT FC2.PED_REF, NVL(V.NAVIO_ÚLTIMO,V.NAVIO) NAVIO   --> último navio
    FROM FECH_CARGA_OK FC2, FECH F, VIAGEM V,
      (SELECT FC3.PED_REF,
       MAX(NVL(TO_CHAR(FC3.NOMEAÇÃO_DATA,'YYYYMMDD'),'00000000') || FC3.FECH_REF || FC3.PED_REF || TO_CHAR(FC3.PED_ITEM,'000')) ND
       FROM FECH_CARGA_OK FC3, PED_ITEM PI
       WHERE FC3.PED_REF = PI.PED_REF(+) AND
          FC3.PED_ITEM = PI.ITEM(+)              -->>>>>CONDIÇÕES
       GROUP BY FC3.PED_REF) MAX_DATA_NAVIO
    WHERE
    FC2.FECH_REF = F.REF(+) AND
    F.VIAGEM_REF = V.REF(+) AND
    NVL(TO_CHAR(FC2.NOMEAÇÃO_DATA,'YYYYMMDD'),'00000000') || FC2.FECH_REF || FC2.PED_REF || TO_CHAR(FC2.PED_ITEM,'000')= MAX_DATA_NAVIO.ND) NV,
   (SELECT PI3.PED_REF, PI3.LAYDAY_INÍCIO, PI3.LAYDAY_FINAL  --> layday do maior item
    FROM PED_ITEM PI3,
       (SELECT PI4.PED_REF, MAX(PI4.ITEM) MAX_ITEM
     FROM PED_ITEM PI4
     GROUP BY PI4.PED_REF) PIM
    WHERE PI3.PED_REF = PIM.PED_REF AND PI3.ITEM = PIM.MAX_ITEM) LD     -->>>>>CONDIÇÕES
WHERE
   TAB.REF = NV.PED_REF(+) AND
   TAB.REF = LD.PED_REF(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view INSTRUÇÃO_PAG_1');
CREATE OR REPLACE VIEW INSTRUÇÃO_PAG_1 AS
SELECT DISTINCT I.REF, IPF.FECH_REF, IP.PED_REF, IP.ITEM, IP.P, IP.LOTE, IP.OV, IP.NE_ITEM, IP.TBN, IP.FSE, IP.PO
FROM INSTRUÇÃO_PAG "I", INSTRUÇÃO_PAG_FECH "IPF", FECH_CARGA "F",  PED_ITEM "IP"
WHERE IPF.FECH_REF = F.FECH_REF(+) AND F.PED_ITEM = IP.ITEM(+) AND F.PED_REF = IP.PED_REF(+)
AND I.REF = IPF.INSTRUÇÃO_PAG_REF(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view INS_EMB');
CREATE OR REPLACE VIEW INS_EMB AS
SELECT P.EMB_PREV, P.REF, IP.USUÁRIO_FINAL, IP.OV, IP.PO, IP.PROD, IP.DESCARGA_PORTO, IP.NOMINAL_PED_UNID AS NOMINAL, IF.QTD_PED_UNID AS FECHADO, IP.LAYDAY_INÍCIO AS INÍCIO, IP.LAYDAY_FINAL AS FIM, IEN.NAVIO, P.EXP_COND_VENDA AS COMPRA, P.IMP_COND_VENDA AS VENDA, IF.QTD_PED_UNID, IP.NOMINAL_PED_UNID, IP.LAYDAY_INÍCIO, IP.LAYDAY_FINAL, P.EXP_COND_VENDA, P.IMP_COND_VENDA, IP.PED_REF, P.PED_DATA, P.PAÍS_DESTINO, IP.P, IP.LOTE, IP.NE_ITEM, DECODE(TOTAL_FECH,0,0,1) AS TF FROM CXBH.PED_ITEM "IP",  CXBH.PED "P", CXBH.ITEM_FECHADO "IF", CXBH.Ins_Emb_Nav "IEN" WHERE IP.PED_REF = P.REF(+) AND IP.PED_REF = IF.PED_REF(+) AND IP.ITEM = IF.PED_ITEM(+) AND IP.PED_REF = IEN.PED_REF(+) AND IP.ITEM = IEN.ITEM(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view INS_EMB_NAV');
CREATE OR REPLACE VIEW INS_EMB_NAV AS
SELECT PED_ITEM.PED_REF, PED_ITEM.ITEM,VIAGEM.NAVIO AS NAVIO, VIAGEM.NAVIO_ÚLTIMO AS NAVIO_ÚLTIMO
FROM
PED_ITEM, FECH_CARGA, FECH,VIAGEM
WHERE
PED_ITEM.ITEM = FECH_CARGA.PED_ITEM(+) AND
PED_ITEM.PED_REF = FECH_CARGA.PED_REF(+) AND
FECH_CARGA.FECH_REF = FECH.REF(+) AND
FECH.VIAGEM_REF =VIAGEM.REF(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view INS_PAG_1');
CREATE OR REPLACE VIEW INS_PAG_1 AS
SELECT I.REF, IF.FECH_REF, IP.PED_REF, IP.ITEM, IP.P, IP.LOTE, IP.OV, IP.NE_ITEM, IP.TBN,IP.FSE, IP.PO
FROM CXBH.INSTRUÇÃO_PAG "I",  CXBH.INSTRUÇÃO_PAG_FECH "IF",  CXBH.FECH_CARGA "FC", CXBH.PED_ITEM
"IP" WHERE IF.FECH_REF = FC.FECH_REF(+) AND FC.PED_REF = IP.PED_REF(+) AND FC.PED_ITEM = IP.ITEM(+) AND I.REF = IF.INSTRUÇÃO_PAG_REF(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view ITEM_FECHADO');
CREATE OR REPLACE VIEW ITEM_FECHADO AS
SELECT FECH_NCANCEL.PED_REF, FECH_NCANCEL.PED_ITEM, Sum(FECH_NCANCEL.QTD_PED_UNID) AS QTD_PED_UNID
FROM CXBH.FECH_NCANCEL
GROUP BY FECH_NCANCEL.PED_REF, FECH_NCANCEL.PED_ITEM

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view MAP_CAR');
CREATE OR REPLACE VIEW MAP_CAR AS
SELECT P.REF, IP.ITEM, IP.P, IP.LOTE, IP.OV, IP.NE_ITEM, IP.TBN, IP.FSE, IP.PO,IP.PROD, IP.DESCARGA_PORTO, IP.LAYDAY_INÍCIO, IP.LAYDAY_FINAL, P.FORNECEDOR_COND_VENDA, P.EXP_COND_VENDA, IP.PED_UNID, IP.NOMINAL_PED_UNID, P.PED_DATA, P.CARGA_PORTO , P.EMB_PREV, IP.USUÁRIO_FINAL, EC.EMB_DATA, V.NAVIO, V.NAVIO_ÚLTIMO, P.PAÍS_DESTINO, F.PROPRIETÁRIO, F.NEGOCIANTE, P.EXP, F.CORRETOR, F.CARGA_ESTIVA, F.DESCARGA_ESTIVA, F.CARGA_AGENTE,F.DESCARGA_AGENTE FROM CXBH.PED "P", CXBH.PED_ITEM "IP", CXBH.BL_CARGA "EC", CXBH.FECH_CARGA "FC", CXBH.Fech "F", CXBH.VIAGEM "V", CXBH.VIAGEM_ESCALA "C", CXBH.VIAGEM_ESCALA "D" WHERE P.REF = IP.PED_REF(+) AND FC.PED_ITEM = EC.PED_ITEM(+) AND FC.PED_REF = EC.PED_REF(+) AND F.VIAGEM_REF = V.REF(+) AND F.VIAGEM_REF = C.VIAGEM_REF(+) AND F.CARGA_PORTO_ESCALA = C.ESCALA(+) AND F.VIAGEM_REF = D.VIAGEM_REF(+) AND F.DESCARGA_PORTO_ESCALA = D.ESCALA(+) AND FC.FECH_REF = F.REF(+) AND IP.ITEM = FC.PED_ITEM(+) AND IP.PED_REF = FC.PED_REF(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view MAP_CAR_1');
CREATE OR REPLACE VIEW MAP_CAR_1 AS
SELECT FC.PED_REF, FC.PED_ITEM, FC.FECH_REF, FC.QTD_PED_UNID, V.NAVIO, VE.ETA, FS.SUBSTITUTO FROM CXBH.FECH_CARGA "FC", CXBH.FECH "F", CXBH.VIAGEM "V", CXBH.FECH_SUBSTITUÍDO "FS", CXBH.VIAGEM_ESCALA "VE" WHERE FS.SUBSTITUTO Is Null AND FC.FECH_REF = F.REF(+) AND F.VIAGEM_REF = V.REF(+) AND F.REF = FS.SUBSTITUÍDO(+) AND V.REF = VE.VIAGEM_REF(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view MAP_CAR_2');
CREATE OR REPLACE VIEW MAP_CAR_2 AS
SELECT EC.FECH_REF, EC.PED_REF, EC.PED_ITEM, EC.QTD_PED_UNID, EC.EMB_DATA, BL.BL_NUM FROM CXBH.BL, CXBH.BL_CARGA "EC" WHERE BL.VIAGEM_REF(+) = EC.VIAGEM_REF AND BL.SEQ(+) = EC.BL_SEQ

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view MERCOSUL_BOLIVIA_EXP');
CREATE OR REPLACE VIEW MERCOSUL_BOLIVIA_EXP AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB.EXP,
EMB.EXP_ENDEREÇO,
EMB.EXP_PAÍS,
EMB.IMP,
EMB.IMP_ENDEREÇO,
EMB.IMP_PAÍS,
EMB.PAGADOR,
EMB.PAG_ENDEREÇO,
EMB.PAG_PAÍS,
EMB.CONSIGNATÁRIO,
EMB.CONSIGN_ENDEREÇO,
EMB.CONSIGN_PAÍS,
PED.VIA_TRANSPORTE,
EMB.CARGA_PORTO,
EMB.DATA_EMISSÃO_DOC,
EMB.TRANSPORTADOR,
PED.PAÍS_DESTINO,
EMB_DOC.PARAM,
SUBSTR(FATURA_EXP,1) AS Fatura
FROM EMB_DOC, EMB, EMB_PARAM, EMB_ITEM, PED
WHERE EMB_DOC.EMB_REF = EMB.REF(+) AND EMB.REF = EMB_PARAM.REF(+) AND EMB_ITEM.PED_REF = PED.REF(+) AND EMB.REF = EMB_ITEM.EMB_REF(+) AND EMB_DOC.DOC='MERCOSUL BOLIVIA EXP'
GROUP BY
EMB_DOC.EMB_REF,
EMB_DOC.SEQ,
EMB.EXP,
EMB.EXP_ENDEREÇO,
EMB.EXP_PAÍS,
EMB.IMP,
EMB.IMP_ENDEREÇO,
EMB.IMP_PAÍS,
EMB.PAGADOR,
EMB.PAG_ENDEREÇO,
EMB.PAG_PAÍS,
EMB.CONSIGNATÁRIO,
EMB.CONSIGN_ENDEREÇO,
EMB.CONSIGN_PAÍS,
PED.VIA_TRANSPORTE,
EMB.CARGA_PORTO,
EMB.DATA_EMISSÃO_DOC,
EMB.TRANSPORTADOR,
PED.PAÍS_DESTINO,
EMB_DOC.PARAM,
SUBSTR(FATURA_EXP,1)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view MERCOSUL_BOLIVIA_EXP_SUB');
CREATE OR REPLACE VIEW MERCOSUL_BOLIVIA_EXP_SUB AS
SELECT
ITEM.PED_REF,
ITEM.PED_ITEM,
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
ITEM.SEQ AS SEQ_ITEM,
ITEM.DESCR,
ITEM.QTD_VOL,
ITEM.PESO_LÍQUIDO,
EMB_FAMÍLIA_GENÉRICA.FAMÍLIA AS FAMÍLIA_GENÉRICA,
EMB.PESO_UNID,
EMB.IDIOMA,
ITEM.EMBALAGEM,
EMB.TIPO_DESCR_MERCADORIA,
EMB.MOEDA,
EMB_DOC.PARAM,
ITEM.PREÇO_FOB,
ITEM.NALADI,
EMB.TOTALIZAÇÃO_EMBALAGEM
FROM EMB_DOC, EMB, BL_CARGA, EMB_FAMÍLIA_GENÉRICA,
(
     SELECT
     EMB_REF,
     SEQ,
     BL_SEQ,
     PED_REF,
     PED_ITEM,
     DESCR,
     VIAGEM_REF,
     SUM(QTD_VOL) QTD_VOL,
     SUM(PESO_LÍQUIDO) PESO_LÍQUIDO,
     EXP_PREÇO_FOB AS PREÇO_FOB,
     EMBALAGEM,
     SUBSTR(NALADI,1) AS NALADI
     FROM
     EMB_ITEM
     GROUP BY
     EMB_REF,
     SEQ,
     BL_SEQ,
     DESCR,
     VIAGEM_REF,
     EXP_PREÇO_FOB,
     PED_REF,
     PED_ITEM,
     NALADI,
     EMBALAGEM
) ITEM
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB_DOC.EMB_REF = ITEM.EMB_REF(+) AND
ITEM.BL_SEQ = BL_CARGA.BL_SEQ(+) AND
ITEM.VIAGEM_REF = BL_CARGA.VIAGEM_REF(+) AND
ITEM.PED_ITEM = BL_CARGA.PED_ITEM(+) AND
ITEM.PED_REF = BL_CARGA.PED_REF(+) AND
BL_CARGA.FAMÍLIA_GENÉRICA = EMB_FAMÍLIA_GENÉRICA.SEQ(+) AND
BL_CARGA.EMB_REF = EMB_FAMÍLIA_GENÉRICA.EMB_REF(+) AND
EMB_DOC.DOC='MERCOSUL BOLIVIA EXP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view MERCOSUL_BOLIVIA_IMP');
CREATE OR REPLACE VIEW MERCOSUL_BOLIVIA_IMP AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB.PAGADOR,
EMB.PAG_ENDEREÇO,
EMB.PAG_PAÍS,
EMB.CONSIGNATÁRIO,
EMB.CONSIGN_ENDEREÇO,
EMB.CONSIGN_PAÍS,
PED.VIA_TRANSPORTE,
EMB.CARGA_PORTO,
EMB.DATA_EMISSÃO_DOC,
EMB.TRANSPORTADOR,
PED.PAÍS_DESTINO,
EMB_DOC.PARAM,
SUBSTR(FATURA_IMP,1) AS Fatura
FROM EMB_DOC, EMB, EMB_PARAM, EMB_ITEM, PED
WHERE EMB_DOC.EMB_REF = EMB.REF(+) AND EMB.REF = EMB_PARAM.REF(+) AND EMB_ITEM.PED_REF = PED.REF(+) AND EMB.REF = EMB_ITEM.EMB_REF(+) AND EMB_DOC.DOC='MERCOSUL BOLIVIA IMP'
GROUP BY
EMB_DOC.EMB_REF,
EMB_DOC.SEQ,
EMB.PAGADOR,
EMB.PAG_ENDEREÇO,
EMB.PAG_PAÍS,
EMB.CONSIGNATÁRIO,
EMB.CONSIGN_ENDEREÇO,
EMB.CONSIGN_PAÍS,
PED.VIA_TRANSPORTE,
EMB.CARGA_PORTO,
EMB.DATA_EMISSÃO_DOC,
EMB.TRANSPORTADOR,
PED.PAÍS_DESTINO,
EMB_DOC.PARAM,
SUBSTR(FATURA_IMP,1)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view MERCOSUL_BOLIVIA_IMP_SUB');
CREATE OR REPLACE VIEW MERCOSUL_BOLIVIA_IMP_SUB AS
SELECT
ITEM.PED_REF,
ITEM.PED_ITEM,
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
ITEM.SEQ AS SEQ_ITEM,
ITEM.DESCR,
ITEM.QTD_VOL,
ITEM.PESO_LÍQUIDO,
EMB_FAMÍLIA_GENÉRICA.FAMÍLIA AS FAMÍLIA_GENÉRICA,
EMB.PESO_UNID,
EMB.IDIOMA,
ITEM.EMBALAGEM,
EMB.TIPO_DESCR_MERCADORIA,
EMB.MOEDA,
EMB_DOC.PARAM,
ITEM.PREÇO_FOB,
ITEM.NALADI,
EMB.TOTALIZAÇÃO_EMBALAGEM
FROM EMB_DOC, EMB, BL_CARGA, EMB_FAMÍLIA_GENÉRICA,
(
     SELECT
     EMB_REF,
     SEQ,
     BL_SEQ,
     PED_REF,
     PED_ITEM,
     DESCR,
     VIAGEM_REF,
     SUM(QTD_VOL) QTD_VOL,
     SUM(PESO_LÍQUIDO) PESO_LÍQUIDO,
     IMP_PREÇO_FOB AS PREÇO_FOB,
     EMBALAGEM,
     SUBSTR(NALADI,1) AS NALADI
     FROM
     EMB_ITEM
     GROUP BY
     EMB_REF,
     SEQ,
     BL_SEQ,
     DESCR,
     VIAGEM_REF,
     IMP_PREÇO_FOB,
     PED_REF,
     PED_ITEM,
     NALADI,
     EMBALAGEM
) ITEM
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB_DOC.EMB_REF = ITEM.EMB_REF(+) AND
ITEM.BL_SEQ = BL_CARGA.BL_SEQ(+) AND
ITEM.VIAGEM_REF = BL_CARGA.VIAGEM_REF(+) AND
ITEM.PED_ITEM = BL_CARGA.PED_ITEM(+) AND
ITEM.PED_REF = BL_CARGA.PED_REF(+) AND
BL_CARGA.FAMÍLIA_GENÉRICA = EMB_FAMÍLIA_GENÉRICA.SEQ(+) AND
BL_CARGA.EMB_REF = EMB_FAMÍLIA_GENÉRICA.EMB_REF(+) AND
EMB_DOC.DOC='MERCOSUL BOLIVIA IMP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view MERCOSUL_CHILE_EXP');
CREATE OR REPLACE VIEW MERCOSUL_CHILE_EXP AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB.EXP,
EMB.EXP_ENDEREÇO,
EMB.EXP_PAÍS,
EMB.IMP,
EMB.IMP_ENDEREÇO,
EMB.IMP_PAÍS,
EMB.PAGADOR,
EMB.PAG_ENDEREÇO,
EMB.PAG_PAÍS,
EMB.CONSIGNATÁRIO,
EMB.CONSIGN_ENDEREÇO,
EMB.CONSIGN_PAÍS,
PED.VIA_TRANSPORTE,
EMB.CARGA_PORTO,
EMB.DATA_EMISSÃO_DOC,
EMB.TRANSPORTADOR,
PED.PAÍS_DESTINO,
EMB_DOC.PARAM,
SUBSTR(FATURA_EXP,1) AS Fatura
FROM EMB_DOC, EMB, EMB_PARAM, EMB_ITEM, PED
WHERE EMB_DOC.EMB_REF = EMB.REF(+) AND EMB.REF = EMB_PARAM.REF(+) AND EMB_ITEM.PED_REF = PED.REF(+) AND EMB.REF = EMB_ITEM.EMB_REF(+) AND EMB_DOC.DOC='MERCOSUL CHILE EXP'
GROUP BY
EMB_DOC.EMB_REF,
EMB_DOC.SEQ,
EMB.EXP,
EMB.EXP_ENDEREÇO,
EMB.EXP_PAÍS,
EMB.IMP,
EMB.IMP_ENDEREÇO,
EMB.IMP_PAÍS,
EMB.PAGADOR,
EMB.PAG_ENDEREÇO,
EMB.PAG_PAÍS,
EMB.CONSIGNATÁRIO,
EMB.CONSIGN_ENDEREÇO,
EMB.CONSIGN_PAÍS,
PED.VIA_TRANSPORTE,
EMB.CARGA_PORTO,
EMB.DATA_EMISSÃO_DOC,
EMB.TRANSPORTADOR,
PED.PAÍS_DESTINO,
EMB_DOC.PARAM,
SUBSTR(FATURA_EXP,1)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view MERCOSUL_CHILE_EXP_SUB');
CREATE OR REPLACE VIEW MERCOSUL_CHILE_EXP_SUB AS
SELECT
ITEM.PED_REF,
ITEM.PED_ITEM,
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
ITEM.SEQ AS SEQ_ITEM,
ITEM.DESCR,
ITEM.QTD_VOL,
ITEM.PESO_LÍQUIDO,
EMB_FAMÍLIA_GENÉRICA.FAMÍLIA AS FAMÍLIA_GENÉRICA,
EMB.PESO_UNID,
EMB.IDIOMA,
ITEM.EMBALAGEM,
EMB.TIPO_DESCR_MERCADORIA,
EMB.MOEDA,
EMB_DOC.PARAM,
ITEM.PREÇO_FOB,
ITEM.NALADI,
EMB.TOTALIZAÇÃO_EMBALAGEM
FROM EMB_DOC, EMB, BL_CARGA, EMB_FAMÍLIA_GENÉRICA,
(
     SELECT
     EMB_REF,
     SEQ,
     BL_SEQ,
     PED_REF,
     PED_ITEM,
     DESCR,
     VIAGEM_REF,
     SUM(QTD_VOL) QTD_VOL,
     SUM(PESO_LÍQUIDO) PESO_LÍQUIDO,
     EXP_PREÇO_FOB AS PREÇO_FOB,
     EMBALAGEM,
     SUBSTR(NALADI,1) AS NALADI
     FROM
     EMB_ITEM
     GROUP BY
     EMB_REF,
     SEQ,
     BL_SEQ,
     DESCR,
     VIAGEM_REF,
     EXP_PREÇO_FOB,
     PED_REF,
     PED_ITEM,
     NALADI,
     EMBALAGEM
) ITEM
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB_DOC.EMB_REF = ITEM.EMB_REF(+) AND
ITEM.BL_SEQ = BL_CARGA.BL_SEQ(+) AND
ITEM.VIAGEM_REF = BL_CARGA.VIAGEM_REF(+) AND
ITEM.PED_ITEM = BL_CARGA.PED_ITEM(+) AND
ITEM.PED_REF = BL_CARGA.PED_REF(+) AND
BL_CARGA.FAMÍLIA_GENÉRICA = EMB_FAMÍLIA_GENÉRICA.SEQ(+) AND
BL_CARGA.EMB_REF = EMB_FAMÍLIA_GENÉRICA.EMB_REF(+) AND
EMB_DOC.DOC='MERCOSUL CHILE EXP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view MERCOSUL_CHILE_IMP');
CREATE OR REPLACE VIEW MERCOSUL_CHILE_IMP AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB.PAGADOR,
EMB.PAG_ENDEREÇO,
EMB.PAG_PAÍS,
EMB.CONSIGNATÁRIO,
EMB.CONSIGN_ENDEREÇO,
EMB.CONSIGN_PAÍS,
PED.VIA_TRANSPORTE,
EMB.CARGA_PORTO,
EMB.DATA_EMISSÃO_DOC,
EMB.TRANSPORTADOR,
PED.PAÍS_DESTINO,
EMB_DOC.PARAM,
SUBSTR(FATURA_IMP,1) AS Fatura
FROM EMB_DOC, EMB, EMB_PARAM, EMB_ITEM, PED
WHERE EMB_DOC.EMB_REF = EMB.REF(+) AND EMB.REF = EMB_PARAM.REF(+) AND EMB_ITEM.PED_REF = PED.REF(+) AND EMB.REF = EMB_ITEM.EMB_REF(+) AND EMB_DOC.DOC='MERCOSUL CHILE IMP'
GROUP BY
EMB_DOC.EMB_REF,
EMB_DOC.SEQ,
EMB.PAGADOR,
EMB.PAG_ENDEREÇO,
EMB.PAG_PAÍS,
EMB.CONSIGNATÁRIO,
EMB.CONSIGN_ENDEREÇO,
EMB.CONSIGN_PAÍS,
PED.VIA_TRANSPORTE,
EMB.CARGA_PORTO,
EMB.DATA_EMISSÃO_DOC,
EMB.TRANSPORTADOR,
PED.PAÍS_DESTINO,
EMB_DOC.PARAM,
SUBSTR(FATURA_IMP,1)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view MERCOSUL_CHILE_IMP_SUB');
CREATE OR REPLACE VIEW MERCOSUL_CHILE_IMP_SUB AS
SELECT
ITEM.PED_REF,
ITEM.PED_ITEM,
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
ITEM.SEQ AS SEQ_ITEM,
ITEM.DESCR,
ITEM.QTD_VOL,
ITEM.PESO_LÍQUIDO,
EMB_FAMÍLIA_GENÉRICA.FAMÍLIA AS FAMÍLIA_GENÉRICA,
EMB.PESO_UNID,
EMB.IDIOMA,
ITEM.EMBALAGEM,
EMB.TIPO_DESCR_MERCADORIA,
EMB.MOEDA,
EMB_DOC.PARAM,
ITEM.PREÇO_FOB,
ITEM.NALADI,
EMB.TOTALIZAÇÃO_EMBALAGEM
FROM EMB_DOC, EMB, BL_CARGA, EMB_FAMÍLIA_GENÉRICA,
(
     SELECT
     EMB_REF,
     SEQ,
     BL_SEQ,
     PED_REF,
     PED_ITEM,
     DESCR,
     VIAGEM_REF,
     SUM(QTD_VOL) QTD_VOL,
     SUM(PESO_LÍQUIDO) PESO_LÍQUIDO,
     IMP_PREÇO_FOB AS PREÇO_FOB,
     EMBALAGEM,
     SUBSTR(NALADI,1) AS NALADI
     FROM
     EMB_ITEM
     GROUP BY
     EMB_REF,
     SEQ,
     BL_SEQ,
     DESCR,
     VIAGEM_REF,
     IMP_PREÇO_FOB,
     PED_REF,
     PED_ITEM,
     NALADI,
     EMBALAGEM
) ITEM
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB_DOC.EMB_REF = ITEM.EMB_REF(+) AND
ITEM.BL_SEQ = BL_CARGA.BL_SEQ(+) AND
ITEM.VIAGEM_REF = BL_CARGA.VIAGEM_REF(+) AND
ITEM.PED_ITEM = BL_CARGA.PED_ITEM(+) AND
ITEM.PED_REF = BL_CARGA.PED_REF(+) AND
BL_CARGA.FAMÍLIA_GENÉRICA = EMB_FAMÍLIA_GENÉRICA.SEQ(+) AND
BL_CARGA.EMB_REF = EMB_FAMÍLIA_GENÉRICA.EMB_REF(+) AND
EMB_DOC.DOC='MERCOSUL CHILE IMP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view MERCOSUL_EXP');
CREATE OR REPLACE VIEW MERCOSUL_EXP AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB.EXP,
EMB.EXP_ENDEREÇO,
EMB.EXP_PAÍS,
EMB.IMP,
EMB.IMP_ENDEREÇO,
EMB.IMP_PAÍS,
EMB.CONSIGNATÁRIO,
EMB.CONSIGN_ENDEREÇO,
EMB.CONSIGN_PAÍS,
EMB.CARGA_PORTO,
EMB.DATA_EMISSÃO_DOC,
EMB.TRANSPORTADOR,
PED.PAÍS_DESTINO,
PED.VIA_TRANSPORTE,
EMB_DOC.PARAM,
SUBSTR(FATURA_EXP,1) AS Fatura
FROM EMB_DOC, EMB, EMB_PARAM, EMB_ITEM, PED
WHERE EMB_DOC.EMB_REF = EMB.REF(+) AND EMB.REF = EMB_PARAM.REF(+) AND EMB_ITEM.PED_REF = PED.REF(+) AND EMB.REF = EMB_ITEM.EMB_REF(+) AND EMB_DOC.DOC='MERCOSUL EXP'
GROUP BY
EMB_DOC.EMB_REF,
EMB_DOC.SEQ,
EMB.EXP,
EMB.EXP_ENDEREÇO,
EMB.EXP_PAÍS,
EMB.IMP,
EMB.IMP_ENDEREÇO,
EMB.IMP_PAÍS,
EMB.CONSIGNATÁRIO,
EMB.CONSIGN_ENDEREÇO,
EMB.CONSIGN_PAÍS,
EMB.CARGA_PORTO,
EMB.DATA_EMISSÃO_DOC,
EMB.TRANSPORTADOR,
PED.PAÍS_DESTINO,
PED.VIA_TRANSPORTE,
EMB_DOC.PARAM,
SUBSTR(FATURA_EXP,1)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view MERCOSUL_EXP_SUB');
CREATE OR REPLACE VIEW MERCOSUL_EXP_SUB AS
SELECT
ITEM.PED_REF,
ITEM.PED_ITEM,
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
ITEM.SEQ AS SEQ_ITEM,
ITEM.DESCR,
ITEM.QTD_VOL,
ITEM.PESO_LÍQUIDO,
EMB_FAMÍLIA_GENÉRICA.FAMÍLIA AS FAMÍLIA_GENÉRICA,
EMB.PESO_UNID,
EMB.IDIOMA,
ITEM.EMBALAGEM,
EMB.TIPO_DESCR_MERCADORIA,
EMB.MOEDA,
EMB_DOC.PARAM,
ITEM.PREÇO_FOB,
ITEM.NCM,
EMB.TOTALIZAÇÃO_EMBALAGEM
FROM EMB_DOC, EMB, BL_CARGA, EMB_FAMÍLIA_GENÉRICA,
(
     SELECT
     EMB_REF,
     SEQ,
     BL_SEQ,
     PED_REF,
     PED_ITEM,
     DESCR,
     VIAGEM_REF,
     SUM(QTD_VOL) QTD_VOL,
     SUM(PESO_LÍQUIDO) PESO_LÍQUIDO,
     EXP_PREÇO_FOB AS PREÇO_FOB,
     EMBALAGEM,
     SUBSTR(NCM,1) AS NCM
     FROM
     EMB_ITEM
     GROUP BY
     EMB_REF,
     SEQ,
     BL_SEQ,
     DESCR,
     VIAGEM_REF,
     EXP_PREÇO_FOB,
     PED_REF,
     PED_ITEM,
     NCM,
     EMBALAGEM
) ITEM
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB_DOC.EMB_REF = ITEM.EMB_REF(+) AND
ITEM.BL_SEQ = BL_CARGA.BL_SEQ(+) AND
ITEM.VIAGEM_REF = BL_CARGA.VIAGEM_REF(+) AND
ITEM.PED_ITEM = BL_CARGA.PED_ITEM(+) AND
ITEM.PED_REF = BL_CARGA.PED_REF(+) AND
BL_CARGA.FAMÍLIA_GENÉRICA = EMB_FAMÍLIA_GENÉRICA.SEQ(+) AND
BL_CARGA.EMB_REF = EMB_FAMÍLIA_GENÉRICA.EMB_REF(+) AND
EMB_DOC.DOC='MERCOSUL EXP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view MERCOSUL_IMP');
CREATE OR REPLACE VIEW MERCOSUL_IMP AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB.PAGADOR,
EMB.PAG_ENDEREÇO,
EMB.PAG_PAÍS,
EMB.CONSIGNATÁRIO,
EMB.CONSIGN_ENDEREÇO,
EMB.CONSIGN_PAÍS,
EMB.CARGA_PORTO,
EMB.DATA_EMISSÃO_DOC,
EMB.TRANSPORTADOR,
PED.PAÍS_DESTINO,
PED.VIA_TRANSPORTE,
EMB_DOC.PARAM,
SUBSTR(FATURA_IMP,1) AS Fatura
FROM EMB_DOC, EMB, EMB_PARAM, EMB_ITEM, PED
WHERE EMB_DOC.EMB_REF = EMB.REF(+) AND EMB.REF = EMB_PARAM.REF(+) AND EMB_ITEM.PED_REF = PED.REF(+) AND EMB.REF = EMB_ITEM.EMB_REF(+) AND EMB_DOC.DOC='MERCOSUL IMP'
GROUP BY
EMB_DOC.EMB_REF,
EMB_DOC.SEQ,
EMB.PAGADOR,
EMB.PAG_ENDEREÇO,
EMB.PAG_PAÍS,
EMB.CONSIGNATÁRIO,
EMB.CONSIGN_ENDEREÇO,
EMB.CONSIGN_PAÍS,
EMB.CARGA_PORTO,
EMB.DATA_EMISSÃO_DOC,
EMB.TRANSPORTADOR,
PED.PAÍS_DESTINO,
PED.VIA_TRANSPORTE,
EMB_DOC.PARAM,
SUBSTR(FATURA_IMP,1)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view MERCOSUL_IMP_SUB');
CREATE OR REPLACE VIEW MERCOSUL_IMP_SUB AS
SELECT
ITEM.PED_REF,
ITEM.PED_ITEM,
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
ITEM.SEQ AS SEQ_ITEM,
ITEM.DESCR,
ITEM.QTD_VOL,
ITEM.PESO_LÍQUIDO,
EMB_FAMÍLIA_GENÉRICA.FAMÍLIA AS FAMÍLIA_GENÉRICA,
EMB.PESO_UNID,
EMB.IDIOMA,
ITEM.EMBALAGEM,
EMB.TIPO_DESCR_MERCADORIA,
EMB.MOEDA,
EMB_DOC.PARAM,
ITEM.PREÇO_FOB,
ITEM.NCM,
EMB.TOTALIZAÇÃO_EMBALAGEM
FROM EMB_DOC, EMB, BL_CARGA, EMB_FAMÍLIA_GENÉRICA,
(
     SELECT
     EMB_REF,
     SEQ,
     BL_SEQ,
     PED_REF,
     PED_ITEM,
     DESCR,
     VIAGEM_REF,
     SUM(QTD_VOL) QTD_VOL,
     SUM(PESO_LÍQUIDO) PESO_LÍQUIDO,
     IMP_PREÇO_FOB AS PREÇO_FOB,
     EMBALAGEM,
     SUBSTR(NCM,1) AS NCM
     FROM
     EMB_ITEM
     GROUP BY
     EMB_REF,
     SEQ,
     BL_SEQ,
     DESCR,
     VIAGEM_REF,
     IMP_PREÇO_FOB,
     PED_REF,
     PED_ITEM,
     NCM,
     EMBALAGEM
) ITEM
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB_DOC.EMB_REF = ITEM.EMB_REF(+) AND
ITEM.BL_SEQ = BL_CARGA.BL_SEQ(+) AND
ITEM.VIAGEM_REF = BL_CARGA.VIAGEM_REF(+) AND
ITEM.PED_ITEM = BL_CARGA.PED_ITEM(+) AND
ITEM.PED_REF = BL_CARGA.PED_REF(+) AND
BL_CARGA.FAMÍLIA_GENÉRICA = EMB_FAMÍLIA_GENÉRICA.SEQ(+) AND
BL_CARGA.EMB_REF = EMB_FAMÍLIA_GENÉRICA.EMB_REF(+) AND
EMB_DOC.DOC='MERCOSUL IMP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view NEGOCIO_COMERCIAL_NAVIO');
CREATE OR REPLACE VIEW NEGOCIO_COMERCIAL_NAVIO AS
SELECT  P.REF  PED_REF , PI.ITEM PED_ITEM, EMB.NAVIO, EMB.BL_DATA,
SUM(EMB.QTD_PED_UNID)  QTD_PED_UNID, EMB.BL_NUM
FROM
 (SELECT BL_CARGA.PED_REF, BL_CARGA.PED_ITEM, BL_CARGA.BL_SEQ,
    BL.VIAGEM_REF,  BL.BL_NUM, VIAGEM.NAVIO AS NAVIO,
 BL.BL_DATA AS BL_DATA, BL_CARGA.QTD_PED_UNID AS QTD_PED_UNID,
 BL_CARGA.QTD_FRETE_UNID AS QTD_FRETE_UNID
 FROM
 CXBH.BL_CARGA, CXBH.BL, CXBH.VIAGEM
 WHERE
 BL_CARGA.BL_SEQ = BL.SEQ(+) AND
 BL_CARGA.VIAGEM_REF = BL.VIAGEM_REF(+) AND
 BL.VIAGEM_REF = VIAGEM.REF(+)) EMB,
CXBH.PED P, CXBH.PED_ITEM PI
WHERE
 P.REF = PI.PED_REF(+) AND PI.ITEM = EMB.PED_ITEM (+) AND
 PI.PED_REF = EMB.PED_REF(+) AND EMB.NAVIO !='NULL'
GROUP BY EMB.NAVIO, EMB.BL_DATA, P.REF, PI.ITEM, EMB.BL_NUM

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view NEG_FECH_ANA_QUANT');
CREATE OR REPLACE VIEW NEG_FECH_ANA_QUANT AS
SELECT PED_ITEM.PED_REF, PED_ITEM.ITEM, PED_ITEM.USUÁRIO_FINAL,
PED_ITEM.NOMINAL_PED_UNID AS Ton_Prog,
BL_CARGA.QTD_PED_UNID AS Ton_Emb,
PED_ITEM.PESO_LÍQUIDO AS Net_Weigth
FROM
PED_ITEM,BL_CARGA,VIAGEM
WHERE
BL_CARGA.VIAGEM_REF = VIAGEM.REF(+) AND
PED_ITEM.ITEM = BL_CARGA.PED_ITEM(+) AND
PED_ITEM.PED_REF = BL_CARGA.PED_REF(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view NEG_FECH_ANA_SUBFIN');
CREATE OR REPLACE VIEW NEG_FECH_ANA_SUBFIN AS
SELECT EMB_ITEM.PED_REF, VIAGEM.NAVIO AS NAVIO, PED_ITEM.USUÁRIO_FINAL,
Emb.REF AS REF,
Emb.FRETE_UNID AS FRETE_UNID,
Emb.FRETE_VALOR_POR_UNID AS FRETE_VALOR_POR_UNID,
Emb.FRETE_VALOR AS FRETE_VALOR,
EMB_ITEM.PESO_BRUTO AS PESO_BRUTO
FROM
Emb,EMB_ITEM,VIAGEM,PED_ITEM
WHERE
EMB_ITEM.VIAGEM_REF = VIAGEM.REF(+) AND
EMB_ITEM.PED_REF = PED_ITEM.PED_REF(+) AND
Emb.REF = EMB_ITEM.EMB_REF

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view PACKING_LIST_EXP');
CREATE OR REPLACE VIEW PACKING_LIST_EXP AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB_ITEM.SEQ AS SEQ_ITEM,
EMB.DATA_EMISSÃO_DOC,
EMB.IDIOMA,
EMB_FAMÍLIA_GENÉRICA.FAMÍLIA AS FAMÍLIA_GENÉRICA,
EMB_FAMÍLIA_GENÉRICA.SEQ AS SEQ_FAMÍLIA,
EMB.IMP,
EMB.IMP_ENDEREÇO,
EMB.IMP_PAÍS,
EMB.EXP,
EMB.EXP_ENDEREÇO,
EMB.EXP_PAÍS,
EMB.MARCAÇÃO,
EMB.TIPO_DESCR_MERCADORIA,
EMB.PESO_UNID,
EMB_ITEM.DESCR,
PED_ITEM.REVESTIMENTO,
PED_ITEM.TÊMPERA,
EMB_ITEM.EMBALAGEM,
CIA.LOGOTIPO,
EMB_DOC.PARAM,
SUBSTR(FATURA_EXP,1) AS Fat,
EMB_ITEM.QTD_VOL AS VOLUMES_ITEM,
EMB_ITEM.PESO_LÍQUIDO AS LÍQUIDO_ITEM,
EMB_ITEM.PESO_BRUTO AS BRUTO_ITEM
FROM EMB_DOC, EMB_ITEM, EMB, PED_ITEM, CIA, EMB_PARAM, BL_CARGA,EMB_FAMÍLIA_GENÉRICA
WHERE EMB_DOC.EMB_REF = EMB.REF(+) AND EMB.REF = EMB_PARAM.REF(+) AND EMB.EXP_LOGOTIPO = CIA.COD(+) AND EMB_ITEM.BL_SEQ = BL_CARGA.BL_SEQ(+) AND EMB_ITEM.VIAGEM_REF = BL_CARGA.VIAGEM_REF(+) AND EMB_ITEM.PED_ITEM = BL_CARGA.PED_ITEM(+) AND EMB_ITEM.PED_REF = BL_CARGA.PED_REF(+) AND EMB_ITEM.PED_REF = PED_ITEM.PED_REF(+) AND EMB_ITEM.PED_ITEM = PED_ITEM.ITEM(+) AND BL_CARGA.FAMÍLIA_GENÉRICA = EMB_FAMÍLIA_GENÉRICA.SEQ(+) AND BL_CARGA.EMB_REF = EMB_FAMÍLIA_GENÉRICA.EMB_REF(+) AND EMB.REF = EMB_ITEM.EMB_REF(+) AND EMB_DOC.DOC='PACKING LIST EXP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view PACKING_LIST_IMP');
CREATE OR REPLACE VIEW PACKING_LIST_IMP AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB_ITEM.SEQ AS SEQ_ITEM,
EMB.DATA_EMISSÃO_DOC,
EMB.IDIOMA,
EMB_FAMÍLIA_GENÉRICA.FAMÍLIA AS FAMÍLIA_GENÉRICA,
EMB_FAMÍLIA_GENÉRICA.SEQ AS SEQ_FAMÍLIA,
EMB.IMP,
EMB.IMP_ENDEREÇO,
EMB.IMP_PAÍS,
EMB.PAGADOR,
EMB.PAG_ENDEREÇO,
EMB.PAG_PAÍS,
EMB.MARCAÇÃO,
EMB.TIPO_DESCR_MERCADORIA,
EMB.PESO_UNID,
EMB_ITEM.DESCR,
PED_ITEM.REVESTIMENTO,
PED_ITEM.TÊMPERA,
EMB_ITEM.EMBALAGEM,
CIA.LOGOTIPO,
EMB_DOC.PARAM,
SUBSTR(FATURA_IMP,1) AS Fat,
EMB_ITEM.QTD_VOL AS VOLUMES_ITEM,
EMB_ITEM.PESO_LÍQUIDO AS LÍQUIDO_ITEM,
EMB_ITEM.PESO_BRUTO AS BRUTO_ITEM
FROM EMB_DOC, EMB_ITEM, EMB, PED_ITEM, CIA, EMB_PARAM, BL_CARGA,EMB_FAMÍLIA_GENÉRICA
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB.REF = EMB_PARAM.REF(+) AND
EMB.IMP_LOGOTIPO = CIA.COD(+) AND
EMB.REF = EMB_ITEM.EMB_REF(+) AND
EMB_ITEM.BL_SEQ = BL_CARGA.BL_SEQ(+) AND
EMB_ITEM.VIAGEM_REF = BL_CARGA.VIAGEM_REF(+) AND
EMB_ITEM.PED_ITEM = BL_CARGA.PED_ITEM(+) AND
EMB_ITEM.PED_REF = BL_CARGA.PED_REF(+) AND
EMB_ITEM.PED_REF = PED_ITEM.PED_REF(+) AND
EMB_ITEM.PED_ITEM = PED_ITEM.ITEM(+) AND
BL_CARGA.FAMÍLIA_GENÉRICA = EMB_FAMÍLIA_GENÉRICA.SEQ(+) AND
BL_CARGA.EMB_REF = EMB_FAMÍLIA_GENÉRICA.EMB_REF(+) AND
EMB_DOC.DOC='PACKING LIST IMP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view PED_AFR_4');
CREATE OR REPLACE VIEW PED_AFR_4 AS
SELECT
    FC.FECH_REF, FC.PED_REF, FC.PED_ITEM, FC.NOMEAÇÃO_DATA, FC.QTD_PED_UNID,
    FC.QTD_FRETE_UNID, FC.QTD_TOTAL,FC. ACEITAÇÃO_FORNECEDOR_DATA,
    DECODE (FS.SUBSTITUTO, NULL, 0 , -1) CANCELADO,
    DECODE (FS.SUBSTITUTO, NULL, QTD_PED_UNID,0) TOTAL ,
    DECODE (FS.SUBSTITUTO, NULL, FC.QTD_FRETE_UNID,0) TOTAL_FREIGHT
FROM
    CXBH.FECH_CARGA FC, CXBH.FECH_SUBSTITUÍDO FS
WHERE
    FC.FECH_REF = FS.SUBSTITUÍDO(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view PED_AFR_6');
CREATE OR REPLACE VIEW PED_AFR_6 AS
SELECT
BC.FECH_REF,BC.VIAGEM_REF, BC.PED_REF, BC.PED_ITEM, BC.BL_SEQ, BC.EMB_DATA,
BC.QTD_PED_UNID, BC.QTD_FRETE_UNID, V.NAVIO, V.NAVIO_ÚLTIMO, BL.BL_DATA,
VE.ETA LOADING_ETA
FROM
   CXBH.BL_CARGA BC, CXBH.VIAGEM V, CXBH.BL BL, CXBH.VIAGEM_ESCALA VE,
   CXBH.FECH F
WHERE
   BC.VIAGEM_REF=V.REF (+) AND
   BC.VIAGEM_REF = BL.VIAGEM_REF (+) AND
   BC.BL_SEQ = BL.SEQ (+) AND
   BL.VIAGEM_REF = F.VIAGEM_REF(+) AND
   F.VIAGEM_REF = VE.VIAGEM_REF(+) AND
   F.CARGA_PORTO_ESCALA = VE.ESCALA(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view PED_AFR_7');
CREATE OR REPLACE VIEW PED_AFR_7 AS
SELECT
P.REF PED_REF,
PI.ITEM PED_ITEM,
SUM (BC.QTD_PED_UNID) EMBARCADO,
SUM (F.QTD_PED_UNID) FECHADO,
SUM (PI.NOMINAL_PED_UNID) NOMINAL
FROM
CXBH.PED P, CXBH.PED_ITEM PI, CXBH.FECH_CARGA F, CXBH.BL_CARGA BC
WHERE
P.REF = PI.PED_REF(+) AND
PI.PED_REF = F.PED_REF(+) AND
PI.ITEM = F.PED_ITEM(+) AND
F.PED_REF = BC.PED_REF(+) AND
F.PED_ITEM = BC.PED_ITEM(+)
GROUP BY P.REF, PI.ITEM

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view PED_AFR_8');
CREATE OR REPLACE VIEW PED_AFR_8 AS
SELECT
P.REF PED_REF,
SUM (FF.QTD_PED_UNID) EMBARCADO,
SUM (F.QTD_PED_UNID) FECHADO,
SUM (PI.NOMINAL_PED_UNID) NOMINAL
FROM
CXBH.PED P, CXBH.PED_ITEM PI, CXBH.FECH_CARGA F,
   (SELECT
   PI.PED_REF, PI.ITEM PED_ITEM, SUM(BC.QTD_PED_UNID) QTD_PED_UNID
   FROM
   CXBH.PED_ITEM PI, CXBH.BL_CARGA BC
   WHERE
   PI.PED_REF = BC.PED_REF(+) AND
   PI.ITEM = BC.PED_ITEM(+)
   GROUP BY PI.PED_REF, PI.ITEM) FF
WHERE
P.REF = PI.PED_REF(+) AND
PI.PED_REF = FF.PED_REF(+) AND
PI.ITEM = FF.PED_ITEM(+) AND
FF.PED_REF = F.PED_REF(+) AND
FF.PED_ITEM = F.PED_ITEM(+)
GROUP BY P.REF

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view PED_DETAL_10');
CREATE OR REPLACE VIEW PED_DETAL_10 AS
SELECT
Ped_ITEM.PED_REF, PED_ITEM.Item, PED_ITEM.Nominal_PED_UNID AS Nominal_PED_UNID,
SUM(BC.QTD_FRETE_UNID) AS QTD_FRETE_UNID,
SUM(BC.QTD_PED_UNID) AS QTD_PED_UNID,
SUM(FC.QTD_PED_UNID) AS FCQTD_PED_UNID,
SUM(FC.QTD_FRETE_UNID) AS FCQTD_FRETE_UNID
FROM
PED_ITEM,   (SELECT B.PED_REF,B.PED_ITEM,
            SUM(B.QTD_PED_UNID) AS QTD_PED_UNID,
            SUM(B.QTD_FRETE_UNID) AS QTD_FRETE_UNID
            FROM BL_CARGA "B"
            GROUP BY B.PED_REF, B.PED_ITEM) "BC",
            (SELECT FECH_CARGA.PED_REF,FECH_CARGA.PED_ITEM,
            SUM(FECH_CARGA.QTD_PED_UNID) AS QTD_PED_UNID,
            SUM(FECH_CARGA.QTD_FRETE_UNID) AS QTD_FRETE_UNID
            FROM FECH_CARGA
            GROUP BY FECH_CARGA.PED_REF,FECH_CARGA.PED_ITEM)"FC"
WHERE
Ped_ITEM.PED_REF = FC.PED_REF(+) AND
Ped_ITEM.Item = FC.PED_Item(+) AND
FC.PED_REF = BC.PED_REF(+) AND
FC.PED_Item = BC.PED_Item(+)
GROUP BY Ped_ITEM.PED_REF, PED_ITEM.Item, PED_ITEM.Nominal_PED_UNID

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view PED_ITEM_OK');
CREATE OR REPLACE VIEW PED_ITEM_OK AS
SELECT "PED_REF","ITEM","USUÁRIO_FINAL","DESCARGA_PORTO","PED_UNID","NOMINAL_PED_UNID","TOTAL_FECH","TOTAL_EMB","TOLERÂNCIA_MIN","TOLERÂNCIA_MAX","PROD","EMBALAGEM","EMBALAGEM_PESO_MIN","EMBALAGEM_PESO_MAX","PREÇO_UNITÁRIO_FORNECEDOR","PREÇO_UNITÁRIO_EXP","PREÇO_UNITÁRIO_IMP","ESPESSURA_TIPO","ESPESSURA_MM","LARGURA_MM","COMPRIMENTO_MM","ESPESSURA_POL","LARGURA_POL","COMPRIMENTO_POL","NCM","NALADI","P","LOTE","OV","NE_ITEM","NE_ENVIO","TBN","FSE","PO","USO_FINAL","DIÂMETRO_INTERNO","DIÂMETRO_EXTERNO","PESO_POR_FOLHA","AÇO_TIPO","REVESTIMENTO","TÊMPERA","ACABAMENTO","NORMA_TOLERÂNCIA","NORMA_PRODUÇÃO","BORDAS","OLEAMENTO","TRAT_TÉRMICO","TRAT_QUÍMICO","LA","LE","LÍNGUA","PROD_DESCR","COMPOSIÇÃO_QUÍMICA","MARCAÇÃO_PRODUÇÃO","COMENTÁRIO","PED_USINA_DATA","PED_USINA_ID","PED_USINA_CONFIRM","LAYDAY_INÍCIO","LAYDAY_FINAL","QTD_VOL","PESO_LÍQUIDO","PESO_BRUTO","FECH_REQUISITADO","FECH_NOTIFICADO","CANCEL_DATA","CANCEL_MOTIVO","SEGURO_PERCENT","CUR_PERCENT","SUPERFÍCIE","DIAMET_INT_MAX_TOLER","DIAMET_INT_MIM_TOLER","TQ","CERTIF_QUALIDADE","RABO_PEIXE","RABO_PEIXE_MAX","LÍNGUA_MAX","MARCAÇÃO_ESPECIAL_DOC","OBS","MARCAÇÃO","SYS_MOMENTO_CRIA","SYS_USUÁRIO_CRIA","SYS_LOCAL_CRIA","SYS_MOMENTO_ATUALIZA","SYS_USUÁRIO_ATUALIZA","SYS_LOCAL_ATUALIZA","SYS_STATUS" FROM PED_ITEM
WHERE PED_ITEM.CANCEL_DATA IS NULL

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view PED_ITEM_SALDO');
CREATE OR REPLACE VIEW PED_ITEM_SALDO AS
SELECT PED_ITEM.PED_REF,
PED_ITEM.ITEM PED_ITEM,
NVL(PED_ITEM.NOMINAL_PED_UNID,0) NOMINAL_PED_UNID,
NVL(FECH_CARGA.QTD_PED_UNID,0) QTD_PED_UNID_FECH,
NVL(FECH_CARGA.QTD_FRETE_UNID,0) QTD_FRETE_UNID_FECH,
NVL(BL_CARGA.QTD_PED_UNID,0) QTD_PED_UNID_EMB,
NVL(BL_CARGA.QTD_FRETE_UNID,0) QTD_FRETE_UNID_EMB,
NVL(BL_CARGA.QTD_VOL,0) QTD_VOL_EMB,
NVL(BL_CARGA.PESO_LÍQUIDO,0) PESO_LÍQUIDO_EMB,
NVL(BL_CARGA.PESO_BRUTO,0) PESO_BRUTO_EMB,
(NVL(PED_ITEM.NOMINAL_PED_UNID,0) - NVL(FECH_CARGA.QTD_PED_UNID,0)) SALDO_PED_UNID_FECH
FROM PED_ITEM_OK PED_ITEM,
(SELECT FECH_CARGA.PED_REF,
FECH_CARGA.PED_ITEM,
SUM(FECH_CARGA.QTD_PED_UNID) QTD_PED_UNID,
SUM(FECH_CARGA.QTD_FRETE_UNID) QTD_FRETE_UNID
FROM FECH_CARGA_OK FECH_CARGA
GROUP BY FECH_CARGA.PED_REF, FECH_CARGA.PED_ITEM) FECH_CARGA,
(SELECT BL_CARGA.PED_REF,
BL_CARGA.PED_ITEM,
SUM(BL_CARGA.QTD_PED_UNID) QTD_PED_UNID,
SUM(BL_CARGA.QTD_FRETE_UNID) QTD_FRETE_UNID,
SUM(BL_CARGA.QTD_VOL) QTD_VOL,
SUM(BL_CARGA.PESO_LÍQUIDO) PESO_LÍQUIDO,
SUM(BL_CARGA.PESO_BRUTO) PESO_BRUTO
FROM BL_CARGA_OK BL_CARGA
GROUP BY BL_CARGA.PED_REF, BL_CARGA.PED_ITEM) BL_CARGA
WHERE PED_ITEM.PED_REF = FECH_CARGA.PED_REF (+) AND
PED_ITEM.ITEM = FECH_CARGA.PED_ITEM (+) AND
PED_ITEM.PED_REF = BL_CARGA.PED_REF (+) AND
PED_ITEM.ITEM = BL_CARGA.PED_ITEM (+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view RESULT_VERTICAL');
CREATE OR REPLACE VIEW RESULT_VERTICAL AS
SELECT R.PED_REF, R.EMB_SEQ, R.SEQ, R.RESULT1 RES, R.DATA1 DT FROM CXBH.RESULT R WHERE R.RESULT1 <> 0
UNION ALL
SELECT R.PED_REF, R.EMB_SEQ, R.SEQ, R.RESULT2 RES, R.DATA2 DT FROM CXBH.RESULT R WHERE R.RESULT2 <> 0
UNION ALL
SELECT R.PED_REF, R.EMB_SEQ, R.SEQ, R.RESULT3 RES, R.DATA3 DT FROM CXBH.RESULT R WHERE R.RESULT3 <> 0
UNION ALL
SELECT R.PED_REF, R.EMB_SEQ, R.SEQ, R.RESULT4 RES, R.DATA4 DT FROM CXBH.RESULT R WHERE R.RESULT4 <> 0
UNION ALL
SELECT R.PED_REF, R.EMB_SEQ, R.SEQ, R.RESULT5 RES, R.DATA5 DT FROM CXBH.RESULT R WHERE R.RESULT5 <> 0

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view SAQUE_EMB_DOC_REL');
CREATE OR REPLACE VIEW SAQUE_EMB_DOC_REL AS
SELECT EMB_REF, SEQ SEQ_DOC , -1 AS Original ,EMB_REF EMB_REL
FROM EMB_DOC
WHERE DOC LIKE 'SAQUE___________'
UNION SELECT EMB_REF, DOC, 0 AS ORIGINAL, EMB_REL
FROM EMB_DOC_REL

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view SAQUE_EXP_2_VIAS');
CREATE OR REPLACE VIEW SAQUE_EXP_2_VIAS AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ SEQ_DOC,
EMB.IDIOMA,
EMB.DATA_EMISSÃO_DOC,
EMB.MOEDA,
EMB.EXP,
EMB_TOT_EXP.TOTAL_GERAL,
EMB_DOC.PARAM
FROM
EMB,EMB_DOC,
(
     SELECT
     SAQUE_EMB_DOC_REL.EMB_REF,
     SAQUE_EMB_DOC_REL.SEQ_DOC,
     SUM(TOTAL_GERAL) TOTAL_GERAL
     FROM SAQUE_EMB_DOC_REL,
     (SELECT EMB_REF,
     DECODE(LANÇ,'TOTAL GERAL',EXP_CALC,0) TOTAL_GERAL
     FROM EMB_TOTALIZA) EMB_TOT
     WHERE
     SAQUE_EMB_DOC_REL.EMB_REL = EMB_TOT.EMB_REF (+)
     GROUP BY
     SAQUE_EMB_DOC_REL.EMB_REF,
     SAQUE_EMB_DOC_REL.SEQ_DOC
) EMB_TOT_EXP
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB_DOC.SEQ = EMB_TOT_EXP.SEQ_DOC(+) AND
EMB_DOC.EMB_REF = EMB_TOT_EXP.EMB_REF(+) AND
EMB_DOC.DOC='SAQUE EXP 2 VIAS'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view SAQUE_EXP_3_VIAS');
CREATE OR REPLACE VIEW SAQUE_EXP_3_VIAS AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ SEQ_DOC,
EMB.IDIOMA,
EMB.DATA_EMISSÃO_DOC,
EMB.MOEDA,
EMB.EXP,
EMB_TOT_EXP.TOTAL_GERAL,
EMB_DOC.PARAM
FROM
EMB,EMB_DOC,
(
     SELECT
     SAQUE_EMB_DOC_REL.EMB_REF,
     SAQUE_EMB_DOC_REL.SEQ_DOC,
     SUM(TOTAL_GERAL) TOTAL_GERAL
     FROM SAQUE_EMB_DOC_REL,
     (SELECT EMB_REF,
     DECODE(LANÇ,'TOTAL GERAL',EXP_CALC,0) TOTAL_GERAL
     FROM EMB_TOTALIZA) EMB_TOT
     WHERE
     SAQUE_EMB_DOC_REL.EMB_REL = EMB_TOT.EMB_REF (+)
     GROUP BY
     SAQUE_EMB_DOC_REL.EMB_REF,
     SAQUE_EMB_DOC_REL.SEQ_DOC
) EMB_TOT_EXP
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB_DOC.SEQ = EMB_TOT_EXP.SEQ_DOC(+) AND
EMB_DOC.EMB_REF = EMB_TOT_EXP.EMB_REF(+) AND
EMB_DOC.DOC='SAQUE EXP 3 VIAS'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view SAQUE_IMP_2_VIAS');
CREATE OR REPLACE VIEW SAQUE_IMP_2_VIAS AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ SEQ_DOC,
EMB.IDIOMA,
EMB.DATA_EMISSÃO_DOC,
EMB.MOEDA,
EMB.IMP,
EMB_TOT_IMP.TOTAL_GERAL,
EMB_DOC.PARAM
FROM
EMB, EMB_DOC,
(
     SELECT
     SAQUE_EMB_DOC_REL.EMB_REF,
     SAQUE_EMB_DOC_REL.SEQ_DOC,
     SUM(TOTAL_GERAL) TOTAL_GERAL
     FROM SAQUE_EMB_DOC_REL,
     (SELECT EMB_REF,
     DECODE(LANÇ,'TOTAL GERAL',IMP_CALC,0) TOTAL_GERAL
     FROM EMB_TOTALIZA) EMB_TOT
     WHERE
     SAQUE_EMB_DOC_REL.EMB_REL = EMB_TOT.EMB_REF (+)
     GROUP BY
     SAQUE_EMB_DOC_REL.EMB_REF,
     SAQUE_EMB_DOC_REL.SEQ_DOC
) EMB_TOT_IMP
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB_DOC.SEQ = EMB_TOT_IMP.SEQ_DOC(+) AND
EMB_DOC.EMB_REF = EMB_TOT_IMP.EMB_REF(+) AND
EMB_DOC.DOC='SAQUE IMP 2 VIAS'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view SAQUE_IMP_3_VIAS');
CREATE OR REPLACE VIEW SAQUE_IMP_3_VIAS AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ SEQ_DOC,
EMB.IDIOMA,
EMB.DATA_EMISSÃO_DOC,
EMB.MOEDA,
EMB.IMP,
EMB_TOT_IMP.TOTAL_GERAL,
EMB_DOC.PARAM
FROM
EMB, EMB_DOC,
(
     SELECT
     SAQUE_EMB_DOC_REL.EMB_REF,
     SAQUE_EMB_DOC_REL.SEQ_DOC,
     SUM(TOTAL_GERAL) TOTAL_GERAL
     FROM SAQUE_EMB_DOC_REL,
     (SELECT EMB_REF,
     DECODE(LANÇ,'TOTAL GERAL',IMP_CALC,0) TOTAL_GERAL
     FROM EMB_TOTALIZA) EMB_TOT
     WHERE
     SAQUE_EMB_DOC_REL.EMB_REL = EMB_TOT.EMB_REF (+)
     GROUP BY
     SAQUE_EMB_DOC_REL.EMB_REF,
     SAQUE_EMB_DOC_REL.SEQ_DOC
) EMB_TOT_IMP
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB_DOC.SEQ = EMB_TOT_IMP.SEQ_DOC(+) AND
EMB_DOC.EMB_REF = EMB_TOT_IMP.EMB_REF(+) AND
EMB_DOC.DOC='SAQUE IMP 3 VIAS'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view SAQUE_JUROS_EMB_DOC_REL');
CREATE OR REPLACE VIEW SAQUE_JUROS_EMB_DOC_REL AS
SELECT EMB_REF, Seq as SEQ_DOC , -1 AS Original , EMB_REF as Emb_Rel
FROM Emb_Doc
WHERE Doc like 'SAQUE DE JUROS %'
UNION SELECT EMB_REF, Doc, 0 AS Original, Emb_Rel
FROM Emb_Doc_Rel

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view SAQUE_JUROS_EXP_2_VIAS');
CREATE OR REPLACE VIEW SAQUE_JUROS_EXP_2_VIAS AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB.IDIOMA,
EMB.DATA_EMISSÃO_DOC,
EMB.MOEDA,
EMB_DOC.PARAM,
EMB.EXP,
EMB_JUROS.JUROS_EXP
FROM EMB_DOC, EMB,
(
     SELECT
       SAQUE_JUROS_EMB_DOC_REL.EMB_REF,
     SAQUE_JUROS_EMB_DOC_REL.SEQ_DOC,
     SUM(JUROS_EXP) JUROS_EXP
       FROM
     (SELECT EMB_REF,
     DECODE(LANÇ,'JUROS',EXP_CALC,0) JUROS_EXP
     FROM EMB_LANÇ) JUROS,
     SAQUE_JUROS_EMB_DOC_REL
     WHERE
     SAQUE_JUROS_EMB_DOC_REL.EMB_REL = JUROS.EMB_REF(+)
     GROUP BY
      SAQUE_JUROS_EMB_DOC_REL.EMB_REF,
     SAQUE_JUROS_EMB_DOC_REL.SEQ_DOC
) EMB_JUROS
WHERE
EMB_DOC.EMB_REF = EMB_JUROS.EMB_REF(+) AND
EMB_DOC.SEQ = EMB_JUROS.SEQ_DOC(+) AND
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB_DOC.DOC='SAQUE DE JUROS EXP 2 VIAS'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view SAQUE_JUROS_EXP_3_VIAS');
CREATE OR REPLACE VIEW SAQUE_JUROS_EXP_3_VIAS AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB.IDIOMA,
EMB.DATA_EMISSÃO_DOC,
EMB.MOEDA,
EMB_DOC.PARAM,
EMB.EXP,
EMB_JUROS.JUROS_EXP
FROM EMB_DOC, EMB,
(
     SELECT
       SAQUE_JUROS_EMB_DOC_REL.EMB_REF,
     SAQUE_JUROS_EMB_DOC_REL.SEQ_DOC,
     SUM(JUROS_EXP) JUROS_EXP
       FROM
     (SELECT EMB_REF,
     DECODE(LANÇ,'JUROS',EXP_CALC,0) JUROS_EXP
     FROM EMB_LANÇ) JUROS,
     SAQUE_JUROS_EMB_DOC_REL
     WHERE
     SAQUE_JUROS_EMB_DOC_REL.EMB_REL = JUROS.EMB_REF(+)
     GROUP BY
      SAQUE_JUROS_EMB_DOC_REL.EMB_REF,
     SAQUE_JUROS_EMB_DOC_REL.SEQ_DOC
) EMB_JUROS
WHERE
EMB_DOC.EMB_REF = EMB_JUROS.EMB_REF(+) AND
EMB_DOC.SEQ = EMB_JUROS.SEQ_DOC(+) AND
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB_DOC.DOC='SAQUE DE JUROS EXP 3 VIAS'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view SAQUE_JUROS_IMP_2_VIAS');
CREATE OR REPLACE VIEW SAQUE_JUROS_IMP_2_VIAS AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB.IDIOMA,
EMB.DATA_EMISSÃO_DOC,
EMB.MOEDA,
EMB_DOC.PARAM,
EMB.IMP,
EMB_JUROS.JUROS_IMP
FROM EMB_DOC, EMB,
(
     SELECT
       SAQUE_JUROS_EMB_DOC_REL.EMB_REF,
     SAQUE_JUROS_EMB_DOC_REL.SEQ_DOC,
     SUM(JUROS_IMP) JUROS_IMP
       FROM
     (SELECT EMB_REF,
     DECODE(LANÇ,'JUROS',IMP_CALC,0) JUROS_IMP
     FROM EMB_LANÇ) JUROS,
     SAQUE_JUROS_EMB_DOC_REL
     WHERE
     SAQUE_JUROS_EMB_DOC_REL.EMB_REL = JUROS.EMB_REF(+)
     GROUP BY
      SAQUE_JUROS_EMB_DOC_REL.EMB_REF,
     SAQUE_JUROS_EMB_DOC_REL.SEQ_DOC
) EMB_JUROS
WHERE
EMB_DOC.EMB_REF = EMB_JUROS.EMB_REF(+) AND
EMB_DOC.SEQ = EMB_JUROS.SEQ_DOC(+) AND
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB_DOC.DOC='SAQUE DE JUROS IMP 2 VIAS'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view SAQUE_JUROS_IMP_3_VIAS');
CREATE OR REPLACE VIEW SAQUE_JUROS_IMP_3_VIAS AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
EMB.IDIOMA,
EMB.DATA_EMISSÃO_DOC,
EMB.MOEDA,
EMB_DOC.PARAM,
EMB.IMP,
EMB_JUROS.JUROS_IMP
FROM EMB_DOC, EMB,
(
     SELECT
       SAQUE_JUROS_EMB_DOC_REL.EMB_REF,
     SAQUE_JUROS_EMB_DOC_REL.SEQ_DOC,
     SUM(JUROS_IMP) JUROS_IMP
       FROM
     (SELECT EMB_REF,
     DECODE(LANÇ,'JUROS',IMP_CALC,0) JUROS_IMP
     FROM EMB_LANÇ) JUROS,
     SAQUE_JUROS_EMB_DOC_REL
     WHERE
     SAQUE_JUROS_EMB_DOC_REL.EMB_REL = JUROS.EMB_REF(+)
     GROUP BY
      SAQUE_JUROS_EMB_DOC_REL.EMB_REF,
     SAQUE_JUROS_EMB_DOC_REL.SEQ_DOC
) EMB_JUROS
WHERE
EMB_DOC.EMB_REF = EMB_JUROS.EMB_REF(+) AND
EMB_DOC.SEQ = EMB_JUROS.SEQ_DOC(+) AND
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB_DOC.DOC='SAQUE DE JUROS IMP 3 VIAS'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view SOL_POS_CARGA');
CREATE OR REPLACE VIEW SOL_POS_CARGA AS
SELECT F.REF, P.POSICIONAMENTO_DATA, PC.PED_REF, PC.PED_ITEM, D.PORTO, P.ARMAZÉM, P.TERNO_NUM, P.OBS, IP.PROD, IP.PED_UNID, IP.P, IP.LOTE, IP.OV, IP.NE_ITEM, IP.TBN,IP.FSE, IP.PO, P.FLUXO, FC.QTD_PED_UNID FROM CXBH.Fech "F", CXBH.Viagem_Escala "D", CXBH.Prog "P", CXBH.Prog_Carga "PC", CXBH.ped_item "IP", CXBH.Ped, CXBH.fech_carga "FC"
WHERE P.POSICIONAMENTO_DATA Is Not Null AND F.VIAGEM_REF = D.VIAGEM_REF(+) AND F.DESCARGA_PORTO_ESCALA = D.ESCALA(+) AND F.REF = P.FECH_REF(+) AND PC.PED_REF = IP.PED_REF(+) AND PC.PED_ITEM = IP.ITEM(+) AND PC.PED_REF = PED.REF(+) AND PC.PED_ITEM = FC.PED_ITEM(+) AND  PC.FECH_REF = FC.FECH_REF(+) AND
PC.PED_REF = FC.PED_REF(+) AND P.POSICIONAMENTO_DATA = PC.POSICIONAMENTO_DATA(+) AND P.FECH_REF = PC.FECH_REF(+)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view TBS');
CREATE OR REPLACE VIEW TBS AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ AS SEQ_DOC,
BL.BL_NUM,
BL.BL_DATA,
SOMA_PESO.BL_SEQ,
SOMA_PESO.PESO_BRUTO,
FECH.FRETE_VALOR_POR_UNID,
EMB.PESO_UNID,
EMB.FRETE_COND,
EMB.DATA_EMISSÃO_DOC,
EMB.CARGA_PORTO,
EMB.DESCARGA_PORTO,
EMB.TRANSPORTADOR,
VIAGEM.NAVIO,
EMB.EMBARCADOR,
EMB.EMB_ENDEREÇO,
EMB.EMB_PAÍS,
EMB.CONSIGNATÁRIO,
EMB.CONSIGN_ENDEREÇO,
EMB.CONSIGN_PAÍS,
EMB.NOTIFICAR,
EMB.NOTIFICAR_ENDEREÇO,
EMB.NOTIFICAR_PAÍS,
EMB.MOEDA,
EMB.FRETE_VALOR_TOTAL,
EMB.MARCAÇÃO,
EMB_DOC.PARAM,
EMB.EMB_DATA,
EMB.IDIOMA,
EMB_TOT.FRETE_EXP,
EMB_TOT.FRETE_IMP
FROM FECH,VIAGEM, BL, EMB, EMB_DOC,
(
     SELECT
       EMB_REF,
     SUM(FRETE_EXP) FRETE_EXP,
     SUM(FRETE_IMP) FRETE_IMP
       FROM
     (SELECT EMB_REF,
     DECODE(LANÇ,'FRETE',EXP_CALC,0) FRETE_EXP,
     DECODE(LANÇ,'FRETE',IMP_CALC,0) FRETE_IMP
     FROM EMB_TOTALIZA)
     GROUP BY
     EMB_REF
) EMB_TOT,
(
     SELECT
     EMB_REF,
     BL_SEQ,
     VIAGEM_REF,
     FECH_REF,
     SUM(PESO_BRUTO) PESO_BRUTO
     FROM
     EMB_ITEM
     GROUP BY
     EMB_REF,
     BL_SEQ,
     VIAGEM_REF,
     FECH_REF
) SOMA_PESO
WHERE
EMB_DOC.EMB_REF = EMB_TOT.EMB_REF(+) AND
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB.REF = SOMA_PESO.EMB_REF(+) AND
SOMA_PESO.BL_SEQ = BL.SEQ(+) AND
SOMA_PESO.VIAGEM_REF = BL.VIAGEM_REF(+) AND
SOMA_PESO.VIAGEM_REF = VIAGEM.REF(+) AND
SOMA_PESO.FECH_REF = FECH.REF(+) AND
EMB_DOC.DOC='TBS'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view TBS_SUB');
CREATE OR REPLACE VIEW TBS_SUB AS
SELECT
EMB.REF,
EMB_DOC.SEQ AS SEQ_DOC,
ITEM.SEQ AS SEQ_ITEM,
ITEM.BL_SEQ,
ITEM.DESCR,
ITEM.QTD_VOL,
ITEM.PESO_LÍQUIDO,
ITEM.PESO_BRUTO,
ITEM.EXP_TOTAL_CALC,
ITEM.VIAGEM_REF,
EMB.PESO_UNID,
EMB_FAMÍLIA_GENÉRICA.FAMÍLIA,
EMB.MARCAÇÃO,
EMB.IDIOMA,
ITEM.EMBALAGEM,
EMB_DOC.PARAM,
EMB.TOTALIZAÇÃO_EMBALAGEM,
EMB.TIPO_DESCR_MERCADORIA,
BL.MSG
FROM EMB_DOC,BL_CARGA,EMB_FAMÍLIA_GENÉRICA,PED_ITEM,EMB,BL,
(
     SELECT
     EMB_REF,
     SEQ,
     BL_SEQ,
     PED_REF,
     PED_ITEM,
     DESCR,
     SUM(QTD_VOL) QTD_VOL,
     SUM(PESO_LÍQUIDO) PESO_LÍQUIDO,
     EXP_TOTAL_CALC,
     VIAGEM_REF,
     SUM(PESO_BRUTO) PESO_BRUTO,
     EMBALAGEM
     FROM
     EMB_ITEM
     GROUP BY
     EMB_REF,
     SEQ,
     BL_SEQ,
     DESCR,
     VIAGEM_REF,
     EXP_TOTAL_CALC,
     PED_REF,
     PED_ITEM,
     EMBALAGEM
) ITEM
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB.REF = ITEM.EMB_REF(+) AND
ITEM.PED_ITEM = BL_CARGA.PED_ITEM(+) AND
ITEM.BL_SEQ = BL_CARGA.BL_SEQ(+) AND
ITEM.VIAGEM_REF = BL_CARGA.VIAGEM_REF(+) AND
ITEM.PED_REF = BL_CARGA.PED_REF(+) AND
ITEM.VIAGEM_REF = BL.VIAGEM_REF(+) AND
ITEM.BL_SEQ = BL.SEQ(+) AND
ITEM.PED_REF = PED_ITEM.PED_REF(+) AND
ITEM.PED_ITEM = PED_ITEM.ITEM(+) AND
BL_CARGA.EMB_REF = EMB_FAMÍLIA_GENÉRICA.EMB_REF(+) AND
BL_CARGA.FAMÍLIA_GENÉRICA = EMB_FAMÍLIA_GENÉRICA.SEQ(+) AND
EMB_DOC.DOC='TBS'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view TESTE');
CREATE OR REPLACE VIEW TESTE AS
SELECT "COD","NOME","GRUPO","SYS_MOMENTO_CRIA","SYS_USUÁRIO_CRIA","SYS_LOCAL_CRIA","SYS_MOMENTO_ATUALIZA","SYS_USUÁRIO_ATUALIZA","SYS_LOCAL_ATUALIZA","SYS_STATUS" FROM PRODUTO

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view VALIDA_NOMEA_CSN');
CREATE OR REPLACE VIEW VALIDA_NOMEA_CSN AS
SELECT F.REF, FC.CHAVE, PI.PED_REF, PI.ITEM
     FROM CXBH.FAX "F", CXBH.FAX_CHAVE "FC", CXBH.FECH_CARGA "FE", CXBH.PED_ITEM "PI"
     WHERE
          F.REF = FC.FAX_REF(+)  AND
          FC.CHAVE = FE.FECH_REF(+) AND
          FE.PED_REF = PI.PED_REF(+) AND
          FE.PED_ITEM = PI.ITEM(+)  AND
          PI.OV IS NULL

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view VALIDA_NOMEA_NAV_FALTA');
CREATE OR REPLACE VIEW VALIDA_NOMEA_NAV_FALTA AS
SELECT "FAX","NAVIO","TEM_NULO" FROM
(SELECT F.REF FAX, N.COD NAVIO, SUBSTR(
   DECODE(N.ESCOTILHA_FECHAM_TIPO, NULL, ' : Hatches (Closing System)','') ||
   DECODE(N.ESCOTILHA_DIMENSÃO, NULL, ' : Hatches Dimensions','') ||
   DECODE(N.GUINDASTE_DIMENSÃO, NULL, ' : Holds Dimensions', '') ||
   DECODE(N.TANKTOP_STRENGTH, NULL, ' : Tanktop Strenght', ''), 4) TEM_NULO
FROM FAX F, FAX_CHAVE FC, FECH FC, VIAGEM V, NAVIO N
WHERE      F.REF = FC.FAX_REF (+) AND
   FC.CHAVE = FC.REF (+) AND
   FC.VIAGEM_REF = V.REF (+) AND
   V.NAVIO = N.COD ) C
WHERE NOT C.TEM_NULO IS NULL

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view VIAGEM_SEL');
CREATE OR REPLACE VIEW VIAGEM_SEL AS
SELECT "REF" FROM
(
        SELECT REF
        FROM VIAGEM V, VIAGEM_ESCALA VE
        WHERE V.REF = VE.VIAGEM_REF (+) GROUP BY V.REF
        HAVING MAX(VE.ETA) < TO_DATE('01/01/1998')
)

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view WEIGHT_CERTIFICATE_EXP');
CREATE OR REPLACE VIEW WEIGHT_CERTIFICATE_EXP AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ SEQ_DOC,
ITEM.SEQ SEQ_ITEM,
ITEM.QTD_VOL,
ITEM.DESCR,
ITEM.PESO_LÍQUIDO,
ITEM.PESO_BRUTO,
ITEM.EMBALAGEM,
EMB.TIPO_DESCR_MERCADORIA,
EMB.DATA_EMISSÃO_DOC,
EMB.EXP,
EMB.EXP_ENDEREÇO,
EMB.EXP_PAÍS,
EMB.IMP,
EMB.IMP_ENDEREÇO,
EMB.IMP_PAÍS,
EMB.TRANSPORTADOR,
EMB.CARGA_PORTO,
EMB.DESCARGA_PORTO,
EMB.MARCAÇÃO,
EMB.IDIOMA,
EMB.PESO_UNID,
EMB_DOC.PARAM,
EMB_FAMÍLIA_GENÉRICA.FAMÍLIA AS FAMÍLIA_GENÉRICA,
CIA.LOGOTIPO,
PARAM.FATURA_EXP FAT
FROM EMB_DOC, EMB, BL_CARGA,CIA,EMB_FAMÍLIA_GENÉRICA,
(
     SELECT
     REF,
     FAT_EXP.FATURA_EXP
     FROM
     EMB_PARAM,
     (SELECT EMB_REF, PARAM AS FATURA_EXP FROM EMB_DOC WHERE DOC = 'FATURA EXP') FAT_EXP
     WHERE
     EMB_PARAM.REF = FAT_EXP.EMB_REF(+)
     GROUP BY
     REF,
     FAT_EXP.FATURA_EXP
) PARAM,
(
     SELECT
     EMB_REF,
     SEQ,
     SUM(QTD_VOL) QTD_VOL,
     SUM(PESO_LÍQUIDO) PESO_LÍQUIDO,
     SUM(PESO_BRUTO) PESO_BRUTO,
     DESCR,
     BL_SEQ,
     VIAGEM_REF,
     PED_REF,
     PED_ITEM,
     EMBALAGEM
     FROM
     EMB_ITEM
     GROUP BY
     EMB_REF,
     SEQ,
     DESCR,
     BL_SEQ,
     VIAGEM_REF,
     PED_REF,
     PED_ITEM,
     EMBALAGEM
) ITEM
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB.REF = PARAM.REF(+) AND
EMB.REF = ITEM.EMB_REF(+) AND
ITEM.BL_SEQ = BL_CARGA.BL_SEQ(+) AND
ITEM.VIAGEM_REF = BL_CARGA.VIAGEM_REF(+) AND
ITEM.PED_ITEM = BL_CARGA.PED_ITEM(+) AND
ITEM.PED_REF = BL_CARGA.PED_REF(+) AND
EMB.EXP_LOGOTIPO = CIA.COD(+) AND
BL_CARGA.FAMÍLIA_GENÉRICA = EMB_FAMÍLIA_GENÉRICA.SEQ(+) AND
BL_CARGA.EMB_REF = EMB_FAMÍLIA_GENÉRICA.EMB_REF(+) AND
EMB_DOC.DOC='WEIGHT CERTIFICATE EXP'

/

EXEC DBMS_OUTPUT.PUT_LINE('--> view WEIGHT_CERTIFICATE_IMP');
CREATE OR REPLACE VIEW WEIGHT_CERTIFICATE_IMP AS
SELECT
EMB_DOC.EMB_REF,
EMB_DOC.SEQ SEQ_DOC,
ITEM.SEQ SEQ_ITEM,
ITEM.QTD_VOL,
ITEM.DESCR,
ITEM.PESO_LÍQUIDO,
ITEM.PESO_BRUTO,
ITEM.EMBALAGEM,
EMB.TIPO_DESCR_MERCADORIA,
EMB.DATA_EMISSÃO_DOC,
EMB.PAGADOR,
EMB.PAG_ENDEREÇO,
EMB.PAG_PAÍS,
EMB.IMP,
EMB.IMP_ENDEREÇO,
EMB.IMP_PAÍS,
EMB.TRANSPORTADOR,
EMB.CARGA_PORTO,
EMB.DESCARGA_PORTO,
EMB.MARCAÇÃO,
EMB.IDIOMA,
EMB.PESO_UNID,
EMB_DOC.PARAM,
EMB_FAMÍLIA_GENÉRICA.FAMÍLIA AS FAMÍLIA_GENÉRICA,
CIA.LOGOTIPO,
PARAM.FATURA_IMP FAT
FROM EMB_DOC, EMB, BL_CARGA,CIA,EMB_FAMÍLIA_GENÉRICA,
(
     SELECT
     REF,
     FAT_IMP.FATURA_IMP
     FROM
     EMB_PARAM,
     (SELECT EMB_REF, PARAM AS FATURA_IMP FROM EMB_DOC WHERE DOC = 'FATURA IMP') FAT_IMP
     WHERE
     EMB_PARAM.REF = FAT_IMP.EMB_REF(+)
     GROUP BY
     REF,
     FAT_IMP.FATURA_IMP
) PARAM,
(
     SELECT
     EMB_REF,
     SEQ,
     SUM(QTD_VOL) QTD_VOL,
     SUM(PESO_LÍQUIDO) PESO_LÍQUIDO,
     SUM(PESO_BRUTO) PESO_BRUTO,
     DESCR,
     BL_SEQ,
     VIAGEM_REF,
     PED_REF,
     PED_ITEM,
     EMBALAGEM
     FROM
     EMB_ITEM
     GROUP BY
     EMB_REF,
     SEQ,
     DESCR,
     BL_SEQ,
     VIAGEM_REF,
     PED_REF,
     PED_ITEM,
     EMBALAGEM
) ITEM
WHERE
EMB_DOC.EMB_REF = EMB.REF(+) AND
EMB.REF = PARAM.REF(+) AND
EMB.REF = ITEM.EMB_REF(+) AND
ITEM.BL_SEQ = BL_CARGA.BL_SEQ(+) AND
ITEM.VIAGEM_REF = BL_CARGA.VIAGEM_REF(+) AND
ITEM.PED_ITEM = BL_CARGA.PED_ITEM(+) AND
ITEM.PED_REF = BL_CARGA.PED_REF(+) AND
EMB.IMP_LOGOTIPO = CIA.COD(+) AND
BL_CARGA.FAMÍLIA_GENÉRICA = EMB_FAMÍLIA_GENÉRICA.SEQ(+) AND
BL_CARGA.EMB_REF = EMB_FAMÍLIA_GENÉRICA.EMB_REF(+) AND
EMB_DOC.DOC='WEIGHT CERTIFICATE IMP'

/

