-------------------------------------------------------------------------------------
-- CRIAÇÃO DE SCRIPT PARA REGERAR RESTRIÇÕES DE CHAVE PRIMÁRIA, RELACIONAMENTOS E TRIGGERS DE ICFT
-------------------------------------------------------------------------------------
DECLARE
        CURSOR RESTR IS SELECT TABLE_NAME, CONSTRAINT_NAME FROM USER_CONSTRAINTS WHERE OWNER = 'ICFT' ORDER BY DECODE(CONSTRAINT_TYPE,'P', 3, 'R', 2, 1);
        SQLCURSOR PLS_INTEGER;
BEGIN
        SQLCURSOR := DBMS_SQL.OPEN_CURSOR;
        FOR CUR IN RESTR LOOP
                BEGIN
                        DBMS_SQL.PARSE(SQLCURSOR, 'ALTER TABLE ICFT.' || CUR.TABLE_NAME || ' DROP CONSTRAINT ' || CUR.CONSTRAINT_NAME, DBMS_SQL.V7);
                EXCEPTION
                        WHEN OTHERS THEN
                                NULL;
                END;
        END LOOP;
        DBMS_SQL.CLOSE_CURSOR(SQLCURSOR);
END;
/

ALTER TABLE ICFT.CD ADD CONSTRAINT ID_CD
PRIMARY KEY (ID);

ALTER TABLE ICFT.CLASSE ADD CONSTRAINT ID_CLASSE
PRIMARY KEY (NOME);

ALTER TABLE ICFT.CLASSIF ADD CONSTRAINT ID_CSIF
PRIMARY KEY (CONTA, CLASSE);

ALTER TABLE ICFT.CLIENTE ADD CONSTRAINT ID_CLIENTE
PRIMARY KEY (NOME);

ALTER TABLE ICFT.COBRARQ ADD CONSTRAINT ID_COBRARQ
PRIMARY KEY (SEU_NUM);

ALTER TABLE ICFT.CONJ_IMPRESS ADD CONSTRAINT ID_CONJ_IMPRESS
PRIMARY KEY (DEFINIÇÃO, DEFINIÇÃO_SEQ, ITEM);

ALTER TABLE ICFT.CONJ_REL ADD CONSTRAINT ID_CONJ_REL
PRIMARY KEY (DEFINIÇÃO, SEQ);

ALTER TABLE ICFT.CONTA ADD CONSTRAINT ID_CONTA
PRIMARY KEY (CONTA);

ALTER TABLE ICFT.CONTATO ADD CONSTRAINT ID_CONTATO
PRIMARY KEY (SEQ);

ALTER TABLE ICFT.CONTRATO ADD CONSTRAINT ID_CONTRATO
PRIMARY KEY (REF, ADITIVO);

ALTER TABLE ICFT.CONTRATO_FIN ADD CONSTRAINT ID_CONTRATO_FIN
PRIMARY KEY (REF, ADITIVO);

ALTER TABLE ICFT.CONTROLE ADD CONSTRAINT ID_CONTROLE
PRIMARY KEY (CONTA, CONTROLE);

ALTER TABLE ICFT.CRONO_NOTIF ADD CONSTRAINT ID_CRONO_NOTIF
PRIMARY KEY (CRONO_SEQ, ITEM);

ALTER TABLE ICFT.CRONOGRAMA ADD CONSTRAINT ID_CRONO
PRIMARY KEY (SEQ);

ALTER TABLE ICFT.DEPTO ADD CONSTRAINT ID_DEPTO
PRIMARY KEY (CLIENTE, DEPTO);

ALTER TABLE ICFT.DESC_S_PROG ADD CONSTRAINT ID_DESC_S_PROG
PRIMARY KEY (SEQ);

ALTER TABLE ICFT.DISTRIB_CUSTO_RECEITA ADD CONSTRAINT ID_DISTR_CUSTO_REC
PRIMARY KEY (CONTA, CENTRO_CUSTO, CENTRO_RECEITA);

ALTER TABLE ICFT.DISTRIB_FUNCIL_RECEITA ADD CONSTRAINT ID_DISTR_FUNCIL_REC
PRIMARY KEY (CONTA, FUNCIL, CENTRO_RECEITA);

ALTER TABLE ICFT.ESCALA ADD CONSTRAINT ID_ESCALA
PRIMARY KEY (SEQ);

ALTER TABLE ICFT.ESCALA_TIPO ADD CONSTRAINT ID_ESCALA_TIPO
PRIMARY KEY (TIPO);

ALTER TABLE ICFT.GRUPO ADD CONSTRAINT ID_GRUPO
PRIMARY KEY (CLIENTE, GRUPO);

ALTER TABLE ICFT.HIERARQUIA ADD CONSTRAINT ID_HIERARQ
PRIMARY KEY (CLIENTE, CLASSIF);

ALTER TABLE ICFT.IDENTIF ADD CONSTRAINT ID_IDENTIF
PRIMARY KEY (CLIENTE, USUÁRIO, TIPO_IDENTIF, IDENTIF);

ALTER TABLE ICFT.IP ADD CONSTRAINT ID_IP
PRIMARY KEY (CLIENTE, MÁQUINA, REDE_CLIENTE, REDE_IDENTIF, IP);

ALTER TABLE ICFT.LICENÇA ADD CONSTRAINT ID_LICENÇA
PRIMARY KEY (SEQ);

ALTER TABLE ICFT.MÁQUINA ADD CONSTRAINT ID_MÁQUINA
PRIMARY KEY (CLIENTE, MÁQUINA);

ALTER TABLE ICFT.MÁQUINA_RECURSO ADD CONSTRAINT ID_MÁQ_REC
PRIMARY KEY (CLIENTE, MÁQUINA, RECURSO);

ALTER TABLE ICFT.MEMO ADD CONSTRAINT ID_MEMO
PRIMARY KEY (SEQ);

ALTER TABLE ICFT.MEMO_SITUAÇÃO ADD CONSTRAINT ID_MEMO_SITUAÇÃO
PRIMARY KEY (SITUAÇÃO);

ALTER TABLE ICFT.MEMO_TIPO ADD CONSTRAINT ID_MEMO_TIPO
PRIMARY KEY (TIPO);

ALTER TABLE ICFT.MOVIMENTO ADD CONSTRAINT ID_MOV
PRIMARY KEY (CONTA, SEQ);

ALTER TABLE ICFT.PATCH ADD CONSTRAINT ID_PATCH
PRIMARY KEY (CLIENTE, PATCH);

ALTER TABLE ICFT.PLANO ADD CONSTRAINT ID_PLANO
PRIMARY KEY (COD);

ALTER TABLE ICFT.PONTO ADD CONSTRAINT ID_PONTO
PRIMARY KEY (CLIENTE, PATCH, PONTO);

ALTER TABLE ICFT.PROJETO ADD CONSTRAINT ID_PROJETO
PRIMARY KEY (CLIENTE, PROJETO);

ALTER TABLE ICFT.REALIZADO ADD CONSTRAINT ID_REAL
PRIMARY KEY (SEQ);

ALTER TABLE ICFT.RECURSO ADD CONSTRAINT ID_RECURSO
PRIMARY KEY (RECURSO);

ALTER TABLE ICFT.REDE ADD CONSTRAINT ID_REDE
PRIMARY KEY (CLIENTE, REDE);

ALTER TABLE ICFT.SERVIÇO ADD CONSTRAINT ID_SERVIÇO
PRIMARY KEY (CLIENTE, SERVIÇO);

ALTER TABLE ICFT.SYS_CAD_LOG ADD CONSTRAINT ID_CAD_LOG
PRIMARY KEY (SEQ);

ALTER TABLE ICFT.SYS_CONFIG_GLOBAL ADD CONSTRAINT ID_CONFIG_GLOBAL
PRIMARY KEY (PARAM);

ALTER TABLE ICFT.SYS_DELETE ADD CONSTRAINT ID_DELETE
PRIMARY KEY (NOME_TABELA, CHAVE);

ALTER TABLE ICFT.SYS_LOCALID ADD CONSTRAINT ID_SYS_LOCAL
PRIMARY KEY (NOME);

ALTER TABLE ICFT.SYS_OCORRÊNCIA ADD CONSTRAINT ID_OCORRÊNCIA
PRIMARY KEY (SEQ);

ALTER TABLE ICFT.SYS_TABELA ADD CONSTRAINT ID_SYS_TABELA
PRIMARY KEY (NOME);

ALTER TABLE ICFT.SYS_USUÁRIO ADD CONSTRAINT ID_SYS_USU
PRIMARY KEY (USUÁRIO);

ALTER TABLE ICFT.TABELA_SÓCIO ADD CONSTRAINT ID_TAB_SÓCIO
PRIMARY KEY (PERÍODO, SÓCIO);

ALTER TABLE ICFT.TAREFA_DEF ADD CONSTRAINT ID_TAR_DEF
PRIMARY KEY (TAREFA);

ALTER TABLE ICFT.TÉCNICO ADD CONSTRAINT ID_TÉCNICO
PRIMARY KEY (TÉCNICO);

ALTER TABLE ICFT.TÉCNICO_MENU ADD CONSTRAINT ID_TÉCNICO_MENU
PRIMARY KEY (TÉCNICO, SEQ);

ALTER TABLE ICFT.TIPO_DOC ADD CONSTRAINT ID_TIPO_DOC
PRIMARY KEY (TIPO);

ALTER TABLE ICFT.TIPO_IDENTIF ADD CONSTRAINT ID_TIPO_ID
PRIMARY KEY (TIPO);

ALTER TABLE ICFT.TIPO_RECURSO ADD CONSTRAINT ID_TIPO_REC
PRIMARY KEY (TIPO);

ALTER TABLE ICFT.TIPO_SERVIÇO ADD CONSTRAINT ID_TIPO_SERV
PRIMARY KEY (TIPO);

ALTER TABLE ICFT.TIPO_TAREFA ADD CONSTRAINT ID_TIPO_TAR
PRIMARY KEY (TIPO);

ALTER TABLE ICFT.TRANSAÇÃO ADD CONSTRAINT ID_TRANSAÇÃO
PRIMARY KEY (SEQ);

ALTER TABLE ICFT.USUÁRIO ADD CONSTRAINT ID_USUÁRIO
PRIMARY KEY (CLIENTE, USUÁRIO);

ALTER TABLE ICFT.CD ADD CONSTRAINT CLASSE$CD$01
FOREIGN KEY (CLASSE) REFERENCES ICFT.CLASSE (NOME);

ALTER TABLE ICFT.CONTRATO ADD CONSTRAINT CLIENTE$CONTRATO$01
FOREIGN KEY (CLIENTE) REFERENCES ICFT.CLIENTE (NOME);

ALTER TABLE ICFT.DEPTO ADD CONSTRAINT CLIENTE$DEPTO$01
FOREIGN KEY (CLIENTE) REFERENCES ICFT.CLIENTE (NOME);

ALTER TABLE ICFT.GRUPO ADD CONSTRAINT CLIENTE$GRUPO$01
FOREIGN KEY (CLIENTE) REFERENCES ICFT.CLIENTE (NOME);

ALTER TABLE ICFT.MÁQUINA ADD CONSTRAINT CLIENTE$MÁQUINA$01
FOREIGN KEY (CLIENTE) REFERENCES ICFT.CLIENTE (NOME);

ALTER TABLE ICFT.PATCH ADD CONSTRAINT CLIENTE$PATCH$01
FOREIGN KEY (CLIENTE) REFERENCES ICFT.CLIENTE (NOME);

ALTER TABLE ICFT.PROJETO ADD CONSTRAINT CLIENTE$PROJETO$01
FOREIGN KEY (CLIENTE) REFERENCES ICFT.CLIENTE (NOME);

ALTER TABLE ICFT.REALIZADO ADD CONSTRAINT CLIENTE$REAL$01
FOREIGN KEY (CLIENTE) REFERENCES ICFT.CLIENTE (NOME);

ALTER TABLE ICFT.REDE ADD CONSTRAINT CLIENTE$REDE$01
FOREIGN KEY (CLIENTE) REFERENCES ICFT.CLIENTE (NOME);

ALTER TABLE ICFT.SERVIÇO ADD CONSTRAINT CLIENTE$SERVIÇO$01
FOREIGN KEY (CLIENTE) REFERENCES ICFT.CLIENTE (NOME);

ALTER TABLE ICFT.USUÁRIO ADD CONSTRAINT CLIENTE$USUÁRIO$01
FOREIGN KEY (CLIENTE) REFERENCES ICFT.CLIENTE (NOME);

ALTER TABLE ICFT.CONJ_IMPRESS ADD CONSTRAINT CONJ_REL$CONJ_IMPRESS$01
FOREIGN KEY (DEFINIÇÃO, DEFINIÇÃO_SEQ) REFERENCES ICFT.CONJ_REL (DEFINIÇÃO, SEQ);

ALTER TABLE ICFT.CLASSIF ADD CONSTRAINT CONTA$CSIF$01
FOREIGN KEY (CONTA) REFERENCES ICFT.CONTA (CONTA);

ALTER TABLE ICFT.CONTRATO_FIN ADD CONSTRAINT CONTRATO$CONTRATO_FIN$01
FOREIGN KEY (REF, ADITIVO) REFERENCES ICFT.CONTRATO (REF, ADITIVO);

ALTER TABLE ICFT.MOVIMENTO ADD CONSTRAINT CONTROLE_MOVIMENTO$01
FOREIGN KEY (CONTA, CONTROLE) REFERENCES ICFT.CONTROLE (CONTA, CONTROLE);

ALTER TABLE ICFT.CRONOGRAMA ADD CONSTRAINT CRONO$CRONO$01
FOREIGN KEY (SUPERSEQ) REFERENCES ICFT.CRONOGRAMA (SEQ);

ALTER TABLE ICFT.CONTRATO_FIN ADD CONSTRAINT CSIF$CONTRATO_FIN$01
FOREIGN KEY (CONTA_CONTAB, CLASSIF_CONTAB) REFERENCES ICFT.CLASSIF (CONTA, CLASSE);

ALTER TABLE ICFT.MOVIMENTO ADD CONSTRAINT CSIF$MOV$01
FOREIGN KEY (CONTA, CLASSE) REFERENCES ICFT.CLASSIF (CONTA, CLASSE);

ALTER TABLE ICFT.REALIZADO ADD CONSTRAINT DEPTO$REAL$01
FOREIGN KEY (CLIENTE, DEPTO) REFERENCES ICFT.DEPTO (CLIENTE, DEPTO);

ALTER TABLE ICFT.USUÁRIO ADD CONSTRAINT DEPTO$USUÁRIO$01
FOREIGN KEY (CLIENTE, DEPTO) REFERENCES ICFT.DEPTO (CLIENTE, DEPTO);

ALTER TABLE ICFT.ESCALA ADD CONSTRAINT ESCALA_TIPO$ESCALA$01
FOREIGN KEY (TIPO) REFERENCES ICFT.ESCALA_TIPO (TIPO);

ALTER TABLE ICFT.GRUPO ADD CONSTRAINT GRUPO$GRUPO$01
FOREIGN KEY (CLIENTE, SUPERGRUPO) REFERENCES ICFT.GRUPO (CLIENTE, GRUPO);

ALTER TABLE ICFT.PROJETO ADD CONSTRAINT GRUPO$PROJETO$01
FOREIGN KEY (CLIENTE, GRUPO) REFERENCES ICFT.GRUPO (CLIENTE, GRUPO);

ALTER TABLE ICFT.IP ADD CONSTRAINT MÁQUINA$IP$01
FOREIGN KEY (CLIENTE, MÁQUINA) REFERENCES ICFT.MÁQUINA (CLIENTE, MÁQUINA);

ALTER TABLE ICFT.MÁQUINA_RECURSO ADD CONSTRAINT MÁQUINA$MÁQ_REC$01
FOREIGN KEY (CLIENTE, MÁQUINA) REFERENCES ICFT.MÁQUINA (CLIENTE, MÁQUINA);

ALTER TABLE ICFT.MEMO ADD CONSTRAINT MEMO_SITUAÇÃO$MEMO$01
FOREIGN KEY (SITUAÇÃO) REFERENCES ICFT.MEMO_SITUAÇÃO (SITUAÇÃO);

ALTER TABLE ICFT.MEMO ADD CONSTRAINT MEMO_TIPO$MEMO$01
FOREIGN KEY (TIPO) REFERENCES ICFT.MEMO_TIPO (TIPO);

ALTER TABLE ICFT.MOVIMENTO ADD CONSTRAINT MOV$MOV$01
FOREIGN KEY (VINC_CONTA, VINC_SEQ) REFERENCES ICFT.MOVIMENTO (CONTA, SEQ);

ALTER TABLE ICFT.PONTO ADD CONSTRAINT PATCH$PONTO$01
FOREIGN KEY (CLIENTE, PATCH) REFERENCES ICFT.PATCH (CLIENTE, PATCH);

ALTER TABLE ICFT.CRONOGRAMA ADD CONSTRAINT PROJETO$CRONO$01
FOREIGN KEY (CLIENTE, PROJETO) REFERENCES ICFT.PROJETO (CLIENTE, PROJETO);

ALTER TABLE ICFT.REALIZADO ADD CONSTRAINT PROJETO$REAL$01
FOREIGN KEY (CLIENTE, PROJETO) REFERENCES ICFT.PROJETO (CLIENTE, PROJETO);

ALTER TABLE ICFT.MÁQUINA_RECURSO ADD CONSTRAINT RECURSO$MÁQ_REC$01
FOREIGN KEY (RECURSO) REFERENCES ICFT.RECURSO (RECURSO);

ALTER TABLE ICFT.IP ADD CONSTRAINT REDE$IP$01
FOREIGN KEY (REDE_CLIENTE, REDE_IDENTIF) REFERENCES ICFT.REDE (CLIENTE, REDE);

ALTER TABLE ICFT.PROJETO ADD CONSTRAINT TÉCNICO$PROJETO$01
FOREIGN KEY (DESENVOLVEDOR) REFERENCES ICFT.TÉCNICO (TÉCNICO);

ALTER TABLE ICFT.PROJETO ADD CONSTRAINT TÉCNICO$PROJETO$02
FOREIGN KEY (SUPORTE) REFERENCES ICFT.TÉCNICO (TÉCNICO);

ALTER TABLE ICFT.PROJETO ADD CONSTRAINT TÉCNICO$PROJETO$03
FOREIGN KEY (DESENVOLVEDOR2) REFERENCES ICFT.TÉCNICO (TÉCNICO);

ALTER TABLE ICFT.PROJETO ADD CONSTRAINT TÉCNICO$PROJETO$04
FOREIGN KEY (SUPORTE2) REFERENCES ICFT.TÉCNICO (TÉCNICO);

ALTER TABLE ICFT.REALIZADO ADD CONSTRAINT TÉCNICO$REAL$01
FOREIGN KEY (TÉCNICO) REFERENCES ICFT.TÉCNICO (TÉCNICO);

ALTER TABLE ICFT.SERVIÇO ADD CONSTRAINT TÉCNICO$SERVIÇO$01
FOREIGN KEY (DESENVOLVEDOR) REFERENCES ICFT.TÉCNICO (TÉCNICO);

ALTER TABLE ICFT.SERVIÇO ADD CONSTRAINT TÉCNICO$SERVIÇO$02
FOREIGN KEY (SUPORTE) REFERENCES ICFT.TÉCNICO (TÉCNICO);

ALTER TABLE ICFT.TÉCNICO_MENU ADD CONSTRAINT TÉCNICO$TÉCNICO_MENU$01
FOREIGN KEY (TÉCNICO) REFERENCES ICFT.TÉCNICO (TÉCNICO);

ALTER TABLE ICFT.ESCALA ADD CONSTRAINT TÉCNICO_ESCALA$01
FOREIGN KEY (TÉCNICO) REFERENCES ICFT.TÉCNICO (TÉCNICO);

ALTER TABLE ICFT.IDENTIF ADD CONSTRAINT TIPO_ID$IDENTIF$01
FOREIGN KEY (TIPO_IDENTIF) REFERENCES ICFT.TIPO_IDENTIF (TIPO);

ALTER TABLE ICFT.RECURSO ADD CONSTRAINT TIPO_REC$RECURSO$01
FOREIGN KEY (TIPO) REFERENCES ICFT.TIPO_RECURSO (TIPO);

ALTER TABLE ICFT.SERVIÇO ADD CONSTRAINT TIPO_SERV$SERVIÇO$01
FOREIGN KEY (TIPO) REFERENCES ICFT.TIPO_SERVIÇO (TIPO);

ALTER TABLE ICFT.REALIZADO ADD CONSTRAINT TIPO_TAR$REAL$01
FOREIGN KEY (TIPO) REFERENCES ICFT.TIPO_TAREFA (TIPO);

ALTER TABLE ICFT.IDENTIF ADD CONSTRAINT USUÁRIO$IDENTIF$01
FOREIGN KEY (CLIENTE, USUÁRIO) REFERENCES ICFT.USUÁRIO (CLIENTE, USUÁRIO);

ALTER TABLE ICFT.MÁQUINA ADD CONSTRAINT USUÁRIO$MÁQUINA$01
FOREIGN KEY (CLIENTE, USUÁRIO) REFERENCES ICFT.USUÁRIO (CLIENTE, USUÁRIO);

ALTER TABLE ICFT.REALIZADO ADD CONSTRAINT USUÁRIO$REAL$01
FOREIGN KEY (CLIENTE, USUÁRIO) REFERENCES ICFT.USUÁRIO (CLIENTE, USUÁRIO);

CREATE OR REPLACE TRIGGER BEF_CD BEFORE UPDATE OR INSERT OR DELETE ON ICFT.CD FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'CD' AND CHAVE = :OLD.ID;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('CD', :OLD.ID, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'CD' AND CHAVE = :OLD.ID;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_CLASSE BEFORE UPDATE OR INSERT OR DELETE ON ICFT.CLASSE FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'CLASSE' AND CHAVE = :OLD.NOME;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('CLASSE', :OLD.NOME, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'CLASSE' AND CHAVE = :OLD.NOME;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_CSIF BEFORE UPDATE OR INSERT OR DELETE ON ICFT.CLASSIF FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'CLASSIF' AND CHAVE = :OLD.CONTA || :OLD.CLASSE;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('CLASSIF', :OLD.CONTA || :OLD.CLASSE, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'CLASSIF' AND CHAVE = :OLD.CONTA || :OLD.CLASSE;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_CLIENTE BEFORE UPDATE OR INSERT OR DELETE ON ICFT.CLIENTE FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'CLIENTE' AND CHAVE = :OLD.NOME;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('CLIENTE', :OLD.NOME, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'CLIENTE' AND CHAVE = :OLD.NOME;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_COBRARQ BEFORE UPDATE OR INSERT OR DELETE ON ICFT.COBRARQ FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'COBRARQ' AND CHAVE = :OLD.SEU_NUM;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('COBRARQ', :OLD.SEU_NUM, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'COBRARQ' AND CHAVE = :OLD.SEU_NUM;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_CONJ_IMPRESS BEFORE UPDATE OR INSERT OR DELETE ON ICFT.CONJ_IMPRESS FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'CONJ_IMPRESS' AND CHAVE = :OLD.DEFINIÇÃO || :OLD.DEFINIÇÃO_SEQ || :OLD.ITEM;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('CONJ_IMPRESS', :OLD.DEFINIÇÃO || :OLD.DEFINIÇÃO_SEQ || :OLD.ITEM, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'CONJ_IMPRESS' AND CHAVE = :OLD.DEFINIÇÃO || :OLD.DEFINIÇÃO_SEQ || :OLD.ITEM;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_CONJ_REL BEFORE UPDATE OR INSERT OR DELETE ON ICFT.CONJ_REL FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'CONJ_REL' AND CHAVE = :OLD.DEFINIÇÃO || :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('CONJ_REL', :OLD.DEFINIÇÃO || :OLD.SEQ, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'CONJ_REL' AND CHAVE = :OLD.DEFINIÇÃO || :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_CONTA BEFORE UPDATE OR INSERT OR DELETE ON ICFT.CONTA FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'CONTA' AND CHAVE = :OLD.CONTA;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('CONTA', :OLD.CONTA, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'CONTA' AND CHAVE = :OLD.CONTA;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_CONTATO BEFORE UPDATE OR INSERT OR DELETE ON ICFT.CONTATO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'CONTATO' AND CHAVE = :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('CONTATO', :OLD.SEQ, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'CONTATO' AND CHAVE = :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_CONTRATO BEFORE UPDATE OR INSERT OR DELETE ON ICFT.CONTRATO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'CONTRATO' AND CHAVE = :OLD.REF || :OLD.ADITIVO;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('CONTRATO', :OLD.REF || :OLD.ADITIVO, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'CONTRATO' AND CHAVE = :OLD.REF || :OLD.ADITIVO;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_CONTRATO_FIN BEFORE UPDATE OR INSERT OR DELETE ON ICFT.CONTRATO_FIN FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'CONTRATO_FIN' AND CHAVE = :OLD.REF || :OLD.ADITIVO;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('CONTRATO_FIN', :OLD.REF || :OLD.ADITIVO, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'CONTRATO_FIN' AND CHAVE = :OLD.REF || :OLD.ADITIVO;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_CONTROLE BEFORE UPDATE OR INSERT OR DELETE ON ICFT.CONTROLE FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'CONTROLE' AND CHAVE = :OLD.CONTA || :OLD.CONTROLE;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('CONTROLE', :OLD.CONTA || :OLD.CONTROLE, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'CONTROLE' AND CHAVE = :OLD.CONTA || :OLD.CONTROLE;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_CRONO_NOTIF BEFORE UPDATE OR INSERT OR DELETE ON ICFT.CRONO_NOTIF FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'CRONO_NOTIF' AND CHAVE = :OLD.CRONO_SEQ || :OLD.ITEM;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('CRONO_NOTIF', :OLD.CRONO_SEQ || :OLD.ITEM, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'CRONO_NOTIF' AND CHAVE = :OLD.CRONO_SEQ || :OLD.ITEM;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_CRONO BEFORE UPDATE OR INSERT OR DELETE ON ICFT.CRONOGRAMA FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'CRONOGRAMA' AND CHAVE = :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('CRONOGRAMA', :OLD.SEQ, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'CRONOGRAMA' AND CHAVE = :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_DEPTO BEFORE UPDATE OR INSERT OR DELETE ON ICFT.DEPTO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'DEPTO' AND CHAVE = :OLD.CLIENTE || :OLD.DEPTO;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('DEPTO', :OLD.CLIENTE || :OLD.DEPTO, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'DEPTO' AND CHAVE = :OLD.CLIENTE || :OLD.DEPTO;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_DESC_S_PROG BEFORE UPDATE OR INSERT OR DELETE ON ICFT.DESC_S_PROG FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'DESC_S_PROG' AND CHAVE = :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('DESC_S_PROG', :OLD.SEQ, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'DESC_S_PROG' AND CHAVE = :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_DISTR_CUSTO_REC BEFORE UPDATE OR INSERT OR DELETE ON ICFT.DISTRIB_CUSTO_RECEITA FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'DISTRIB_CUSTO_RECEITA' AND CHAVE = :OLD.CONTA || :OLD.CENTRO_CUSTO || :OLD.CENTRO_RECEITA;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('DISTRIB_CUSTO_RECEITA', :OLD.CONTA || :OLD.CENTRO_CUSTO || :OLD.CENTRO_RECEITA, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'DISTRIB_CUSTO_RECEITA' AND CHAVE = :OLD.CONTA || :OLD.CENTRO_CUSTO || :OLD.CENTRO_RECEITA;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_DISTR_FUNCIL_REC BEFORE UPDATE OR INSERT OR DELETE ON ICFT.DISTRIB_FUNCIL_RECEITA FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'DISTRIB_FUNCIL_RECEITA' AND CHAVE = :OLD.CONTA || :OLD.FUNCIL || :OLD.CENTRO_RECEITA;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('DISTRIB_FUNCIL_RECEITA', :OLD.CONTA || :OLD.FUNCIL || :OLD.CENTRO_RECEITA, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'DISTRIB_FUNCIL_RECEITA' AND CHAVE = :OLD.CONTA || :OLD.FUNCIL || :OLD.CENTRO_RECEITA;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_ESCALA BEFORE UPDATE OR INSERT OR DELETE ON ICFT.ESCALA FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'ESCALA' AND CHAVE = :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('ESCALA', :OLD.SEQ, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'ESCALA' AND CHAVE = :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_ESCALA_TIPO BEFORE UPDATE OR INSERT OR DELETE ON ICFT.ESCALA_TIPO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'ESCALA_TIPO' AND CHAVE = :OLD.TIPO;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('ESCALA_TIPO', :OLD.TIPO, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'ESCALA_TIPO' AND CHAVE = :OLD.TIPO;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_GRUPO BEFORE UPDATE OR INSERT OR DELETE ON ICFT.GRUPO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'GRUPO' AND CHAVE = :OLD.CLIENTE || :OLD.GRUPO;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('GRUPO', :OLD.CLIENTE || :OLD.GRUPO, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'GRUPO' AND CHAVE = :OLD.CLIENTE || :OLD.GRUPO;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_HIERARQ BEFORE UPDATE OR INSERT OR DELETE ON ICFT.HIERARQUIA FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'HIERARQUIA' AND CHAVE = :OLD.CLIENTE || :OLD.CLASSIF;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('HIERARQUIA', :OLD.CLIENTE || :OLD.CLASSIF, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'HIERARQUIA' AND CHAVE = :OLD.CLIENTE || :OLD.CLASSIF;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_IDENTIF BEFORE UPDATE OR INSERT OR DELETE ON ICFT.IDENTIF FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'IDENTIF' AND CHAVE = :OLD.CLIENTE || :OLD.USUÁRIO || :OLD.TIPO_IDENTIF || :OLD.IDENTIF;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('IDENTIF', :OLD.CLIENTE || :OLD.USUÁRIO || :OLD.TIPO_IDENTIF || :OLD.IDENTIF, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'IDENTIF' AND CHAVE = :OLD.CLIENTE || :OLD.USUÁRIO || :OLD.TIPO_IDENTIF || :OLD.IDENTIF;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_IP BEFORE UPDATE OR INSERT OR DELETE ON ICFT.IP FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'IP' AND CHAVE = :OLD.CLIENTE || :OLD.MÁQUINA || :OLD.REDE_CLIENTE || :OLD.REDE_IDENTIF || :OLD.IP;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('IP', :OLD.CLIENTE || :OLD.MÁQUINA || :OLD.REDE_CLIENTE || :OLD.REDE_IDENTIF || :OLD.IP, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'IP' AND CHAVE = :OLD.CLIENTE || :OLD.MÁQUINA || :OLD.REDE_CLIENTE || :OLD.REDE_IDENTIF || :OLD.IP;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_LICENÇA BEFORE UPDATE OR INSERT OR DELETE ON ICFT.LICENÇA FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'LICENÇA' AND CHAVE = :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('LICENÇA', :OLD.SEQ, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'LICENÇA' AND CHAVE = :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_MÁQUINA BEFORE UPDATE OR INSERT OR DELETE ON ICFT.MÁQUINA FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'MÁQUINA' AND CHAVE = :OLD.CLIENTE || :OLD.MÁQUINA;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('MÁQUINA', :OLD.CLIENTE || :OLD.MÁQUINA, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'MÁQUINA' AND CHAVE = :OLD.CLIENTE || :OLD.MÁQUINA;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_MÁQ_REC BEFORE UPDATE OR INSERT OR DELETE ON ICFT.MÁQUINA_RECURSO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'MÁQUINA_RECURSO' AND CHAVE = :OLD.CLIENTE || :OLD.MÁQUINA || :OLD.RECURSO;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('MÁQUINA_RECURSO', :OLD.CLIENTE || :OLD.MÁQUINA || :OLD.RECURSO, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'MÁQUINA_RECURSO' AND CHAVE = :OLD.CLIENTE || :OLD.MÁQUINA || :OLD.RECURSO;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_MEMO BEFORE UPDATE OR INSERT OR DELETE ON ICFT.MEMO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'MEMO' AND CHAVE = :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('MEMO', :OLD.SEQ, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'MEMO' AND CHAVE = :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_MEMO_SITUAÇÃO BEFORE UPDATE OR INSERT OR DELETE ON ICFT.MEMO_SITUAÇÃO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'MEMO_SITUAÇÃO' AND CHAVE = :OLD.SITUAÇÃO;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('MEMO_SITUAÇÃO', :OLD.SITUAÇÃO, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'MEMO_SITUAÇÃO' AND CHAVE = :OLD.SITUAÇÃO;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_MEMO_TIPO BEFORE UPDATE OR INSERT OR DELETE ON ICFT.MEMO_TIPO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'MEMO_TIPO' AND CHAVE = :OLD.TIPO;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('MEMO_TIPO', :OLD.TIPO, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'MEMO_TIPO' AND CHAVE = :OLD.TIPO;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_MOV BEFORE UPDATE OR INSERT OR DELETE ON ICFT.MOVIMENTO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'MOVIMENTO' AND CHAVE = :OLD.CONTA || :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('MOVIMENTO', :OLD.CONTA || :OLD.SEQ, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'MOVIMENTO' AND CHAVE = :OLD.CONTA || :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_PATCH BEFORE UPDATE OR INSERT OR DELETE ON ICFT.PATCH FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'PATCH' AND CHAVE = :OLD.CLIENTE || :OLD.PATCH;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('PATCH', :OLD.CLIENTE || :OLD.PATCH, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'PATCH' AND CHAVE = :OLD.CLIENTE || :OLD.PATCH;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_PLANO BEFORE UPDATE OR INSERT OR DELETE ON ICFT.PLANO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'PLANO' AND CHAVE = :OLD.COD;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('PLANO', :OLD.COD, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'PLANO' AND CHAVE = :OLD.COD;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_PONTO BEFORE UPDATE OR INSERT OR DELETE ON ICFT.PONTO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'PONTO' AND CHAVE = :OLD.CLIENTE || :OLD.PATCH || :OLD.PONTO;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('PONTO', :OLD.CLIENTE || :OLD.PATCH || :OLD.PONTO, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'PONTO' AND CHAVE = :OLD.CLIENTE || :OLD.PATCH || :OLD.PONTO;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_PROJETO BEFORE UPDATE OR INSERT OR DELETE ON ICFT.PROJETO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'PROJETO' AND CHAVE = :OLD.CLIENTE || :OLD.PROJETO;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('PROJETO', :OLD.CLIENTE || :OLD.PROJETO, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'PROJETO' AND CHAVE = :OLD.CLIENTE || :OLD.PROJETO;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_REAL BEFORE UPDATE OR INSERT OR DELETE ON ICFT.REALIZADO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'REALIZADO' AND CHAVE = :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('REALIZADO', :OLD.SEQ, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'REALIZADO' AND CHAVE = :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_RECURSO BEFORE UPDATE OR INSERT OR DELETE ON ICFT.RECURSO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'RECURSO' AND CHAVE = :OLD.RECURSO;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('RECURSO', :OLD.RECURSO, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'RECURSO' AND CHAVE = :OLD.RECURSO;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_REDE BEFORE UPDATE OR INSERT OR DELETE ON ICFT.REDE FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'REDE' AND CHAVE = :OLD.CLIENTE || :OLD.REDE;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('REDE', :OLD.CLIENTE || :OLD.REDE, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'REDE' AND CHAVE = :OLD.CLIENTE || :OLD.REDE;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_SERVIÇO BEFORE UPDATE OR INSERT OR DELETE ON ICFT.SERVIÇO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'SERVIÇO' AND CHAVE = :OLD.CLIENTE || :OLD.SERVIÇO;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('SERVIÇO', :OLD.CLIENTE || :OLD.SERVIÇO, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'SERVIÇO' AND CHAVE = :OLD.CLIENTE || :OLD.SERVIÇO;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_TAB_SÓCIO BEFORE UPDATE OR INSERT OR DELETE ON ICFT.TABELA_SÓCIO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'TABELA_SÓCIO' AND CHAVE = :OLD.PERÍODO || :OLD.SÓCIO;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('TABELA_SÓCIO', :OLD.PERÍODO || :OLD.SÓCIO, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'TABELA_SÓCIO' AND CHAVE = :OLD.PERÍODO || :OLD.SÓCIO;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_TAR_DEF BEFORE UPDATE OR INSERT OR DELETE ON ICFT.TAREFA_DEF FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'TAREFA_DEF' AND CHAVE = :OLD.TAREFA;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('TAREFA_DEF', :OLD.TAREFA, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'TAREFA_DEF' AND CHAVE = :OLD.TAREFA;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_TÉCNICO BEFORE UPDATE OR INSERT OR DELETE ON ICFT.TÉCNICO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'TÉCNICO' AND CHAVE = :OLD.TÉCNICO;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('TÉCNICO', :OLD.TÉCNICO, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'TÉCNICO' AND CHAVE = :OLD.TÉCNICO;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_TÉCNICO_MENU BEFORE UPDATE OR INSERT OR DELETE ON ICFT.TÉCNICO_MENU FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'TÉCNICO_MENU' AND CHAVE = :OLD.TÉCNICO || :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('TÉCNICO_MENU', :OLD.TÉCNICO || :OLD.SEQ, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'TÉCNICO_MENU' AND CHAVE = :OLD.TÉCNICO || :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_TIPO_DOC BEFORE UPDATE OR INSERT OR DELETE ON ICFT.TIPO_DOC FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'TIPO_DOC' AND CHAVE = :OLD.TIPO;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('TIPO_DOC', :OLD.TIPO, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'TIPO_DOC' AND CHAVE = :OLD.TIPO;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_TIPO_ID BEFORE UPDATE OR INSERT OR DELETE ON ICFT.TIPO_IDENTIF FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'TIPO_IDENTIF' AND CHAVE = :OLD.TIPO;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('TIPO_IDENTIF', :OLD.TIPO, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'TIPO_IDENTIF' AND CHAVE = :OLD.TIPO;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_TIPO_REC BEFORE UPDATE OR INSERT OR DELETE ON ICFT.TIPO_RECURSO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'TIPO_RECURSO' AND CHAVE = :OLD.TIPO;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('TIPO_RECURSO', :OLD.TIPO, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'TIPO_RECURSO' AND CHAVE = :OLD.TIPO;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_TIPO_SERV BEFORE UPDATE OR INSERT OR DELETE ON ICFT.TIPO_SERVIÇO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'TIPO_SERVIÇO' AND CHAVE = :OLD.TIPO;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('TIPO_SERVIÇO', :OLD.TIPO, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'TIPO_SERVIÇO' AND CHAVE = :OLD.TIPO;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_TIPO_TAR BEFORE UPDATE OR INSERT OR DELETE ON ICFT.TIPO_TAREFA FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'TIPO_TAREFA' AND CHAVE = :OLD.TIPO;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('TIPO_TAREFA', :OLD.TIPO, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'TIPO_TAREFA' AND CHAVE = :OLD.TIPO;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_TRANSAÇÃO BEFORE UPDATE OR INSERT OR DELETE ON ICFT.TRANSAÇÃO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'TRANSAÇÃO' AND CHAVE = :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('TRANSAÇÃO', :OLD.SEQ, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'TRANSAÇÃO' AND CHAVE = :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_USUÁRIO BEFORE UPDATE OR INSERT OR DELETE ON ICFT.USUÁRIO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'USUÁRIO' AND CHAVE = :OLD.CLIENTE || :OLD.USUÁRIO;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('USUÁRIO', :OLD.CLIENTE || :OLD.USUÁRIO, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'USUÁRIO' AND CHAVE = :OLD.CLIENTE || :OLD.USUÁRIO;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/


