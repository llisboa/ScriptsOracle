CREATE OR REPLACE TRIGGER BEF_SOCIO_CHK BEFORE INSERT OR UPDATE ON "SÓCIO" FOR EACH ROW 
DECLARE
  EMAIL VARCHAR2(1000);
  CRIT NUMBER(1,0);
  USUARIO VARCHAR2(2);
BEGIN
  -- VALIDAÇÃO EMAIL_RESIDENCIAL
  IF :NEW.EMAIL_RESIDENCIAL IS NOT NULL THEN
    :NEW.EMAIL_RESIDENCIAL  := LOWER(REPLACE(REPLACE(:NEW.EMAIL_RESIDENCIAL,' ',''),'..','.'));
    EMAIL                   := REGEXP_SUBSTR(:NEW.EMAIL_RESIDENCIAL, '^([a-z0-9._-]+)@([a-z0-9_-]+(\.[a-z0-9_-]+)+)$');
    IF (EMAIL               IS NULL) THEN
      RAISE_APPLICATION_ERROR(-20005,'Email Residencial Inválido');
    END IF;
  END IF;
  -- VALIDAÇÃO EMAIL_COMERCIAL_1
   IF :NEW.EMAIL_COMERCIAL_1 IS NOT NULL THEN
     :NEW.EMAIL_COMERCIAL_1  := LOWER(REPLACE(REPLACE(:NEW.EMAIL_COMERCIAL_1,' ',''),'..','.'));
     EMAIL                   := REGEXP_SUBSTR(:NEW.EMAIL_COMERCIAL_1, '^([a-z0-9._-]+)@([a-z0-9_-]+(\.[a-z0-9_-]+)+)$');
     IF (EMAIL               IS NULL) THEN
       RAISE_APPLICATION_ERROR(-20005,'Email Comercial 1 Inválido');
     END IF;
   END IF;
   -- VALIDAÇÃO EMAIL_COMERCIAL_2
   IF :NEW.EMAIL_COMERCIAL_2 IS NOT NULL THEN
     :NEW.EMAIL_COMERCIAL_2  := LOWER(REPLACE(REPLACE(:NEW.EMAIL_COMERCIAL_2,' ',''),'..','.'));
     EMAIL                   := REGEXP_SUBSTR(:NEW.EMAIL_COMERCIAL_2, '^([a-z0-9._-]+)@([a-z0-9_-]+(\.[a-z0-9_-]+)+)$');
     IF (EMAIL               IS NULL) THEN
       RAISE_APPLICATION_ERROR(-20005,'Email Comercial 2 Inválido');
     END IF;
   END IF;

  -- RETIRA OS ESPAÇOS DO INICIO OU DO FINAL DO CAMPO
  :NEW.CRM := TRIM(:NEW.CRM);

END;