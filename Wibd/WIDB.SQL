-------------------------------------------------------------------------------------
-- CRIAÇÃO DE SCRIPT PARA GERAR ESTRUTURA BÁSICA WIDB
-------------------------------------------------------------------------------------
ALTER TABLESPACE T_WIDB_DAT OFFLINE;
DROP TABLESPACE T_WIDB_DAT INCLUDING CONTENTS;

CREATE TABLESPACE T_WIDB_DAT DATAFILE 'D:\oraclexe\oradata\XE\WIDB.DBF' SIZE 100M REUSE
AUTOEXTEND ON NEXT 50M MAXSIZE UNLIMITED EXTENT MANAGEMENT LOCAL;

CREATE TABLE WIDB.GCC_NOTICIA (
             ID NUMBER(3,0),
             INF_TIPO VARCHAR2(10),
             POPUP NUMBER(1,0),
             POPUP_DURACAO NUMBER(2,0),
             INF_LOCAL NUMBER(1,0),
             NOVO_DURACAO NUMBER(2,0),
             NOTICIA_CHAMADA VARCHAR2(500),
             NOTICIA_TITULO VARCHAR2(200),
             NOTICIA_TEXTO VARCHAR2(4000),
             NOTICIA_IMG VARCHAR2(50),
             SOMENTE_POPUP NUMBER(1,0),
             SYS_MOMENTO_CRIA DATE,
             SYS_USUÁRIO_CRIA CHAR (20),
             SYS_LOCAL_CRIA CHAR (20),
             SYS_MOMENTO_ATUALIZA DATE,
             SYS_USUÁRIO_ATUALIZA CHAR (20),
             SYS_LOCAL_ATUALIZA CHAR(20),
             SYS_STATUS CHAR (1)
             ) TABLESPACE T_WIDB_DAT;

ALTER TABLE WIDB.GCC_NOTICIA ADD CONSTRAINT ID_GCC_NOTICIA
PRIMARY KEY (ID);

CREATE TABLE WIDB.SYS_CAD_LOG (
             SEQ NUMBER (10,0),
             NOME_TABELA VARCHAR2 (50),
             CHAVE CLOB,
             MOMENTO DATE,
	             USUÁRIO VARCHAR2 (20),
             LOCAL VARCHAR2 (20),
             AÇÃO VARCHAR2 (20)
             ) TABLESPACE T_WIDB_DAT;

ALTER TABLE WIDB.SYS_CAD_LOG ADD CONSTRAINT ID_CAD_LOG
PRIMARY KEY (SEQ);

CREATE TABLE WIDB.SYS_CONFIG_GLOBAL (
             PARAM VARCHAR2 (30),
             CONFIG VARCHAR2 (4000)
             ) TABLESPACE T_WIDB_DAT;

ALTER TABLE WIDB.SYS_CONFIG_GLOBAL ADD CONSTRAINT ID_CONFIG_GLOBAL
PRIMARY KEY (PARAM);

CREATE TABLE WIDB.SYS_DELETE (
             NOME_TABELA VARCHAR2 (50),
             CHAVE VARCHAR2 (150),
             MOMENTO DATE,
             USUÁRIO VARCHAR2 (20),
             LOCAL VARCHAR2 (20)
             ) TABLESPACE T_WIDB_DAT;

ALTER TABLE WIDB.SYS_DELETE ADD CONSTRAINT ID_DELETE
PRIMARY KEY (NOME_TABELA, CHAVE);

CREATE TABLE WIDB.SYS_LOCALID (
             NOME VARCHAR2 (15),
             CORRENTE NUMBER (5,0),
             PACOTE NUMBER (5,0),
             PACOTE_REC NUMBER (5,0),
             MOMENTO DATE,
             MOMENTO_REC DATE,
             MODELO NUMBER (5,0),
             OBS VARCHAR2 (255)
             ) TABLESPACE T_WIDB_DAT;

ALTER TABLE WIDB.SYS_LOCALID ADD CONSTRAINT ID_SYS_LOCAL
PRIMARY KEY (NOME);

CREATE TABLE WIDB.SYS_TABELA (
             NOME VARCHAR2 (50),
             CHAVE VARCHAR2 (3000),
             EXPR_PRIMÁRIA VARCHAR2 (3000),
             EXPR_APRESENTA VARCHAR2 (3000),
             CAMPOS VARCHAR2 (3000),
             RELAÇÕES_1_N VARCHAR2 (3000),
             NÍVEL NUMBER (5,0)
             ) TABLESPACE T_WIDB_DAT;

ALTER TABLE WIDB.SYS_TABELA ADD CONSTRAINT ID_SYS_TABELA
PRIMARY KEY (NOME);

CREATE TABLE WIDB.SYS_USUÁRIO (
             USUÁRIO VARCHAR2 (20),
             PARAM VARCHAR2 (30),
             CONFIG VARCHAR2 (4000)
             ) TABLESPACE T_WIDB_DAT;

ALTER TABLE WIDB.SYS_USUÁRIO ADD CONSTRAINT ID_SYS_USUÁRIO
PRIMARY KEY (USUÁRIO, PARAM);

CREATE OR REPLACE TRIGGER BEF_GCC_NOTICIA BEFORE UPDATE OR INSERT OR DELETE ON WIDB.GCC_NOTICIA FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'GCC_NOTICIA' AND CHAVE = :OLD.ID;
      IF TOT_DEL = 0 THEN
         INSERT INTO WIDB.SYS_DELETE VALUES ('GCC_NOTICIA', :OLD.ID, SYSDATE, USER, 'WIDB');
      ELSE
         UPDATE WIDB.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'WIDB' WHERE NOME_TABELA = 'GCC_NOTICIA' AND CHAVE = :OLD.ID;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'WIDB';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'WIDB';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/


CREATE USER PTAVORA IDENTIFIED BY XXXXXX
DEFAULT TABLESPACE T_WIDB_DAT
TEMPORARY TABLESPACE TEMP
PROFILE DEFAULT
ACCOUNT UNLOCK;
GRANT CREATE SESSION, EXECUTE ANY LIBRARY, EXECUTE ANY PROCEDURE TO PTAVORA;
GRANT SELECT, INSERT ON WIDB.SYS_CAD_LOG TO PTAVORA;
GRANT SELECT, INSERT ON WIDB.SYS_CONFIG_GLOBAL TO PTAVORA;
GRANT SELECT, INSERT ON WIDB.SYS_DELETE TO PTAVORA;
GRANT SELECT, INSERT ON WIDB.SYS_LOCALID TO PTAVORA;
GRANT SELECT, INSERT ON WIDB.SYS_TABELA TO PTAVORA;
GRANT SELECT, INSERT ON WIDB.SYS_USUÁRIO TO PTAVORA;
GRANT SELECT, INSERT, UPDATE, DELETE ON WIDB.GCC_NOTICIA TO PTAVORA;
