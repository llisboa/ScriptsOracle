-------------------------------------------------------------------------------------
-- CRIAÇÃO DE SCRIPT PARA REGERAR RESTRIÇÕES DE CHAVE PRIMÁRIA, RELACIONAMENTOS E TRIGGERS DE ICFT
-------------------------------------------------------------------------------------
DECLARE
        CURSOR RESTR IS SELECT TABLE_NAME, CONSTRAINT_NAME FROM USER_CONSTRAINTS WHERE OWNER = 'ICFT' ORDER BY DECODE(CONSTRAINT_TYPE,'P', 3, 'R', 2, 1);
        SQLCURSOR PLS_INTEGER;
BEGIN
        SQLCURSOR := DBMS_SQL.OPEN_CURSOR;
        FOR CUR IN RESTR LOOP
                BEGIN
                        DBMS_SQL.PARSE(SQLCURSOR, 'ALTER TABLE ICFT.' || CUR.TABLE_NAME || ' DROP CONSTRAINT ' || CUR.CONSTRAINT_NAME, DBMS_SQL.V7);
                EXCEPTION
                        WHEN OTHERS THEN
                                NULL;
                END;
        END LOOP;
        DBMS_SQL.CLOSE_CURSOR(SQLCURSOR);
END;
/

ALTER TABLE ICFT.LOTE ADD CONSTRAINT ID_LOTE
PRIMARY KEY (REF);

ALTER TABLE ICFT.LOTE_GRUPO ADD CONSTRAINT ID_LOTE_GRUPO
PRIMARY KEY (LOTE_REF, SEQ);

ALTER TABLE ICFT.LOTE_ITEM ADD CONSTRAINT ID_LOTE_ITEM
PRIMARY KEY (LOTE_REF, SEQ);

ALTER TABLE ICFT.PACKING_LIST ADD CONSTRAINT ID_PK_LIST
PRIMARY KEY (SEQ);

ALTER TABLE ICFT.PACKING_LIST_FAM ADD CONSTRAINT ID_PK_LIST_FAM
PRIMARY KEY (DOC_SEQ, SEQ);

ALTER TABLE ICFT.PACKING_LIST_FAM_LOTE ADD CONSTRAINT ID_PK_LIST_FAM_LOT
PRIMARY KEY (DOC_SEQ, DOC_FAMÍLIA_SEQ, SEQ);

ALTER TABLE ICFT.PADRONIZAÇÃO ADD CONSTRAINT ID_PADRÃO
PRIMARY KEY (SEQ, REF);

ALTER TABLE ICFT.PRODUTO ADD CONSTRAINT ID_PRODUTO
PRIMARY KEY (COD);

ALTER TABLE ICFT.PRODUTO_ESPECIF ADD CONSTRAINT ID_PROD_ESP
PRIMARY KEY (PRODUTO_COD, SEQ);

ALTER TABLE ICFT.SYS_CAD_LOG ADD CONSTRAINT ID_CAD_LOG
PRIMARY KEY (SEQ);

ALTER TABLE ICFT.SYS_CONFIG_GLOBAL ADD CONSTRAINT ID_CONFIG_GLOBAL
PRIMARY KEY (PARAM);

ALTER TABLE ICFT.SYS_DELETE ADD CONSTRAINT ID_DELETE
PRIMARY KEY (NOME_TABELA, CHAVE);

ALTER TABLE ICFT.SYS_LOCALID ADD CONSTRAINT ID_SYS_LOCAL
PRIMARY KEY (NOME);

ALTER TABLE ICFT.SYS_OCORRÊNCIA ADD CONSTRAINT ID_OCORRÊNCIA
PRIMARY KEY (SEQ);

ALTER TABLE ICFT.SYS_TABELA ADD CONSTRAINT ID_SYS_TABELA
PRIMARY KEY (NOME);

ALTER TABLE ICFT.SYS_USUÁRIO ADD CONSTRAINT ID_SYS_USUÁRIO
PRIMARY KEY (USUÁRIO);

ALTER TABLE ICFT.LOTE_GRUPO ADD CONSTRAINT LOTE$LOTE_GRUPO$01
FOREIGN KEY (LOTE_REF) REFERENCES ICFT.LOTE (REF);

ALTER TABLE ICFT.LOTE_ITEM ADD CONSTRAINT LOTE$LOTE_ITEM$01
FOREIGN KEY (LOTE_REF) REFERENCES ICFT.LOTE (REF);

ALTER TABLE ICFT.PACKING_LIST_FAM ADD CONSTRAINT PK_LIST$PK_LIST_FAM$01
FOREIGN KEY (DOC_SEQ) REFERENCES ICFT.PACKING_LIST (SEQ);

ALTER TABLE ICFT.PACKING_LIST_FAM_LOTE ADD CONSTRAINT PK_LIST_FAM$PK_LIST_FAM_LOT$02
FOREIGN KEY (DOC_SEQ, DOC_FAMÍLIA_SEQ) REFERENCES ICFT.PACKING_LIST_FAM (DOC_SEQ, SEQ);

ALTER TABLE ICFT.PRODUTO_ESPECIF ADD CONSTRAINT PRODUTO$PROD_ESP$01
FOREIGN KEY (PRODUTO_COD) REFERENCES ICFT.PRODUTO (COD);

CREATE OR REPLACE TRIGGER BEF_LOTE BEFORE UPDATE OR INSERT OR DELETE ON ICFT.LOTE FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'LOTE' AND CHAVE = :OLD.REF;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('LOTE', :OLD.REF, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'LOTE' AND CHAVE = :OLD.REF;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_LOTE_GRUPO BEFORE UPDATE OR INSERT OR DELETE ON ICFT.LOTE_GRUPO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'LOTE_GRUPO' AND CHAVE = :OLD.LOTE_REF || :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('LOTE_GRUPO', :OLD.LOTE_REF || :OLD.SEQ, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'LOTE_GRUPO' AND CHAVE = :OLD.LOTE_REF || :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_LOTE_ITEM BEFORE UPDATE OR INSERT OR DELETE ON ICFT.LOTE_ITEM FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'LOTE_ITEM' AND CHAVE = :OLD.LOTE_REF || :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('LOTE_ITEM', :OLD.LOTE_REF || :OLD.SEQ, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'LOTE_ITEM' AND CHAVE = :OLD.LOTE_REF || :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_PK_LIST BEFORE UPDATE OR INSERT OR DELETE ON ICFT.PACKING_LIST FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'PACKING_LIST' AND CHAVE = :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('PACKING_LIST', :OLD.SEQ, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'PACKING_LIST' AND CHAVE = :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_PK_LIST_FAM BEFORE UPDATE OR INSERT OR DELETE ON ICFT.PACKING_LIST_FAM FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'PACKING_LIST_FAM' AND CHAVE = :OLD.DOC_SEQ || :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('PACKING_LIST_FAM', :OLD.DOC_SEQ || :OLD.SEQ, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'PACKING_LIST_FAM' AND CHAVE = :OLD.DOC_SEQ || :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_PK_LIST_FAM_LOT BEFORE UPDATE OR INSERT OR DELETE ON ICFT.PACKING_LIST_FAM_LOTE FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'PACKING_LIST_FAM_LOTE' AND CHAVE = :OLD.DOC_SEQ || :OLD.DOC_FAMÍLIA_SEQ || :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('PACKING_LIST_FAM_LOTE', :OLD.DOC_SEQ || :OLD.DOC_FAMÍLIA_SEQ || :OLD.SEQ, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'PACKING_LIST_FAM_LOTE' AND CHAVE = :OLD.DOC_SEQ || :OLD.DOC_FAMÍLIA_SEQ || :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_PADRÃO BEFORE UPDATE OR INSERT OR DELETE ON ICFT.PADRONIZAÇÃO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'PADRONIZAÇÃO' AND CHAVE = :OLD.SEQ || :OLD.REF;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('PADRONIZAÇÃO', :OLD.SEQ || :OLD.REF, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'PADRONIZAÇÃO' AND CHAVE = :OLD.SEQ || :OLD.REF;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_PRODUTO BEFORE UPDATE OR INSERT OR DELETE ON ICFT.PRODUTO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'PRODUTO' AND CHAVE = :OLD.COD;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('PRODUTO', :OLD.COD, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'PRODUTO' AND CHAVE = :OLD.COD;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_PROD_ESP BEFORE UPDATE OR INSERT OR DELETE ON ICFT.PRODUTO_ESPECIF FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'PRODUTO_ESPECIF' AND CHAVE = :OLD.PRODUTO_COD || :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO ICFT.SYS_DELETE VALUES ('PRODUTO_ESPECIF', :OLD.PRODUTO_COD || :OLD.SEQ, SYSDATE, USER, 'ICFT');
      ELSE
         UPDATE ICFT.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'ICFT' WHERE NOME_TABELA = 'PRODUTO_ESPECIF' AND CHAVE = :OLD.PRODUTO_COD || :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'ICFT';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'ICFT';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/


