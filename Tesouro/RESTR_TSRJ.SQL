-------------------------------------------------------------------------------------
-- CRIAÇÃO DE SCRIPT PARA REGERAR RESTRIÇÕES DE CHAVE PRIMÁRIA, RELACIONAMENTOS E TRIGGERS DE TSRJ
-------------------------------------------------------------------------------------
DECLARE
        CURSOR RESTR IS SELECT TABLE_NAME, CONSTRAINT_NAME FROM USER_CONSTRAINTS WHERE OWNER = 'TSRJ' ORDER BY DECODE(CONSTRAINT_TYPE,'P', 3, 'R', 2, 1);
        SQLCURSOR PLS_INTEGER;
BEGIN
        SQLCURSOR := DBMS_SQL.OPEN_CURSOR;
        FOR CUR IN RESTR LOOP
                BEGIN
                        DBMS_SQL.PARSE(SQLCURSOR, 'ALTER TABLE TSRJ.' || CUR.TABLE_NAME || ' DROP CONSTRAINT ' || CUR.CONSTRAINT_NAME, DBMS_SQL.V7);
                EXCEPTION
                        WHEN OTHERS THEN
                                NULL;
                END;
        END LOOP;
        DBMS_SQL.CLOSE_CURSOR(SQLCURSOR);
END;
/

ALTER TABLE TSRJ.AGENDA ADD CONSTRAINT ID_AGEN
PRIMARY KEY (EMPRESA, SEQ);

ALTER TABLE TSRJ.AGENDA_ITEM ADD CONSTRAINT ID_AGEN_ITEM
PRIMARY KEY (EMPRESA, AGENDA, SEQ);

ALTER TABLE TSRJ.BANCO ADD CONSTRAINT ID_BCO
PRIMARY KEY (COD);

ALTER TABLE TSRJ.BANCO_CHEQUE ADD CONSTRAINT ID_BCO_CHQ
PRIMARY KEY (BANCO, CONTA_CORRENTE, TIPO);

ALTER TABLE TSRJ.BANCO_CONTA ADD CONSTRAINT ID_BCO_CTA
PRIMARY KEY (BANCO, CONTA_CORRENTE, TIPO);

ALTER TABLE TSRJ.CÂMBIO ADD CONSTRAINT ID_CAMB
PRIMARY KEY (DATA);

ALTER TABLE TSRJ.CENTRO_CUSTO ADD CONSTRAINT ID_CEN_CUST
PRIMARY KEY (EMPRESA, COD);

ALTER TABLE TSRJ.CHANCELA ADD CONSTRAINT ID_CHANC
PRIMARY KEY (COD);

ALTER TABLE TSRJ.CHEQUE ADD CONSTRAINT ID_CHQ
PRIMARY KEY (EMPRESA, TRANSAÇÃO, SEQ);

ALTER TABLE TSRJ.CHEQUES_CANCELADOS ADD CONSTRAINT ID_CHQ_CANC
PRIMARY KEY (BANCO, CONTA, TIPO, CHEQUE);

ALTER TABLE TSRJ.CONTA_IMPOSTO ADD CONSTRAINT ID_CTA_IMP
PRIMARY KEY (EMPRESA, CONTA);

ALTER TABLE TSRJ.D2_COMPENS_COM_DARF ADD CONSTRAINT ID_D2_COMP_C_DARF
PRIMARY KEY (EMPRESA, DARF_SEQ, SEQ);

ALTER TABLE TSRJ.D2_COMPENS_SEM_DARF ADD CONSTRAINT ID_D2_COMP_S_DARF
PRIMARY KEY (EMPRESA, SEQ);

ALTER TABLE TSRJ.D2_DARF ADD CONSTRAINT ID_D2_DARF
PRIMARY KEY (EMPRESA, SEQ);

ALTER TABLE TSRJ.D2_PARCELAMENTO ADD CONSTRAINT ID_D2_PARC
PRIMARY KEY (EMPRESA, SEQ);

ALTER TABLE TSRJ.D2_SUSPENSÃO ADD CONSTRAINT ID_D2_SUSP
PRIMARY KEY (EMPRESA, SEQ);

ALTER TABLE TSRJ.DCTF_CONTAS ADD CONSTRAINT ID_DCTF_CTAS
PRIMARY KEY (EMPRESA, CONTA);

ALTER TABLE TSRJ.DCTF_EXP ADD CONSTRAINT ID_DCTF_EXP
PRIMARY KEY (REGISTRO, CAMPO);

ALTER TABLE TSRJ.DCTF_GRUPO_TRIBUTO ADD CONSTRAINT ID_DCTR_GR_TRIB
PRIMARY KEY (COD_RECEITA);

ALTER TABLE TSRJ.DCTF_HEADER ADD CONSTRAINT ID_DCTF_HEAD
PRIMARY KEY (EMPRESA);

ALTER TABLE TSRJ.DIRF_TIPO_01 ADD CONSTRAINT ID_DIRF_TIP_1
PRIMARY KEY (CNPJ);

ALTER TABLE TSRJ.DIRF_TIPO_02 ADD CONSTRAINT ID_DIRF_TIP_1
PRIMARY KEY (DECL_CNPJ);

ALTER TABLE TSRJ.EMPRESA ADD CONSTRAINT ID_EMPR
PRIMARY KEY (NOME_EMPRESA);

ALTER TABLE TSRJ.GRUPO ADD CONSTRAINT ID_GRUP
PRIMARY KEY (COD);

ALTER TABLE TSRJ.HISTÓRICO_PADRÃO ADD CONSTRAINT ID_HIST_PADR
PRIMARY KEY (EMPRESA, COD,);

ALTER TABLE TSRJ.MATERIAL ADD CONSTRAINT ID_MAT
PRIMARY KEY (COD);

ALTER TABLE TSRJ.MATERIAL_ENTRADA ADD CONSTRAINT ID_MAT_ENT
PRIMARY KEY (EMPRESA, DATA, MATERIAL, FORNECEDOR);

ALTER TABLE TSRJ.MATERIAL_SAÍDA ADD CONSTRAINT ID_MAT_SAIDA
PRIMARY KEY (EMPRESA, DATA, MATERIAL, REQUERENTE);

ALTER TABLE TSRJ.PESSOA ADD CONSTRAINT ID_PESS
PRIMARY KEY (COD);

ALTER TABLE TSRJ.PESSOA_REF_PADRÃO ADD CONSTRAINT ID_PESS_REF_PADR
PRIMARY KEY (EMPRESA, PESSOA);

ALTER TABLE TSRJ.PLANO_CONTAS ADD CONSTRAINT ID_PLAN_CONT
PRIMARY KEY (EMPRESA, CONTA);

ALTER TABLE TSRJ.SYS_CONFIG_GLOBAL ADD CONSTRAINT ID_SYS_CFG_GLB
PRIMARY KEY (PARAM);

ALTER TABLE TSRJ.SYS_GRUPO_REL ADD CONSTRAINT ID_SYS_GRUP_REL
PRIMARY KEY (SEQ);

ALTER TABLE TSRJ.TIPO_DESPESA ADD CONSTRAINT ID_TIP_DESP
PRIMARY KEY (EMPRESA, COD);

ALTER TABLE TSRJ.TIPO_DOC ADD CONSTRAINT ID_TIP_DOC
PRIMARY KEY (COD);

ALTER TABLE TSRJ.TRANSAÇÃO ADD CONSTRAINT ID_TRAN
PRIMARY KEY (EMPRESA, SEQ);

ALTER TABLE TSRJ.TRANSAÇÃO_ITEM ADD CONSTRAINT ID_TRAN_IT
PRIMARY KEY (EMPRESA, TRANSAÇÃO, SEQ);

ALTER TABLE TSRJ.AGENDA_ITEM ADD CONSTRAINT AGEN$AGEN_ITEM
FOREIGN KEY (EMPRESA) REFERENCES TSRJ.AGENDA (EMPRESA) ON DELETE CASCADE;

ALTER TABLE TSRJ.AGENDA_ITEM ADD CONSTRAINT AGEN$AGEN_ITEM
FOREIGN KEY (AGENDA) REFERENCES TSRJ.AGENDA (SEQ) ON DELETE CASCADE;

ALTER TABLE TSRJ.BANCO_CONTA ADD CONSTRAINT BCO$BCO_CTA
FOREIGN KEY (BANCO) REFERENCES TSRJ.BANCO (COD) ON DELETE CASCADE;

ALTER TABLE TSRJ.CHEQUES_CANCELADOS ADD CONSTRAINT BCO_CHQ$CHQ_CANC
FOREIGN KEY (BANCO) REFERENCES TSRJ.BANCO_CHEQUE (BANCO);

ALTER TABLE TSRJ.CHEQUES_CANCELADOS ADD CONSTRAINT BCO_CHQ$CHQ_CANC
FOREIGN KEY (CONTA) REFERENCES TSRJ.BANCO_CHEQUE (CONTA_CORRENTE);

ALTER TABLE TSRJ.CHEQUES_CANCELADOS ADD CONSTRAINT BCO_CHQ$CHQ_CANC
FOREIGN KEY (TIPO) REFERENCES TSRJ.BANCO_CHEQUE (TIPO);

ALTER TABLE TSRJ.AGENDA_ITEM ADD CONSTRAINT BCO_CTA$AGEN_ITEM
FOREIGN KEY (BANCO) REFERENCES TSRJ.BANCO_CONTA (BANCO);

ALTER TABLE TSRJ.AGENDA_ITEM ADD CONSTRAINT BCO_CTA$AGEN_ITEM
FOREIGN KEY (CONTA_CORRENTE) REFERENCES TSRJ.BANCO_CONTA (CONTA_CORRENTE);

ALTER TABLE TSRJ.AGENDA_ITEM ADD CONSTRAINT BCO_CTA$AGEN_ITEM
FOREIGN KEY (TIPO) REFERENCES TSRJ.BANCO_CONTA (TIPO);

ALTER TABLE TSRJ.TRANSAÇÃO_ITEM ADD CONSTRAINT BCO_CTA$TRAN_IT
FOREIGN KEY (BANCO) REFERENCES TSRJ.BANCO_CONTA (BANCO);

ALTER TABLE TSRJ.TRANSAÇÃO_ITEM ADD CONSTRAINT BCO_CTA$TRAN_IT
FOREIGN KEY (CONTA_CORRENTE) REFERENCES TSRJ.BANCO_CONTA (CONTA_CORRENTE);

ALTER TABLE TSRJ.TRANSAÇÃO_ITEM ADD CONSTRAINT BCO_CTA$TRAN_IT
FOREIGN KEY (TIPO) REFERENCES TSRJ.BANCO_CONTA (TIPO);

ALTER TABLE TSRJ.AGENDA_ITEM ADD CONSTRAINT CEN_CUST$AGEN_ITEM
FOREIGN KEY (CENTRO_CUSTO_EMPRESA) REFERENCES TSRJ.CENTRO_CUSTO (EMPRESA);

ALTER TABLE TSRJ.AGENDA_ITEM ADD CONSTRAINT CEN_CUST$AGEN_ITEM
FOREIGN KEY (CENTRO_CUSTO) REFERENCES TSRJ.CENTRO_CUSTO (COD);

ALTER TABLE TSRJ.TRANSAÇÃO_ITEM ADD CONSTRAINT CEN_CUST$TRAN_IT
FOREIGN KEY (CENTRO_CUSTO_EMPRESA) REFERENCES TSRJ.CENTRO_CUSTO (EMPRESA);

ALTER TABLE TSRJ.TRANSAÇÃO_ITEM ADD CONSTRAINT CEN_CUST$TRAN_IT
FOREIGN KEY (CENTRO_CUSTO) REFERENCES TSRJ.CENTRO_CUSTO (COD);

ALTER TABLE TSRJ.AGENDA_ITEM ADD CONSTRAINT CHANC$AGEN_ITEM
FOREIGN KEY (CHANCELA) REFERENCES TSRJ.CHANCELA (COD);

ALTER TABLE TSRJ.BANCO_CONTA ADD CONSTRAINT CHANC$BCO_CTA
FOREIGN KEY (CHANCELA) REFERENCES TSRJ.CHANCELA (COD) ON DELETE CASCADE;

ALTER TABLE TSRJ.TRANSAÇÃO_ITEM ADD CONSTRAINT CHANC$TRAN_IT
FOREIGN KEY (CHANCELA) REFERENCES TSRJ.CHANCELA (COD);

ALTER TABLE TSRJ.PLANO_CONTAS ADD CONSTRAINT CTA_IMP$PLAN_CONT
FOREIGN KEY (EMPRESA) REFERENCES TSRJ.CONTA_IMPOSTO (EMPRESA) ON DELETE CASCADE;

ALTER TABLE TSRJ.PLANO_CONTAS ADD CONSTRAINT CTA_IMP$PLAN_CONT
FOREIGN KEY (CONTA) REFERENCES TSRJ.CONTA_IMPOSTO (CONTA) ON DELETE CASCADE;

ALTER TABLE TSRJ.D2_COMPENS_COM_DARF ADD CONSTRAINT D2_DARF$D2_COMP_C_DARF
FOREIGN KEY (EMPRESA) REFERENCES TSRJ.D2_DARF (EMPRESA) ON DELETE CASCADE;

ALTER TABLE TSRJ.D2_COMPENS_COM_DARF ADD CONSTRAINT D2_DARF$D2_COMP_C_DARF
FOREIGN KEY (DARF_SEQ) REFERENCES TSRJ.D2_DARF (SEQ) ON DELETE CASCADE;

ALTER TABLE TSRJ.D2_DARF ADD CONSTRAINT DCTR_GR_TRIB$D2_DARF
FOREIGN KEY (COD_REC) REFERENCES TSRJ.DCTF_GRUPO_TRIBUTO (COD_RECEITA) ON DELETE CASCADE;

ALTER TABLE TSRJ.D2_SUSPENSÃO ADD CONSTRAINT DCTR_GR_TRIB$D2_SUSP
FOREIGN KEY (COD_REC) REFERENCES TSRJ.DCTF_GRUPO_TRIBUTO (COD_RECEITA) ON DELETE CASCADE;

ALTER TABLE TSRJ.DCTF_CONTAS ADD CONSTRAINT DCTR_GR_TRIB$DCTF_CTAS
FOREIGN KEY (COD_RECEITA) REFERENCES TSRJ.DCTF_GRUPO_TRIBUTO (COD_RECEITA) ON DELETE CASCADE;

ALTER TABLE TSRJ.BANCO_CONTA ADD CONSTRAINT EMPR$BCO_CTA
FOREIGN KEY (EMPRESA) REFERENCES TSRJ.EMPRESA (NOME_EMPRESA) ON DELETE CASCADE;

ALTER TABLE TSRJ.CENTRO_CUSTO ADD CONSTRAINT EMPR$CEN_CUST
FOREIGN KEY (EMPRESA) REFERENCES TSRJ.EMPRESA (NOME_EMPRESA) ON DELETE CASCADE;

ALTER TABLE TSRJ.D2_COMPENS_SEM_DARF ADD CONSTRAINT EMPR$D2_COMP_S_DARF
FOREIGN KEY (EMPRESA) REFERENCES TSRJ.EMPRESA (NOME_EMPRESA) ON DELETE CASCADE;

ALTER TABLE TSRJ.D2_DARF ADD CONSTRAINT EMPR$D2_DARF
FOREIGN KEY (EMPRESA) REFERENCES TSRJ.EMPRESA (NOME_EMPRESA) ON DELETE CASCADE;

ALTER TABLE TSRJ.D2_PARCELAMENTO ADD CONSTRAINT EMPR$D2_PARC
FOREIGN KEY (EMPRESA) REFERENCES TSRJ.EMPRESA (NOME_EMPRESA) ON DELETE CASCADE;

ALTER TABLE TSRJ.D2_SUSPENSÃO ADD CONSTRAINT EMPR$D2_SUSP
FOREIGN KEY (EMPRESA) REFERENCES TSRJ.EMPRESA (NOME_EMPRESA) ON DELETE CASCADE;

ALTER TABLE TSRJ.DCTF_CONTAS ADD CONSTRAINT EMPR$DCTF_CTAS
FOREIGN KEY (EMPRESA) REFERENCES TSRJ.EMPRESA (NOME_EMPRESA) ON DELETE CASCADE;

ALTER TABLE TSRJ.DCTF_HEADER ADD CONSTRAINT EMPR$DCTF_HEAD
FOREIGN KEY (EMPRESA) REFERENCES TSRJ.EMPRESA (NOME_EMPRESA) ON DELETE CASCADE;

ALTER TABLE TSRJ.MATERIAL_ENTRADA ADD CONSTRAINT EMPR$MAT_ENT
FOREIGN KEY (EMPRESA) REFERENCES TSRJ.EMPRESA (NOME_EMPRESA) ON DELETE CASCADE;

ALTER TABLE TSRJ.MATERIAL_SAÍDA ADD CONSTRAINT EMPR$MAT_SAIDA
FOREIGN KEY (EMPRESA) REFERENCES TSRJ.EMPRESA (NOME_EMPRESA) ON DELETE CASCADE;

ALTER TABLE TSRJ.PESSOA_REF_PADRÃO ADD CONSTRAINT EMPR$PESS_REF_PADR
FOREIGN KEY (EMPRESA) REFERENCES TSRJ.EMPRESA (NOME_EMPRESA) ON DELETE CASCADE;

ALTER TABLE TSRJ.PLANO_CONTAS ADD CONSTRAINT EMPR$PLAN_CONT
FOREIGN KEY (EMPRESA) REFERENCES TSRJ.EMPRESA (NOME_EMPRESA) ON DELETE CASCADE;

ALTER TABLE TSRJ.TIPO_DESPESA ADD CONSTRAINT EMPR$TIP_DESP
FOREIGN KEY (EMPRESA) REFERENCES TSRJ.EMPRESA (NOME_EMPRESA) ON DELETE CASCADE;

ALTER TABLE TSRJ.TRANSAÇÃO ADD CONSTRAINT EMPR$TRAN
FOREIGN KEY (EMPRESA) REFERENCES TSRJ.EMPRESA (NOME_EMPRESA) ON DELETE CASCADE;

ALTER TABLE TSRJ.MATERIAL ADD CONSTRAINT GRUP$MAT
FOREIGN KEY (GRUPO) REFERENCES TSRJ.GRUPO (COD) ON DELETE CASCADE;

ALTER TABLE TSRJ.AGENDA_ITEM ADD CONSTRAINT HIST_PADR$AGEN_ITEM
FOREIGN KEY (HISTÓRICO_PADRÃO_EMPRESA) REFERENCES TSRJ.HISTÓRICO_PADRÃO (EMPRESA);

ALTER TABLE TSRJ.AGENDA_ITEM ADD CONSTRAINT HIST_PADR$AGEN_ITEM
FOREIGN KEY (HISTÓRICO_PADRÃO) REFERENCES TSRJ.HISTÓRICO_PADRÃO (COD);

ALTER TABLE TSRJ.TRANSAÇÃO_ITEM ADD CONSTRAINT HIST_PADR$TRAN_IT
FOREIGN KEY (HISTÓRICO_PADRÃO_EMPRESA) REFERENCES TSRJ.HISTÓRICO_PADRÃO (EMPRESA);

ALTER TABLE TSRJ.TRANSAÇÃO_ITEM ADD CONSTRAINT HIST_PADR$TRAN_IT
FOREIGN KEY (HISTÓRICO_PADRÃO) REFERENCES TSRJ.HISTÓRICO_PADRÃO (COD);

ALTER TABLE TSRJ.MATERIAL_ENTRADA ADD CONSTRAINT MAT$MAT_ENT
FOREIGN KEY (MATERIAL) REFERENCES TSRJ.MATERIAL (COD) ON DELETE CASCADE;

ALTER TABLE TSRJ.MATERIAL_SAÍDA ADD CONSTRAINT MAT$MAT_SAIDA
FOREIGN KEY (MATERIAL) REFERENCES TSRJ.MATERIAL (COD) ON DELETE CASCADE;

ALTER TABLE TSRJ.AGENDA ADD CONSTRAINT PESS$AGEN
FOREIGN KEY (BENEFICIÁRIO) REFERENCES TSRJ.PESSOA (COD);

ALTER TABLE TSRJ.AGENDA_ITEM ADD CONSTRAINT PESS$AGEN_ITEM
FOREIGN KEY (REQUERENTE) REFERENCES TSRJ.PESSOA (COD);

ALTER TABLE TSRJ.BANCO ADD CONSTRAINT PESS$BCO
FOREIGN KEY (NOME) REFERENCES TSRJ.PESSOA (COD);

ALTER TABLE TSRJ.MATERIAL_ENTRADA ADD CONSTRAINT PESS$MAT_ENT
FOREIGN KEY (FORNECEDOR) REFERENCES TSRJ.PESSOA (COD);

ALTER TABLE TSRJ.MATERIAL_SAÍDA ADD CONSTRAINT PESS$MAT_SAIDA
FOREIGN KEY (REQUERENTE) REFERENCES TSRJ.PESSOA (COD);

ALTER TABLE TSRJ.TRANSAÇÃO ADD CONSTRAINT PESS$TRAN
FOREIGN KEY (BENEFICIÁRIO) REFERENCES TSRJ.PESSOA (COD);

ALTER TABLE TSRJ.TRANSAÇÃO_ITEM ADD CONSTRAINT PESS$TRAN_IT
FOREIGN KEY (REQUERENTE) REFERENCES TSRJ.PESSOA (COD);

ALTER TABLE TSRJ.TRANSAÇÃO_ITEM ADD CONSTRAINT PESS$TRAN_IT
FOREIGN KEY (NF_EMISSOR) REFERENCES TSRJ.PESSOA (COD);

ALTER TABLE TSRJ.AGENDA_ITEM ADD CONSTRAINT PLAN_CONT$AGEN_ITEM
FOREIGN KEY (PLANO_CONTAS_EMPRESA) REFERENCES TSRJ.PLANO_CONTAS (EMPRESA);

ALTER TABLE TSRJ.AGENDA_ITEM ADD CONSTRAINT PLAN_CONT$AGEN_ITEM
FOREIGN KEY (PLANO_CONTAS) REFERENCES TSRJ.PLANO_CONTAS (CONTA);

ALTER TABLE TSRJ.BANCO_CONTA ADD CONSTRAINT PLAN_CONT$BCO_CTA
FOREIGN KEY (EMPRESA) REFERENCES TSRJ.PLANO_CONTAS (EMPRESA) ON DELETE CASCADE;

ALTER TABLE TSRJ.BANCO_CONTA ADD CONSTRAINT PLAN_CONT$BCO_CTA
FOREIGN KEY (PLANO_CONTA) REFERENCES TSRJ.PLANO_CONTAS (CONTA) ON DELETE CASCADE;

ALTER TABLE TSRJ.TRANSAÇÃO_ITEM ADD CONSTRAINT PLAN_CONT$TRAN_IT
FOREIGN KEY (PLANO_CONTAS_EMPRESA) REFERENCES TSRJ.PLANO_CONTAS (EMPRESA);

ALTER TABLE TSRJ.TRANSAÇÃO_ITEM ADD CONSTRAINT PLAN_CONT$TRAN_IT
FOREIGN KEY (PLANO_CONTAS) REFERENCES TSRJ.PLANO_CONTAS (CONTA);

ALTER TABLE TSRJ.AGENDA_ITEM ADD CONSTRAINT TIP_DESP$AGEN_ITEM
FOREIGN KEY (TIPO_DESPESA_EMPRESA) REFERENCES TSRJ.TIPO_DESPESA (EMPRESA);

ALTER TABLE TSRJ.AGENDA_ITEM ADD CONSTRAINT TIP_DESP$AGEN_ITEM
FOREIGN KEY (TIPO_DESPESA) REFERENCES TSRJ.TIPO_DESPESA (COD);

ALTER TABLE TSRJ.TRANSAÇÃO_ITEM ADD CONSTRAINT TIP_DESP$TRAN_IT
FOREIGN KEY (TIPO_DESPESA_EMPRESA) REFERENCES TSRJ.TIPO_DESPESA (EMPRESA);

ALTER TABLE TSRJ.TRANSAÇÃO_ITEM ADD CONSTRAINT TIP_DESP$TRAN_IT
FOREIGN KEY (TIPO_DESPESA) REFERENCES TSRJ.TIPO_DESPESA (COD);

ALTER TABLE TSRJ.AGENDA_ITEM ADD CONSTRAINT TIP_DOC$AGEN_ITEM
FOREIGN KEY (TIPO_DOC) REFERENCES TSRJ.TIPO_DOC (COD);

ALTER TABLE TSRJ.TRANSAÇÃO_ITEM ADD CONSTRAINT TIP_DOC$TRAN_IT
FOREIGN KEY (TIPO_DOC) REFERENCES TSRJ.TIPO_DOC (COD);

ALTER TABLE TSRJ.CHEQUE ADD CONSTRAINT TRAN$CHQ
FOREIGN KEY (EMPRESA) REFERENCES TSRJ.TRANSAÇÃO (EMPRESA) ON DELETE CASCADE;

ALTER TABLE TSRJ.CHEQUE ADD CONSTRAINT TRAN$CHQ
FOREIGN KEY (TRANSAÇÃO) REFERENCES TSRJ.TRANSAÇÃO (SEQ) ON DELETE CASCADE;

ALTER TABLE TSRJ.TRANSAÇÃO_ITEM ADD CONSTRAINT TRAN$TRAN_IT
FOREIGN KEY (EMPRESA) REFERENCES TSRJ.TRANSAÇÃO (EMPRESA) ON DELETE CASCADE;

ALTER TABLE TSRJ.TRANSAÇÃO_ITEM ADD CONSTRAINT TRAN$TRAN_IT
FOREIGN KEY (TRANSAÇÃO) REFERENCES TSRJ.TRANSAÇÃO (SEQ) ON DELETE CASCADE;

CREATE OR REPLACE TRIGGER BEF_AGEN BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.AGENDA FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'AGENDA' AND CHAVE = :OLD.EMPRESA || :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('AGENDA', :OLD.EMPRESA || :OLD.SEQ, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'AGENDA' AND CHAVE = :OLD.EMPRESA || :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_AGEN_ITEM BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.AGENDA_ITEM FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'AGENDA_ITEM' AND CHAVE = :OLD.EMPRESA || :OLD.AGENDA || :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('AGENDA_ITEM', :OLD.EMPRESA || :OLD.AGENDA || :OLD.SEQ, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'AGENDA_ITEM' AND CHAVE = :OLD.EMPRESA || :OLD.AGENDA || :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_BCO BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.BANCO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'BANCO' AND CHAVE = :OLD.COD;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('BANCO', :OLD.COD, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'BANCO' AND CHAVE = :OLD.COD;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_BCO_CHQ BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.BANCO_CHEQUE FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'BANCO_CHEQUE' AND CHAVE = :OLD.BANCO || :OLD.CONTA_CORRENTE || :OLD.TIPO;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('BANCO_CHEQUE', :OLD.BANCO || :OLD.CONTA_CORRENTE || :OLD.TIPO, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'BANCO_CHEQUE' AND CHAVE = :OLD.BANCO || :OLD.CONTA_CORRENTE || :OLD.TIPO;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_BCO_CTA BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.BANCO_CONTA FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'BANCO_CONTA' AND CHAVE = :OLD.BANCO || :OLD.CONTA_CORRENTE || :OLD.TIPO;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('BANCO_CONTA', :OLD.BANCO || :OLD.CONTA_CORRENTE || :OLD.TIPO, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'BANCO_CONTA' AND CHAVE = :OLD.BANCO || :OLD.CONTA_CORRENTE || :OLD.TIPO;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_CAMB BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.CÂMBIO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'CÂMBIO' AND CHAVE = :OLD.DATA;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('CÂMBIO', :OLD.DATA, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'CÂMBIO' AND CHAVE = :OLD.DATA;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_CEN_CUST BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.CENTRO_CUSTO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'CENTRO_CUSTO' AND CHAVE = :OLD.EMPRESA || :OLD.COD;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('CENTRO_CUSTO', :OLD.EMPRESA || :OLD.COD, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'CENTRO_CUSTO' AND CHAVE = :OLD.EMPRESA || :OLD.COD;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_CHANC BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.CHANCELA FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'CHANCELA' AND CHAVE = :OLD.COD;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('CHANCELA', :OLD.COD, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'CHANCELA' AND CHAVE = :OLD.COD;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_CHQ BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.CHEQUE FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'CHEQUE' AND CHAVE = :OLD.EMPRESA || :OLD.TRANSAÇÃO || :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('CHEQUE', :OLD.EMPRESA || :OLD.TRANSAÇÃO || :OLD.SEQ, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'CHEQUE' AND CHAVE = :OLD.EMPRESA || :OLD.TRANSAÇÃO || :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_CHQ_CANC BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.CHEQUES_CANCELADOS FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'CHEQUES_CANCELADOS' AND CHAVE = :OLD.BANCO || :OLD.CONTA || :OLD.TIPO || :OLD.CHEQUE;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('CHEQUES_CANCELADOS', :OLD.BANCO || :OLD.CONTA || :OLD.TIPO || :OLD.CHEQUE, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'CHEQUES_CANCELADOS' AND CHAVE = :OLD.BANCO || :OLD.CONTA || :OLD.TIPO || :OLD.CHEQUE;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_CTA_IMP BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.CONTA_IMPOSTO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'CONTA_IMPOSTO' AND CHAVE = :OLD.EMPRESA || :OLD.CONTA;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('CONTA_IMPOSTO', :OLD.EMPRESA || :OLD.CONTA, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'CONTA_IMPOSTO' AND CHAVE = :OLD.EMPRESA || :OLD.CONTA;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_D2_COMP_C_DARF BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.D2_COMPENS_COM_DARF FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'D2_COMPENS_COM_DARF' AND CHAVE = :OLD.EMPRESA || :OLD.DARF_SEQ || :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('D2_COMPENS_COM_DARF', :OLD.EMPRESA || :OLD.DARF_SEQ || :OLD.SEQ, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'D2_COMPENS_COM_DARF' AND CHAVE = :OLD.EMPRESA || :OLD.DARF_SEQ || :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_D2_COMP_S_DARF BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.D2_COMPENS_SEM_DARF FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'D2_COMPENS_SEM_DARF' AND CHAVE = :OLD.EMPRESA || :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('D2_COMPENS_SEM_DARF', :OLD.EMPRESA || :OLD.SEQ, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'D2_COMPENS_SEM_DARF' AND CHAVE = :OLD.EMPRESA || :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_D2_DARF BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.D2_DARF FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'D2_DARF' AND CHAVE = :OLD.EMPRESA || :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('D2_DARF', :OLD.EMPRESA || :OLD.SEQ, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'D2_DARF' AND CHAVE = :OLD.EMPRESA || :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_D2_PARC BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.D2_PARCELAMENTO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'D2_PARCELAMENTO' AND CHAVE = :OLD.EMPRESA || :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('D2_PARCELAMENTO', :OLD.EMPRESA || :OLD.SEQ, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'D2_PARCELAMENTO' AND CHAVE = :OLD.EMPRESA || :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_D2_SUSP BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.D2_SUSPENSÃO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'D2_SUSPENSÃO' AND CHAVE = :OLD.EMPRESA || :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('D2_SUSPENSÃO', :OLD.EMPRESA || :OLD.SEQ, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'D2_SUSPENSÃO' AND CHAVE = :OLD.EMPRESA || :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_DCTF_CTAS BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.DCTF_CONTAS FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'DCTF_CONTAS' AND CHAVE = :OLD.EMPRESA || :OLD.CONTA;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('DCTF_CONTAS', :OLD.EMPRESA || :OLD.CONTA, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'DCTF_CONTAS' AND CHAVE = :OLD.EMPRESA || :OLD.CONTA;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_DCTF_EXP BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.DCTF_EXP FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'DCTF_EXP' AND CHAVE = :OLD.REGISTRO || :OLD.CAMPO;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('DCTF_EXP', :OLD.REGISTRO || :OLD.CAMPO, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'DCTF_EXP' AND CHAVE = :OLD.REGISTRO || :OLD.CAMPO;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_DCTR_GR_TRIB BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.DCTF_GRUPO_TRIBUTO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'DCTF_GRUPO_TRIBUTO' AND CHAVE = :OLD.COD_RECEITA;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('DCTF_GRUPO_TRIBUTO', :OLD.COD_RECEITA, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'DCTF_GRUPO_TRIBUTO' AND CHAVE = :OLD.COD_RECEITA;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_DCTF_HEAD BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.DCTF_HEADER FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'DCTF_HEADER' AND CHAVE = :OLD.EMPRESA;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('DCTF_HEADER', :OLD.EMPRESA, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'DCTF_HEADER' AND CHAVE = :OLD.EMPRESA;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_DIRF_TIP_1 BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.DIRF_TIPO_01 FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'DIRF_TIPO_01' AND CHAVE = :OLD.CNPJ;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('DIRF_TIPO_01', :OLD.CNPJ, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'DIRF_TIPO_01' AND CHAVE = :OLD.CNPJ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_DIRF_TIP_1 BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.DIRF_TIPO_02 FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'DIRF_TIPO_02' AND CHAVE = :OLD.DECL_CNPJ;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('DIRF_TIPO_02', :OLD.DECL_CNPJ, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'DIRF_TIPO_02' AND CHAVE = :OLD.DECL_CNPJ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_EMPR BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.EMPRESA FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'EMPRESA' AND CHAVE = :OLD.NOME_EMPRESA;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('EMPRESA', :OLD.NOME_EMPRESA, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'EMPRESA' AND CHAVE = :OLD.NOME_EMPRESA;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_GRUP BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.GRUPO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'GRUPO' AND CHAVE = :OLD.COD;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('GRUPO', :OLD.COD, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'GRUPO' AND CHAVE = :OLD.COD;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_HIST_PADR BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.HISTÓRICO_PADRÃO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'HISTÓRICO_PADRÃO' AND CHAVE = :OLD.EMPRESA || :OLD.COD || :OLD.;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('HISTÓRICO_PADRÃO', :OLD.EMPRESA || :OLD.COD || :OLD., SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'HISTÓRICO_PADRÃO' AND CHAVE = :OLD.EMPRESA || :OLD.COD || :OLD.;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_MAT BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.MATERIAL FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'MATERIAL' AND CHAVE = :OLD.COD;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('MATERIAL', :OLD.COD, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'MATERIAL' AND CHAVE = :OLD.COD;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_MAT_ENT BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.MATERIAL_ENTRADA FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'MATERIAL_ENTRADA' AND CHAVE = :OLD.EMPRESA || :OLD.DATA || :OLD.MATERIAL || :OLD.FORNECEDOR;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('MATERIAL_ENTRADA', :OLD.EMPRESA || :OLD.DATA || :OLD.MATERIAL || :OLD.FORNECEDOR, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'MATERIAL_ENTRADA' AND CHAVE = :OLD.EMPRESA || :OLD.DATA || :OLD.MATERIAL || :OLD.FORNECEDOR;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_MAT_SAIDA BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.MATERIAL_SAÍDA FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'MATERIAL_SAÍDA' AND CHAVE = :OLD.EMPRESA || :OLD.DATA || :OLD.MATERIAL || :OLD.REQUERENTE;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('MATERIAL_SAÍDA', :OLD.EMPRESA || :OLD.DATA || :OLD.MATERIAL || :OLD.REQUERENTE, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'MATERIAL_SAÍDA' AND CHAVE = :OLD.EMPRESA || :OLD.DATA || :OLD.MATERIAL || :OLD.REQUERENTE;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_PESS BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.PESSOA FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'PESSOA' AND CHAVE = :OLD.COD;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('PESSOA', :OLD.COD, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'PESSOA' AND CHAVE = :OLD.COD;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_PESS_REF_PADR BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.PESSOA_REF_PADRÃO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'PESSOA_REF_PADRÃO' AND CHAVE = :OLD.EMPRESA || :OLD.PESSOA;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('PESSOA_REF_PADRÃO', :OLD.EMPRESA || :OLD.PESSOA, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'PESSOA_REF_PADRÃO' AND CHAVE = :OLD.EMPRESA || :OLD.PESSOA;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_PLAN_CONT BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.PLANO_CONTAS FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'PLANO_CONTAS' AND CHAVE = :OLD.EMPRESA || :OLD.CONTA;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('PLANO_CONTAS', :OLD.EMPRESA || :OLD.CONTA, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'PLANO_CONTAS' AND CHAVE = :OLD.EMPRESA || :OLD.CONTA;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_TIP_DESP BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.TIPO_DESPESA FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'TIPO_DESPESA' AND CHAVE = :OLD.EMPRESA || :OLD.COD;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('TIPO_DESPESA', :OLD.EMPRESA || :OLD.COD, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'TIPO_DESPESA' AND CHAVE = :OLD.EMPRESA || :OLD.COD;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_TIP_DOC BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.TIPO_DOC FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'TIPO_DOC' AND CHAVE = :OLD.COD;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('TIPO_DOC', :OLD.COD, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'TIPO_DOC' AND CHAVE = :OLD.COD;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_TRAN BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.TRANSAÇÃO FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'TRANSAÇÃO' AND CHAVE = :OLD.EMPRESA || :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('TRANSAÇÃO', :OLD.EMPRESA || :OLD.SEQ, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'TRANSAÇÃO' AND CHAVE = :OLD.EMPRESA || :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/

CREATE OR REPLACE TRIGGER BEF_TRAN_IT BEFORE UPDATE OR INSERT OR DELETE ON TSRJ.TRANSAÇÃO_ITEM FOR EACH ROW
DECLARE
   TOT_DEL INTEGER;
BEGIN
   IF DELETING Then
      SELECT COUNT(*) INTO TOT_DEL FROM SYS_DELETE WHERE NOME_TABELA = 'TRANSAÇÃO_ITEM' AND CHAVE = :OLD.EMPRESA || :OLD.TRANSAÇÃO || :OLD.SEQ;
      IF TOT_DEL = 0 THEN
         INSERT INTO TSRJ.SYS_DELETE VALUES ('TRANSAÇÃO_ITEM', :OLD.EMPRESA || :OLD.TRANSAÇÃO || :OLD.SEQ, SYSDATE, USER, 'TSRJ');
      ELSE
         UPDATE TSRJ.SYS_DELETE SET MOMENTO = SYSDATE, USUÁRIO = USER, LOCAL = 'TSRJ' WHERE NOME_TABELA = 'TRANSAÇÃO_ITEM' AND CHAVE = :OLD.EMPRESA || :OLD.TRANSAÇÃO || :OLD.SEQ;
      END IF;
   ELSE
      IF :NEW.SYS_STATUS = '+' THEN
         :NEW.SYS_STATUS := 'I';
      ELSIF :NEW.SYS_STATUS = '/' THEN
         :NEW.SYS_STATUS := 'A';
      ELSIF :NEW.SYS_STATUS = 'X' THEN
         :NEW.SYS_STATUS := '';
      ELSE
         IF INSERTING THEN
            :NEW.SYS_MOMENTO_CRIA := SYSDATE;
            :NEW.SYS_USUÁRIO_CRIA := USER;
            :NEW.SYS_LOCAL_CRIA := 'TSRJ';
            :NEW.SYS_MOMENTO_ATUALIZA := NULL;
            :NEW.SYS_USUÁRIO_ATUALIZA := NULL;
            :NEW.SYS_LOCAL_ATUALIZA := NULL;
            :NEW.SYS_STATUS := 'I';
         END IF;
         IF UPDATING THEN
            :NEW.SYS_MOMENTO_ATUALIZA := SYSDATE;
            :NEW.SYS_USUÁRIO_ATUALIZA := USER;
            :NEW.SYS_LOCAL_ATUALIZA := 'TSRJ';
            :NEW.SYS_STATUS := 'A';
         END IF;
      END IF;
   END IF;
END;
/


